;; Compile Options : /TML610112 /MS /near /Icommon /Imain /Iirq /Itimer /Iclock /Itbc /Iuart /Ii2c /SS 256 /SD /Oa /Ot /W 3 /Wc /Fa_output\_obj\ 
;; Version Number  : Ver.3.41.8
;; File Name       : main.c

	type (ML610112) 
	model small, near
	$$NVARmain segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$NTABmain segment table 2h #0h
	$$ADC_Read$main segment code 2h #0h
	$$DeviceSelection$main segment code 2h #0h
	$$FlashLEDs$main segment code 2h #0h
	$$GetUART_Command$main segment code 2h #0h
	$$I2C_Read$main segment code 2h #0h
	$$I2C_Write$main segment code 2h #0h
	$$Init_Ambient_Light_Sensor_5$main segment code 2h #0h
	$$Init_Ambient_Light_Sensor_6$main segment code 2h #0h
	$$Init_Ambient_Light_Sensor_7$main segment code 2h #0h
	$$Init_Ambient_Light_Sensor_8$main segment code 2h #0h
	$$Init_Ambient_Light_Sensor_9$main segment code 2h #0h
	$$Init_Hall_Effect_Sensors_1$main segment code 2h #0h
	$$Init_Hall_Effect_Sensors_2$main segment code 2h #0h
	$$Init_KMX61$main segment code 2h #0h
	$$Init_KX022$main segment code 2h #0h
	$$Init_Temperature_Sensor_20$main segment code 2h #0h
	$$Init_Temperature_Sensor_21$main segment code 2h #0h
	$$Init_Temperature_Sensor_22$main segment code 2h #0h
	$$Init_Temperature_Sensor_23$main segment code 2h #0h
	$$Init_UV_Sensor_10$main segment code 2h #0h
	$$Initialization$main segment code 2h #0h
	$$MainOp_Ambient_Light_Sensor_5$main segment code 2h #0h
	$$MainOp_Ambient_Light_Sensor_6$main segment code 2h #0h
	$$MainOp_Ambient_Light_Sensor_7$main segment code 2h #0h
	$$MainOp_Ambient_Light_Sensor_8$main segment code 2h #0h
	$$MainOp_Ambient_Light_Sensor_9$main segment code 2h #0h
	$$MainOp_Hall_Effect_Sensors_1$main segment code 2h #0h
	$$MainOp_Hall_Effect_Sensors_2$main segment code 2h #0h
	$$MainOp_KMX61$main segment code 2h #0h
	$$MainOp_KX022$main segment code 2h #0h
	$$MainOp_Temperature_Sensor_20$main segment code 2h #0h
	$$MainOp_Temperature_Sensor_21$main segment code 2h #0h
	$$MainOp_Temperature_Sensor_22$main segment code 2h #0h
	$$MainOp_Temperature_Sensor_23$main segment code 2h #0h
	$$MainOp_UV_Sensor_10$main segment code 2h #0h
	$$NOPms$main segment code 2h #0h
	$$OutputPWM$main segment code 2h #0h
	$$PortA_Low$main segment code 2h #0h
	$$PortB_Low$main segment code 2h #0h
	$$PortC_Low$main segment code 2h #0h
	$$PortD_Low$main segment code 2h #0h
	$$Read_GPS$main segment code 2h #0h
	$$ReverseBits$main segment code 2h #0h
	$$SensorInitialization$main segment code 2h #0h
	$$SetOSC$main segment code 2h #0h
	$$TAB$$S139$main segment table 2h #0h
	$$TAB$$S143$main segment table 2h #0h
	$$TAB$$S145$main segment table 2h #0h
	$$TAB$$S309$main segment table 2h #0h
	$$TAB$$S318$main segment table 2h #0h
	$$TAB$$S327$main segment table 2h #0h
	$$TAB$$S329$main segment table 2h #0h
	$$TAB$$S333$main segment table 2h #0h
	$$TAB$$S335$main segment table 2h #0h
	$$TAB$$S346$main segment table 2h #0h
	$$TAB$$S348$main segment table 2h #0h
	$$TAB$$S362$main segment table 2h #0h
	$$TAB$$S364$main segment table 2h #0h
	$$TAB$$S366$main segment table 2h #0h
	$$TAB$$S368$main segment table 2h #0h
	$$TAB$$S370$main segment table 2h #0h
	$$TAB$$S383$main segment table 2h #0h
	$$TAB$$S433$main segment table 2h #0h
	$$TAB$$S435$main segment table 2h #0h
	$$TAB$$S437$main segment table 2h #0h
	$$TAB$$S440$main segment table 2h #0h
	$$TAB$$S442$main segment table 2h #0h
	$$TAB$$S444$main segment table 2h #0h
	$$TAB$$S447$main segment table 2h #0h
	$$TAB$$S449$main segment table 2h #0h
	$$TAB$$S451$main segment table 2h #0h
	$$TAB$$S454$main segment table 2h #0h
	$$TAB$$S456$main segment table 2h #0h
	$$TAB$$S47$main segment table 2h #0h
	$$TAB$$S54$main segment table 2h #0h
	$$TABBH1710FVC_CONT_H_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_CONT_L_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_CONT_M_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_ONET_H_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_ONET_L_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_ONET_M_RES_MOD$main segment table 2h #0h
	$$TABBH1710FVC_RESET$main segment table 2h #0h
	$$TABBH1721FVC_CONT_A_RES_MOD$main segment table 2h #0h
	$$TABBH1721FVC_CONT_H_RES_MOD$main segment table 2h #0h
	$$TABBH1721FVC_CONT_L_RES_MOD$main segment table 2h #0h
	$$TABBH1730FVC_CMD_RESET_INT_OUT$main segment table 2h #0h
	$$TABBH1730FVC_CMD_START_MIM$main segment table 2h #0h
	$$TABBH1730FVC_CMD_STOP_MIM$main segment table 2h #0h
	$$TABBH1730FVC_CMD_SW_RESET$main segment table 2h #0h
	$$TABBH1730FVC_REG_CONTROL$main segment table 2h #0h
	$$TABBH1730FVC_REG_DATA0HIGH$main segment table 2h #0h
	$$TABBH1730FVC_REG_DATA0LOW$main segment table 2h #0h
	$$TABBH1730FVC_REG_DATA1HIGH$main segment table 2h #0h
	$$TABBH1730FVC_REG_DATA1LOW$main segment table 2h #0h
	$$TABBH1730FVC_REG_GAIN$main segment table 2h #0h
	$$TABBH1730FVC_REG_ID$main segment table 2h #0h
	$$TABBH1730FVC_REG_INTERRUPT$main segment table 2h #0h
	$$TABBH1730FVC_REG_THHHIGH$main segment table 2h #0h
	$$TABBH1730FVC_REG_THHLOW$main segment table 2h #0h
	$$TABBH1730FVC_REG_THLHIGH$main segment table 2h #0h
	$$TABBH1730FVC_REG_THLLOW$main segment table 2h #0h
	$$TABBH1730FVC_REG_TIMING$main segment table 2h #0h
	$$TABBH1780GLI_REG_CONTROL$main segment table 2h #0h
	$$TABBH1780GLI_REG_DATAHIGH$main segment table 2h #0h
	$$TABBH1780GLI_REG_DATALOW$main segment table 2h #0h
	$$TABBH1780GLI_REG_MFG_ID$main segment table 2h #0h
	$$TABBH1780GLI_REG_PART_ID$main segment table 2h #0h
	$$TABBH17xxFVC_ADDR_1$main segment table 2h #0h
	$$TABBH17xxFVC_ADDR_2$main segment table 2h #0h
	$$TABBH17xxFVC_PWR_DOWN$main segment table 2h #0h
	$$TABBH17xxFVC_PWR_ON$main segment table 2h #0h
	$$TABKMX61_ACCEL_XOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_XOUT_L$main segment table 2h #0h
	$$TABKMX61_ACCEL_YOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_YOUT_L$main segment table 2h #0h
	$$TABKMX61_ACCEL_ZOUT_H$main segment table 2h #0h
	$$TABKMX61_ACCEL_ZOUT_L$main segment table 2h #0h
	$$TABKMX61_BTH$main segment table 2h #0h
	$$TABKMX61_BTSC$main segment table 2h #0h
	$$TABKMX61_BUF_CLEAR$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL1$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL1_CFGDAT$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL2$main segment table 2h #0h
	$$TABKMX61_BUF_CTRL2_CFGDAT$main segment table 2h #0h
	$$TABKMX61_BUF_READ$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_H$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_L$main segment table 2h #0h
	$$TABKMX61_BUF_STATUS_REG$main segment table 2h #0h
	$$TABKMX61_BUF_THRESH_H$main segment table 2h #0h
	$$TABKMX61_BUF_THRESH_L$main segment table 2h #0h
	$$TABKMX61_CNTL1$main segment table 2h #0h
	$$TABKMX61_CNTL1_CFGDAT$main segment table 2h #0h
	$$TABKMX61_CNTL2$main segment table 2h #0h
	$$TABKMX61_CNTL2_CFGDAT$main segment table 2h #0h
	$$TABKMX61_COTR$main segment table 2h #0h
	$$TABKMX61_I2C_ADDR$main segment table 2h #0h
	$$TABKMX61_INC1$main segment table 2h #0h
	$$TABKMX61_INC2$main segment table 2h #0h
	$$TABKMX61_INC3$main segment table 2h #0h
	$$TABKMX61_INL$main segment table 2h #0h
	$$TABKMX61_INS1$main segment table 2h #0h
	$$TABKMX61_INS2$main segment table 2h #0h
	$$TABKMX61_MAG_XOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_XOUT_L$main segment table 2h #0h
	$$TABKMX61_MAG_YOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_YOUT_L$main segment table 2h #0h
	$$TABKMX61_MAG_ZOUT_H$main segment table 2h #0h
	$$TABKMX61_MAG_ZOUT_L$main segment table 2h #0h
	$$TABKMX61_ODCNTL$main segment table 2h #0h
	$$TABKMX61_ODCNTL_CFGDAT$main segment table 2h #0h
	$$TABKMX61_SELF_TEST$main segment table 2h #0h
	$$TABKMX61_SELF_TEST_CFGDAT$main segment table 2h #0h
	$$TABKMX61_SN_1$main segment table 2h #0h
	$$TABKMX61_SN_2$main segment table 2h #0h
	$$TABKMX61_SN_3$main segment table 2h #0h
	$$TABKMX61_SN_4$main segment table 2h #0h
	$$TABKMX61_STATUS_REG$main segment table 2h #0h
	$$TABKMX61_STBY_REG$main segment table 2h #0h
	$$TABKMX61_TEMP_EN_CNTL$main segment table 2h #0h
	$$TABKMX61_TEMP_EN_CNTL_CFGDAT$main segment table 2h #0h
	$$TABKMX61_TEMP_OUT_H$main segment table 2h #0h
	$$TABKMX61_TEMP_OUT_L$main segment table 2h #0h
	$$TABKMX61_WHO_AM_I$main segment table 2h #0h
	$$TABKMX61_WUFC$main segment table 2h #0h
	$$TABKMX61_WUFTH$main segment table 2h #0h
	$$TABKMX61_XOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_XOUT_HPF_L$main segment table 2h #0h
	$$TABKMX61_YOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_YOUT_HPF_L$main segment table 2h #0h
	$$TABKMX61_ZOUT_HPF_H$main segment table 2h #0h
	$$TABKMX61_ZOUT_HPF_L$main segment table 2h #0h
	$$TABKX022_ATH$main segment table 2h #0h
	$$TABKX022_BUF_CLEAR$main segment table 2h #0h
	$$TABKX022_BUF_CNTL1$main segment table 2h #0h
	$$TABKX022_BUF_CNTL2$main segment table 2h #0h
	$$TABKX022_BUF_READ$main segment table 2h #0h
	$$TABKX022_BUF_STATUS_1$main segment table 2h #0h
	$$TABKX022_BUF_STATUS_2$main segment table 2h #0h
	$$TABKX022_CNTL1$main segment table 2h #0h
	$$TABKX022_CNTL1_CFGDAT$main segment table 2h #0h
	$$TABKX022_CNTL2$main segment table 2h #0h
	$$TABKX022_CNTL3$main segment table 2h #0h
	$$TABKX022_CNTL3_CFGDAT$main segment table 2h #0h
	$$TABKX022_COTR$main segment table 2h #0h
	$$TABKX022_FTD$main segment table 2h #0h
	$$TABKX022_HYST_SET$main segment table 2h #0h
	$$TABKX022_I2C_ADDR$main segment table 2h #0h
	$$TABKX022_INC1$main segment table 2h #0h
	$$TABKX022_INC2$main segment table 2h #0h
	$$TABKX022_INC3$main segment table 2h #0h
	$$TABKX022_INC4$main segment table 2h #0h
	$$TABKX022_INC5$main segment table 2h #0h
	$$TABKX022_INC6$main segment table 2h #0h
	$$TABKX022_INS1$main segment table 2h #0h
	$$TABKX022_INS2$main segment table 2h #0h
	$$TABKX022_INS3$main segment table 2h #0h
	$$TABKX022_INT_REL$main segment table 2h #0h
	$$TABKX022_LP_CNTL$main segment table 2h #0h
	$$TABKX022_ODCNTL$main segment table 2h #0h
	$$TABKX022_ODCNTL_CFGDAT$main segment table 2h #0h
	$$TABKX022_SELF_TEST$main segment table 2h #0h
	$$TABKX022_STAT$main segment table 2h #0h
	$$TABKX022_STD$main segment table 2h #0h
	$$TABKX022_TDTC$main segment table 2h #0h
	$$TABKX022_TDTRC$main segment table 2h #0h
	$$TABKX022_TILT_ANGLE_HL$main segment table 2h #0h
	$$TABKX022_TILT_ANGLE_LL$main segment table 2h #0h
	$$TABKX022_TILT_TIMER$main segment table 2h #0h
	$$TABKX022_TILT_TIMER_CFGDAT$main segment table 2h #0h
	$$TABKX022_TLT$main segment table 2h #0h
	$$TABKX022_TSCP$main segment table 2h #0h
	$$TABKX022_TSPP$main segment table 2h #0h
	$$TABKX022_TTH$main segment table 2h #0h
	$$TABKX022_TTL$main segment table 2h #0h
	$$TABKX022_TWS$main segment table 2h #0h
	$$TABKX022_WHO_AM_I$main segment table 2h #0h
	$$TABKX022_WUFC$main segment table 2h #0h
	$$TABKX022_XHPH$main segment table 2h #0h
	$$TABKX022_XHPL$main segment table 2h #0h
	$$TABKX022_XOUTH$main segment table 2h #0h
	$$TABKX022_XOUTL$main segment table 2h #0h
	$$TABKX022_YHPH$main segment table 2h #0h
	$$TABKX022_YHPL$main segment table 2h #0h
	$$TABKX022_YOUTH$main segment table 2h #0h
	$$TABKX022_YOUTL$main segment table 2h #0h
	$$TABKX022_ZHPH$main segment table 2h #0h
	$$TABKX022_ZHPL$main segment table 2h #0h
	$$TABKX022_ZOUTH$main segment table 2h #0h
	$$TABKX022_ZOUTL$main segment table 2h #0h
	$$TABProx_ModeCTR$main segment table 2h #0h
	$$TABProx_PS_LSB$main segment table 2h #0h
	$$TAB_uartSetParam$main segment table 2h #0h
	$$_funcI2CFin$main segment code 2h #0h
	$$_funcUartFin$main segment code 2h #0h
	$$_intADC$main segment code 2h #0h
	$$_intI2c$main segment code 2h #0h
	$$_intUart$main segment code 2h #0h
	$$clearAllGPSVariables$main segment code 2h #0h
	$$main$main segment code 2h #0h
	$$main_clrWDT$main segment code 2h #0h
	$$main_reqNotHalt$main segment code 2h #0h
	$$parseGGA$main segment code 2h #0h
	$$parseGLL$main segment code 2h #0h
	$$parseGSA$main segment code 2h #0h
	$$parseGSV$main segment code 2h #0h
	$$parseRMC$main segment code 2h #0h
	$$parseVTG$main segment code 2h #0h
	$$readChar$main segment code 2h #0h
	$$readCharToInt$main segment code 2h #0h
	$$write$main segment code 2h #0h
	$$NTABADC_Read$main segment table 2h #0h
	$$NTABSensorInitialization$main segment table 2h #0h
	STACKSEG 0100h
CVERSION 3.41.8
CGLOBAL 01H 03H 0000H "Init_Hall_Effect_Sensors_1" 08H 02H 0D8H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Hall_Effect_Sensors_2" 08H 02H 0D7H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "clearAllGPSVariables" 08H 02H 0ECH 00H 81H 0eH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Hall_Effect_Sensors_1" 08H 02H 0CAH 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Hall_Effect_Sensors_2" 08H 02H 0C9H 00H 81H 06H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOPms" 08H 02H 0C4H 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Temperature_Sensor_20" 08H 02H 0D3H 00H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Temperature_Sensor_21" 08H 02H 0D4H 00H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Temperature_Sensor_22" 08H 02H 0D5H 00H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Temperature_Sensor_23" 08H 02H 0D6H 00H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_clrWDT" 08H 02H 0B3H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_funcUartFin" 08H 02H 0BEH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_reqNotHalt" 08H 02H 0C0H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_UV_Sensor_10" 08H 02H 0D0H 00H 81H 14H 00H 00H 07H
CGLOBAL 01H 03H 0000H "DeviceSelection" 08H 02H 0C7H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_KX022" 08H 02H 0DFH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "GetUART_Command" 08H 02H 0F0H 00H 81H 16H 00H 00H 07H
CGLOBAL 01H 03H 0000H "readCharToInt" 08H 02H 0EEH 00H 81H 0eH 00H 00H 03H
CSGLOBAL 03H 0000H "Initialization" 08H 02H 0B4H 00H 81H 04H 00H 00H 07H
CGLOBAL 01H 03H 0000H "readChar" 08H 02H 0EDH 00H 81H 04H 00H 00H 00H
CGLOBAL 01H 03H 0000H "MainOp_KMX61" 08H 02H 0D2H 00H 81H 22H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Temperature_Sensor_20" 08H 02H 0E1H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Temperature_Sensor_21" 08H 02H 0E2H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Temperature_Sensor_22" 08H 02H 0E3H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main" 08H 02H 0F1H 00H 80H 00H 00H 00H 01H
CGLOBAL 01H 03H 0000H "Init_Temperature_Sensor_23" 08H 02H 0E4H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_UV_Sensor_10" 08H 02H 0DEH 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_intUart" 08H 02H 0C1H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "SensorInitialization" 08H 02H 0C8H 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "I2C_Write" 08H 02H 0BDH 00H 83H 10H 00H 00H 07H
CGLOBAL 01H 03H 0000H "OutputPWM" 08H 02H 0EFH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortD_Low" 08H 02H 0B9H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_intI2c" 08H 02H 0C2H 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseGGA" 08H 02H 0E6H 00H 83H 38H 00H 00H 07H
CGLOBAL 01H 03H 0000H "write" 08H 02H 0BAH 00H 83H 08H 00H 00H 01H
CSGLOBAL 03H 0000H "SetOSC" 08H 02H 0B5H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseGLL" 08H 02H 0E7H 00H 83H 30H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseGSA" 08H 02H 0E9H 00H 83H 28H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseRMC" 08H 02H 0EAH 00H 83H 28H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseGSV" 08H 02H 0E8H 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortC_Low" 08H 02H 0B8H 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "_intADC" 08H 02H 0C3H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "parseVTG" 08H 02H 0EBH 00H 83H 28H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Read_GPS" 08H 02H 0E5H 00H 81H 04H 00H 00H 01H
CGLOBAL 01H 03H 0000H "PortB_Low" 08H 02H 0B7H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "I2C_Read" 08H 02H 0BCH 00H 83H 10H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ADC_Read" 08H 02H 0BBH 00H 81H 04H 00H 00H 01H
CGLOBAL 01H 03H 0000H "MainOp_KX022" 08H 02H 0D1H 00H 81H 22H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Ambient_Light_Sensor_5" 08H 02H 0D9H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Ambient_Light_Sensor_6" 08H 02H 0DAH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Ambient_Light_Sensor_7" 08H 02H 0DBH 00H 83H 0cH 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Ambient_Light_Sensor_8" 08H 02H 0DCH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "Init_Ambient_Light_Sensor_9" 08H 02H 0DDH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Low" 08H 02H 0B6H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 02H 0000H "ReverseBits" 08H 02H 0C5H 00H 80H 00H 00H 00H 00H
CSGLOBAL 03H 0000H "_funcI2CFin" 08H 02H 0BFH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 02H 0000H "FlashLEDs" 08H 02H 0C6H 00H 80H 00H 00H 00H 00H
CGLOBAL 01H 03H 0000H "Init_KMX61" 08H 02H 0E0H 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Ambient_Light_Sensor_8" 08H 02H 0CEH 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Ambient_Light_Sensor_9" 08H 02H 0CFH 00H 81H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Ambient_Light_Sensor_5" 08H 02H 0CBH 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Ambient_Light_Sensor_6" 08H 02H 0CCH 00H 81H 0aH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MainOp_Ambient_Light_Sensor_7" 08H 02H 0CDH 00H 81H 0eH 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0005H 000CH 00000016H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "_Mode" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000002H "_Handle" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "_Buf" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "_Bend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000008H "_Next" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000AH "_Rend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000CH "_Rsave" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "_Wend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000010H "_Back" 05H 01H 02H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000012H "_Cbuf" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000013H "_Nback" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000014H "_Tmpnam" 04H 03H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0004H 0001H 00000004H "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "_Off" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0003H 0006H 0000000AH "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "br" 02H 00H 02H
CSTRUCTMEM 42H 00000001H 00000004H "lg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000005H "pt" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000006H "stp" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000007H "neg" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000008H "dir" 02H 00H 00H
CSTRUCTTAG 0000H 0000H 0002H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0001H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0006H 0006H 00000006H "_Notag"
CUNIONMEM 42H 00000001H "_uchar" 02H 00H 00H
CUNIONMEM 42H 00000006H "_ucharArr" 05H 01H 06H 00H 00H 00H
CUNIONMEM 42H 00000002H "_uint" 02H 00H 01H
CUNIONMEM 42H 00000006H "_uintArr" 05H 01H 03H 00H 00H 01H
CUNIONMEM 43H 00000006H "_intArr" 05H 01H 03H 00H 00H 01H
CUNIONMEM 43H 00000004H "_float" 02H 00H 03H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "tUartSetParam" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "cbfUart" 0AH 03H 00H 02H 2EH 00H 00H 00H 00H 00H 07H
CTYPEDEF 0000H 0000H 43H "fpos_t" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "cbfI2c" 0AH 03H 00H 02H 43H 00H 00H 00H 00H 00H 07H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 01H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 00H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 03H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 02H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "FILE" 04H 00H 05H 05H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_SELF_TEST" 02H 00H 00H
CSGLOBAL 42H 0001H "KnotsUnit" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgUartFin" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_WUFC" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1780GLI_REG_PART_ID" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_CMD_RESET_INT_OUT" 02H 00H 00H
CSGLOBAL 42H 0002H "i" 02H 00H 01H
CSGLOBAL 42H 0002H "j" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_INT_REL" 02H 00H 00H
CSGLOBAL 43H 0008H "KnotsSpeed" 02H 00H 09H
CGLOBAL 01H 00H 0001H "BH1780GLI_REG_DATALOW" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1721FVC_CONT_A_RES_MOD" 02H 00H 00H
CSGLOBAL 43H 0008H "Latitude" 02H 00H 09H
CSGLOBAL 43H 0008H "HomeTolerance" 02H 00H 09H
CGLOBAL 01H 00H 0001H "BH1710FVC_CONT_H_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1721FVC_CONT_H_RES_MOD" 02H 00H 00H
CSGLOBAL 42H 0002H "Eleveation" 02H 00H 01H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_THHHIGH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_EN_CNTL_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0002H "hexToDecOffset" 02H 00H 01H
CSGLOBAL 42H 0001H "ReceiverState" 02H 00H 00H
CSGLOBAL 42H 0001H "LonDir" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL1_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0002H "CheckPointIndex" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_CNTL2_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0002H "PWMPeriod" 02H 00H 01H
CGLOBAL 01H 00H 0001H "BH1780GLI_REG_DATAHIGH" 02H 00H 00H
CSGLOBAL 43H 0008H "Geoid" 02H 00H 09H
CSGLOBAL 42H 0004H "Date" 05H 01H 02H 00H 00H 01H
CSGLOBAL 42H 0320H "val" 05H 01H 20H 03H 00H 00H
CGLOBAL 00H 43H 0006H "uniRawSensorOut" 04H 00H 06H 06H 00H
CSGLOBAL 42H 0008H "str" 05H 01H 08H 00H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BTSC" 02H 00H 00H
CSGLOBAL 43H 0028H "LatDest" 05H 01H 05H 00H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_ODCNTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_COTR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_STAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_STATUS_REG" 02H 00H 00H
CSGLOBAL 43H 0008H "Course" 02H 00H 09H
CSGLOBAL 42H 0018H "GSV_Info" 05H 01H 0CH 00H 00H 01H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_INTERRUPT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_XOUTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_XOUTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_BUF_READ" 02H 00H 00H
CSGLOBAL 43H 0008H "PDOP" 02H 00H 09H
CSGLOBAL 42H 0001H "isTrueNorth" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_WUFTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_STBY_REG" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1710FVC_CONT_M_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_YHPL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_YHPH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_I2C_ADDR" 02H 00H 00H
CSGLOBAL 42H 0002H "flag" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_CNTL1_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INC3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_XHPL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_CNTL3_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_XHPH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH17xxFVC_PWR_DOWN" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_YOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1710FVC_CONT_L_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_YOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1721FVC_CONT_L_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INS1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INS2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TDTC" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1780GLI_REG_MFG_ID" 02H 00H 00H
CSGLOBAL 42H 0001H "LEDFlashFlag" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ZHPL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ZHPH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TDTRC" 02H 00H 00H
CSGLOBAL 42H 0002H "bulbIntensity" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_MAG_YOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_YOUT_L" 02H 00H 00H
CSGLOBAL 42H 0002H "fixQuality" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_TILT_ANGLE_HL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TILT_ANGLE_LL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_THRESH_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_THRESH_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_CMD_STOP_MIM" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ODCNTL" 02H 00H 00H
CSGLOBAL 42H 0002H "checkSum" 02H 00H 01H
CSGLOBAL 43H 0008H "VDOP" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CLEAR" 02H 00H 00H
CSGLOBAL 43H 0028H "LonDest" 05H 01H 05H 00H 00H 09H
CSGLOBAL 43H 0008H "prevBulbIntensity" 02H 00H 09H
CSGLOBAL 01H 000AH "_uartSetParam" 04H 00H 05H 03H 00H
CSGLOBAL 42H 0002H "PWMSafeDuty" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_BUF_STATUS_1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_BUF_STATUS_2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_WHO_AM_I" 02H 00H 00H
CSGLOBAL 43H 0008H "GroundSpeed" 02H 00H 09H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_DATA1HIGH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ZOUTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ZOUTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TSCP" 02H 00H 00H
CSGLOBAL 42H 0002H "bulbEnable" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_ODCNTL_CFGDAT" 02H 00H 00H
CSGLOBAL 42H 0001H "SensorPlatformSelection" 02H 00H 00H
CSGLOBAL 42H 0001H "LatLonValid" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TSPP" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_TIMING" 02H 00H 00H
CSGLOBAL 42H 0002H "Mode" 05H 01H 02H 00H 00H 00H
CGLOBAL 01H 00H 0001H "Prox_ModeCTR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TILT_TIMER_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_ID" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_EN_CNTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_CNTL2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_XOUT_HPF_L" 02H 00H 00H
CSGLOBAL 42H 0001H "LEDChangeFlag" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_XOUT_HPF_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_BUF_CLEAR" 02H 00H 00H
CSGLOBAL 42H 0002H "sigDigits" 02H 00H 01H
CGLOBAL 01H 00H 0001H "BH1710FVC_RESET" 02H 00H 00H
CSGLOBAL 42H 0001H "LatDir" 02H 00H 00H
CSGLOBAL 42H 0002H "isSettingMode" 02H 00H 01H
CSGLOBAL 42H 0002H "isNeg" 02H 00H 01H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_CONTROL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_INL" 02H 00H 00H
CSGLOBAL 43H 0008H "MagDegrees" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KX022_WUFC" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_DATA0HIGH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_YOUTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_YOUTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH17xxFVC_PWR_ON" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1710FVC_ONET_L_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ZOUT_HPF_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_LP_CNTL" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ODCNTL_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_THLHIGH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ZOUT_HPF_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_YOUT_HPF_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_CMD_START_MIM" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_YOUT_HPF_H" 02H 00H 00H
CSGLOBAL 42H 0001H "MagDir" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_ATH" 02H 00H 00H
CSGLOBAL 42H 0002H "wordIndex" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_SN_1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SN_4" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1780GLI_REG_CONTROL" 02H 00H 00H
CSGLOBAL 42H 0001H "temp" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgI2CFin" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_COTR" 02H 00H 00H
CSGLOBAL 42H 0001H "speedUnit" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SELF_TEST_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "Prox_PS_LSB" 02H 00H 00H
CSGLOBAL 42H 0002H "Azimuth" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_FTD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_BUF_CNTL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_BUF_CNTL2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_I2C_ADDR" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_READ" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH17xxFVC_ADDR_1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH17xxFVC_ADDR_2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_THHLOW" 02H 00H 00H
CSGLOBAL 43H 0008H "TrueDegrees" 02H 00H 09H
CGLOBAL 01H 00H 0001H "BH1710FVC_ONET_M_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_CNTL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_CNTL2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_CNTL3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_OUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_TEMP_OUT_L" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_reqNotHalt" 02H 00H 00H
CSGLOBAL 43H 0008H "Longitude" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KX022_STD" 02H 00H 00H
CSGLOBAL 43H 0008H "MSL" 02H 00H 09H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_XOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_ZOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_XOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_ACCEL_ZOUT_L" 02H 00H 00H
CGLOBAL 00H 43H 000CH "flSensorOut" 05H 01H 03H 00H 00H 03H
CSGLOBAL 43H 0008H "MagneticVariation" 02H 00H 09H
CGLOBAL 01H 00H 0001H "BH1710FVC_ONET_H_RES_MOD" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL2_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC3" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL1_CFGDAT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC4" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC5" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_GAIN" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INC6" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TLT" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_CTRL2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_CMD_SW_RESET" 02H 00H 00H
CSGLOBAL 42H 0002H "SNR" 02H 00H 01H
CSGLOBAL 42H 0014H "buffer" 05H 01H 14H 00H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TTH" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TTL" 02H 00H 00H
CSGLOBAL 42H 0001H "KMHSpeed" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INS1" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INS2" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_INS3" 02H 00H 00H
CSGLOBAL 42H 0002H "GSV_index" 02H 00H 01H
CSGLOBAL 42H 0064H "word" 05H 01H 64H 00H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_TWS" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_DATA0LOW" 02H 00H 00H
CSGLOBAL 42H 0006H "UTC" 05H 01H 03H 00H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_XOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_ZOUT_H" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_XOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_MAG_ZOUT_L" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_SELF_TEST" 02H 00H 00H
CSGLOBAL 42H 0002H "PRN_num" 02H 00H 01H
CSGLOBAL 42H 0001H "SensorIntializationFlag" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_THLLOW" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KX022_HYST_SET" 02H 00H 00H
CSGLOBAL 42H 0002H "numSat" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KMX61_WHO_AM_I" 02H 00H 00H
CGLOBAL 00H 42H 0001H "_flgADCFin" 02H 00H 00H
CSGLOBAL 42H 0002H "GSV_numMessage" 02H 00H 01H
CGLOBAL 01H 00H 0001H "KX022_TILT_TIMER" 02H 00H 00H
CGLOBAL 01H 00H 0001H "BH1730FVC_REG_DATA1LOW" 02H 00H 00H
CGLOBAL 01H 00H 0001H "KMX61_BUF_STATUS_REG" 02H 00H 00H
CSGLOBAL 43H 0008H "HDOP" 02H 00H 09H
CSGLOBAL 42H 0018H "SV_ID" 05H 01H 0CH 00H 00H 01H
CSGLOBAL 42H 0001H "isMagNorth" 02H 00H 00H
CFILE 0001H 0000085AH "main\\ML610112.H"
CFILE 0002H 000000D8H "main\\stdlib.h"
CFILE 0003H 0000007AH "main\\yvals.h"
CFILE 0004H 0000006BH "uart\\uart.h"
CFILE 0005H 00000027H "common\\common.h"
CFILE 0006H 00000057H "irq\\irq.h"
CFILE 0007H 00000023H "main\\mcu.h"
CFILE 0008H 00000045H "i2c\\i2c.h"
CFILE 0009H 00000046H "tbc\\tbc.h"
CFILE 000AH 000001B8H "timer\\timer.h"
CFILE 000BH 000000EEH "main\\stdio.h"
CFILE 0000H 00000A7BH "main\\main.c"

	rseg $$main$main
CFUNCTION 241

_main	:
CBLOCK 241 1 482

;;{ 	 
CLINEA 0000H 0001H 01E2H 0001H 0004H
CBLOCK 241 2 482

;;	Initialization(); //Ports, UART, Timers, Oscillator, Comparators, etc.
CLINEA 0000H 0001H 01E3H 0002H 0047H
	bl	_Initialization

;;		ETM8 = 0; //Turn OFF TIMER8/9 ISR for this function...
CLINEA 0000H 0001H 01E6H 0003H 0038H
	rb	0f013h.2

;;		ETM9 = 0; //Turn OFF TIMER8/9 ISR for this function... 
CLINEA 0000H 0001H 01E7H 0003H 0039H
	rb	0f013h.3

;;		OutputPWM();
CLINEA 0000H 0001H 01E9H 0003H 000EH
	bl	_OutputPWM

;;		while(1){  
CLINEA 0000H 0001H 01ECH 0003H 000DH
	bal	_$L30
_$L32 :
CBLOCK 241 3 492

;;				checkSum = ADC_Read(1); 
CLINEA 0000H 0000H 01EDH 0005H 001CH
	mov	r0,	#01h
	bl	_ADC_Read
	st	er0,	NEAR _checkSum

;;				main_clrWDT();
CLINEA 0000H 0001H 01EEH 0005H 0012H
	bl	_main_clrWDT

;;				if(checkSum < 800)
CLINEA 0000H 0001H 01F1H 0005H 0016H
	l	er0,	NEAR _checkSum
	cmp	r0,	#020h
	cmpc	r1,	#03h
	bge	_$L34

;;					i =  300;//100+(checkSum*3);     
CLINEA 0000H 0001H 01F2H 0006H 0026H
	mov	r0,	#02ch
	mov	r1,	#01h

;;				else
CLINEA 0000H 0001H 01F3H 0005H 0008H
	bal	_$L36
_$L34 :

;;					i =  1200;//100+(checkSum*3);   
CLINEA 0000H 0001H 01F4H 0006H 0025H
	mov	r0,	#0b0h
	mov	r1,	#04h
_$L36 :
	st	er0,	NEAR _i

;;				PERUN = 0;   
CLINEA 0000H 0001H 01F6H 0005H 0011H
	rb	0f937h.0

;;				NOPms(100);
CLINEA 0000H 0001H 01F7H 0005H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;				NOPms(100);
CLINEA 0000H 0001H 01F8H 0005H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;				NOPms(100); 
CLINEA 0000H 0001H 01F9H 0005H 0010H
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;				PWED = i;
CLINEA 0000H 0001H 01FCH 0005H 000DH
	l	er0,	NEAR _i
	st	er0,	0f932h

;;				PERUN = 1;   
CLINEA 0000H 0001H 01FDH 0005H 0011H
	sb	0f937h.0

;;				NOPms(100);
CLINEA 0000H 0001H 01FFH 0005H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;				NOPms(100);
CLINEA 0000H 0001H 0200H 0005H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms

;;				NOPms(100);
CLINEA 0000H 0001H 0201H 0005H 000FH
	mov	r0,	#064h
	mov	r1,	#00h
	bl	_NOPms
CBLOCKEND 241 3 514

;;		}
CLINEA 0000H 0000H 0202H 0003H 0003H
_$L30 :

;;		while(1){  
CLINEA 0000H 0000H 01ECH 0000H 0000H
	bal	_$L32

;;			for(i=300; i<1200;i++){
CBLOCKEND 241 4 537

;;			GetUART_Command();
CBLOCKEND 241 7 649

;;    while(1){  
CBLOCKEND 241 2 693

;;							break;
CBLOCKEND 241 13 600

;;							break;
CBLOCKEND 241 15 615
CBLOCKEND 241 1 693
CFUNCTIONEND 241


	rseg $$GetUART_Command$main
CFUNCTION 240

_GetUART_Command	:
CBLOCK 240 1 698

;;void GetUART_Command(void){
CLINEA 0000H 0001H 02BAH 0001H 001BH
	push	lr
	push	xr4
CBLOCK 240 2 698
CRET 0004H

;;		val[0] = 0;
CLINEA 0000H 0001H 02BBH 0003H 000DH
	mov	r0,	#00h
	st	r0,	NEAR _val

;;		uart_stop();
CLINEA 0000H 0001H 02BCH 0003H 000EH
	bl	_uart_stop

;;		uart_startReceive(val, 1, _funcUartFin); 
CLINEA 0000H 0001H 02BDH 0003H 002BH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	er2,	#1 
	mov	r0,	#BYTE1 OFFSET _val
	mov	r1,	#BYTE2 OFFSET _val
	bl	_uart_startReceive
	add	sp,	#2 

;;		prevBulbIntensity = (prevBulbIntensity * 1.22437);
CLINEA 0000H 0001H 02BEH 0003H 0034H
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#09eh
	mov	r1,	#041h
	mov	r2,	#043h
	mov	r3,	#0ffh
	mov	r4,	#04h
	mov	r5,	#097h
	mov	r6,	#0f3h
	mov	r7,	#03fh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;		NOPms(10);  
CLINEA 0000H 0001H 02BFH 0003H 000EH
	mov	er0,	#10
	bl	_NOPms

;;		if(val[0]){
CLINEA 0000H 0001H 02C0H 0003H 000DH
	l	r0,	NEAR _val
	bne	_$M2
	b	_$L144
_$M2 :
CBLOCK 240 3 704

;;		    if(prevBulbIntensity > 230.0){
CLINEA 0000H 0001H 02C1H 0007H 0024H
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	r4,	#00h
	mov	r5,	#0c0h
	mov	r6,	#06ch
	mov	r7,	#040h
	push	qr0
	bl	__dcmpu8sw
	add	sp,	#16
	mov	psw,	r0
	ble	_$L137
CBLOCK 240 4 705

;;				write(0,"Bulb Fully On\n",sizeof("Bulb Fully On\n"));
CLINEA 0000H 0001H 02C2H 0005H 0039H
	mov	er0,	#15
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S139
	mov	r3,	#BYTE2 OFFSET $$S139
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 

;;			else if(prevBulbIntensity == 0){
CLINEA 0000H 0001H 02C4H 0004H 0023H
	bal	_$L144
_$L137 :
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	push	xr0
	push	xr0
	bl	__dcmpu8sw
	add	sp,	#16
	mov	psw,	r0
	bne	_$L141
CBLOCK 240 5 708

;;				write(0,"Bulb is Off\n",sizeof("Bulb is Off\n"));
CLINEA 0000H 0001H 02C5H 0005H 0035H
	mov	er0,	#13
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S143
	mov	r3,	#BYTE2 OFFSET $$S143
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 
CBLOCKEND 240 5 710

;;			else{
CLINEA 0000H 0001H 02C7H 0004H 0008H
	bal	_$L144
_$L141 :
CBLOCK 240 6 711

;;				sprintf(val,"Intensity is %f\n", prevBulbIntensity);
CLINEA 0000H 0001H 02C8H 0005H 0038H
	lea	OFFSET _prevBulbIntensity
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#BYTE1 OFFSET $$S145
	mov	r1,	#BYTE2 OFFSET $$S145
	push	er0
	mov	r0,	#BYTE1 OFFSET _val
	mov	r1,	#BYTE2 OFFSET _val
	push	er0
	bl	_sprintf_nn
	add	sp,	#12

;;				write(0,val,sizeof(val));
CLINEA 0000H 0001H 02C9H 0005H 001DH
	mov	r0,	#020h
	mov	r1,	#03h
	push	er0
	mov	r2,	#BYTE1 OFFSET _val
	mov	r3,	#BYTE2 OFFSET _val
	mov	er0,	#0 
	bl	_write
	add	sp,	#2 
CBLOCKEND 240 6 715

;;			}
CLINEA 0000H 0000H 02CBH 0004H 0004H
_$L144 :
CBLOCKEND 240 3 716
CBLOCKEND 240 4 717
CBLOCKEND 240 2 717

;;}
CLINEA 0000H 0001H 02CDH 0001H 0001H
	pop	xr4
	pop	pc
CBLOCKEND 240 1 717
CFUNCTIONEND 240


	rseg $$Read_GPS$main
CFUNCTION 229

_Read_GPS	:
CBLOCK 229 1 719

;;int Read_GPS(void){
CLINEA 0000H 0001H 02CFH 0001H 0013H
	push	lr
CBLOCK 229 2 719
CRET 0000H

;;		main_clrWDT();    
CLINEA 0000H 0001H 02D1H 0003H 0014H
	bl	_main_clrWDT

;;			_flgUartFin = 0;
CLINEA 0000H 0001H 02D3H 0004H 0013H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;			uart_stop();
CLINEA 0000H 0001H 02D4H 0004H 000FH
	bl	_uart_stop

;;			uart_startReceive(val, 800, _funcUartFin); 
CLINEA 0000H 0001H 02D5H 0004H 002EH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	mov	r2,	#020h
	mov	r3,	#03h
	mov	r0,	#BYTE1 OFFSET _val
	mov	r1,	#BYTE2 OFFSET _val
	bl	_uart_startReceive
	add	sp,	#2 

;;			while(_flgUartFin != 1){
CLINEA 0000H 0000H 02D6H 0001H 0001H
	bal	_$L182

;;			while(_flgUartFin != 1){
CLINEA 0000H 0000H 02D6H 0004H 001BH
_$L149 :
CBLOCK 229 3 726

;;				main_clrWDT();
CLINEA 0000H 0001H 02D7H 0005H 0012H
	bl	_main_clrWDT
CBLOCKEND 229 3 728

;;			while(_flgUartFin != 1){
CLINEA 0000H 0000H 02D6H 0001H 0001H
_$L182 :

;;			while(_flgUartFin != 1){
CLINEA 0000H 0000H 02D6H 0012H 0022H
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L149

;;			val[800] = 0; // Null-Terminated String Set
CLINEA 0000H 0001H 02D9H 0004H 002EH
	mov	r0,	#00h
	st	r0,	NEAR _val+0320h

;;		i=0;
CLINEA 0000H 0001H 02DBH 0003H 0006H
	mov	er0,	#0 
	st	er0,	NEAR _i

;;		while(i<800){
CLINEA 0000H 0000H 02DCH 0003H 000FH
CBLOCK 229 4 732

;;			for(;i<800;i++){
CLINEA 0000H 0000H 02DEH 0001H 0001H
	bal	_$L183

;;			for(;i<800;i++){
CLINEA 0000H 0000H 02DEH 000FH 0011H
_$L157 :
CBLOCK 229 5 734

;;				main_clrWDT();
CLINEA 0000H 0001H 02DFH 0005H 0012H
	bl	_main_clrWDT

;;				if(val[i] == '$')
CLINEA 0000H 0001H 02E0H 0005H 0015H
	l	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	cmp	r0,	#024h
	beq	_$L156

;;					break;
CLINEA 0000H 0001H 02E1H 0006H 000BH
CBLOCKEND 229 5 738

;;			for(;i<800;i++){
CLINEA 0000H 0000H 02DEH 000FH 0011H
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i

;;			for(;i<800;i++){
CLINEA 0000H 0000H 02DEH 0001H 0001H
_$L183 :

;;			for(;i<800;i++){
CLINEA 0000H 0000H 02DEH 0009H 000EH
	l	er0,	NEAR _i
	cmp	r0,	#020h
	cmpc	r1,	#03h
	blt	_$L157

;;			}
CLINEA 0000H 0000H 02E2H 0004H 0004H
_$L156 :

;;			if(i>700)
CLINEA 0000H 0001H 02E3H 0004H 000CH
	l	er0,	NEAR _i
	cmp	r0,	#0bch
	cmpc	r1,	#02h
	ble	_$L163

;;}
CLINEA 0000H 0001H 0320H 0001H 0001H
_$L146 :
	mov	er0,	#0 
	pop	pc

;;				return 0;
CLINEA 0000H 0000H 02E4H 0005H 000DH
_$L163 :

;;			checkSum = 0;
CLINEA 0000H 0001H 02E6H 0004H 0010H
	mov	er0,	#0 
	st	er0,	NEAR _checkSum

;;			for(j=0;val[i] != ',';){
CLINEA 0000H 0001H 02E7H 0004H 001BH
	st	er0,	NEAR _j

;;			for(j=0;val[i] != ',';){
CLINEA 0000H 0000H 02E7H 0001H 0001H
	bal	_$L184

;;			for(j=0;val[i] != ',';){
CLINEA 0000H 0000H 02E7H 0004H 001BH
_$L167 :
CBLOCK 229 6 743

;;				buffer[j] = val[++i];
CLINEA 0000H 0000H 02E8H 0005H 0019H
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
	l	er2,	NEAR _j
	l	r0,	NEAR _val[er0]
	st	r0,	NEAR _buffer[er2]

;;				checkSum += buffer[j++];
CLINEA 0000H 0001H 02E9H 0005H 001CH
	l	er0,	NEAR _j
	l	r0,	NEAR _buffer[er0]
	mov	r1,	#00h
	l	er2,	NEAR _checkSum
	add	er2,	er0
	st	er2,	NEAR _checkSum
	l	er0,	NEAR _j
	add	er0,	#1 
	st	er0,	NEAR _j

;;				main_clrWDT();
CLINEA 0000H 0001H 02EAH 0005H 0012H
	bl	_main_clrWDT
CBLOCKEND 229 6 747

;;			for(j=0;val[i] != ',';){
CLINEA 0000H 0000H 02E7H 0001H 0001H
_$L184 :

;;			for(j=0;val[i] != ',';){
CLINEA 0000H 0000H 02E7H 0009H 000EH
	l	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	cmp	r0,	#02ch
	bne	_$L167

;;			switch (checkSum){
CLINEA 0000H 0001H 02EFH 0004H 0015H
	l	er0,	NEAR _checkSum
CBLOCK 229 7 751
	cmp	r0,	#092h
	cmpc	r1,	#01h
	beq	_$L176

;;			switch (checkSum){
CLINEA 0000H 0000H 02EFH 0004H 0015H
	cmp	r0,	#09eh
	cmpc	r1,	#01h
	beq	_$L178

;;			switch (checkSum){
CLINEA 0000H 0000H 02EFH 0004H 0015H
	cmp	r0,	#0a2h
	cmpc	r1,	#01h
	beq	_$L177

;;			switch (checkSum){
CLINEA 0000H 0000H 02EFH 0004H 0015H
	cmp	r0,	#0a5h
	cmpc	r1,	#01h
	beq	_$L180

;;			switch (checkSum){
CLINEA 0000H 0000H 02EFH 0004H 0015H
	cmp	r0,	#0b3h
	cmpc	r1,	#01h
	beq	_$L179

;;			switch (checkSum){
CLINEA 0000H 0000H 02EFH 0004H 0015H
	cmp	r0,	#0fbh
	cmpc	r1,	#01h
	beq	_$L181

;;				    main_clrWDT();
CLINEA 0000H 0001H 031BH 0009H 0016H
	bl	_main_clrWDT
CBLOCKEND 229 7 797

;;			}   
CLINEA 0000H 0000H 031DH 0004H 0007H
_$L174 :
CBLOCKEND 229 4 798

;;		while(i<800){
CLINEA 0000H 0000H 02DCH 0009H 000EH
	l	er0,	NEAR _i
	cmp	r0,	#020h
	cmpc	r1,	#03h
	bge	_$M4
	b	_$L183
_$M4 :

;;		return 0;
CLINEA 0000H 0000H 031FH 0003H 000BH
	bal	_$L146

;;				case 402: // GGA Fetched Values
CLINEA 0000H 0001H 02F0H 0005H 0023H
_$L176 :

;;				    main_clrWDT();
CLINEA 0000H 0001H 02F4H 0009H 0016H
	bl	_main_clrWDT

;;					parseGGA(); 
CLINEA 0000H 0001H 02F5H 0006H 0011H
	bl	_parseGGA

;;					break;
CLINEA 0000H 0001H 02F6H 0006H 000BH
	bal	_$L174

;;				case 418: // GLL Fetched Values
CLINEA 0000H 0001H 02F7H 0005H 0023H
_$L177 :

;;				    main_clrWDT();
CLINEA 0000H 0001H 02FBH 0009H 0016H
	bl	_main_clrWDT

;;					parseGLL(); 
CLINEA 0000H 0001H 02FCH 0006H 0011H
	bl	_parseGLL

;;					break;
CLINEA 0000H 0001H 02FDH 0006H 000BH
	bal	_$L174

;;				case 414: // GSA Fetched Values
CLINEA 0000H 0001H 02FEH 0005H 0023H
_$L178 :

;;				    main_clrWDT();
CLINEA 0000H 0001H 0302H 0009H 0016H
	bl	_main_clrWDT

;;					parseGSA(); 
CLINEA 0000H 0001H 0303H 0006H 0011H
	bl	_parseGSA

;;					break; 
CLINEA 0000H 0001H 0304H 0006H 000CH
	bal	_$L174

;;				case 435: // GSV Fetched Values
CLINEA 0000H 0001H 0305H 0005H 0023H
_$L179 :

;;					main_clrWDT();
CLINEA 0000H 0001H 0309H 0006H 0013H
	bl	_main_clrWDT

;;					parseGSV();  
CLINEA 0000H 0001H 030AH 0006H 0012H
	bl	_parseGSV

;;					break; 
CLINEA 0000H 0001H 030BH 0006H 000CH
	bal	_$L174

;;				case 421: // RMC Fetched Values
CLINEA 0000H 0001H 030CH 0005H 0023H
_$L180 :

;;					main_clrWDT();
CLINEA 0000H 0001H 0310H 0006H 0013H
	bl	_main_clrWDT

;;					parseRMC();  
CLINEA 0000H 0001H 0311H 0006H 0012H
	bl	_parseRMC

;;					break; 
CLINEA 0000H 0001H 0312H 0006H 000CH
	bal	_$L174

;;				case 507: // VTG Fetched Values
CLINEA 0000H 0001H 0313H 0005H 0023H
_$L181 :

;;					main_clrWDT();
CLINEA 0000H 0001H 0317H 0006H 0013H
	bl	_main_clrWDT

;;					parseVTG();   
CLINEA 0000H 0001H 0318H 0006H 0013H
	bl	_parseVTG

;;					break; 
CLINEA 0000H 0001H 0319H 0006H 000CH
	bal	_$L174
CBLOCKEND 229 1 800
CFUNCTIONEND 229


	rseg $$clearAllGPSVariables$main
CFUNCTION 236

_clearAllGPSVariables	:
CBLOCK 236 1 802

;;void clearAllGPSVariables(){
CLINEA 0000H 0001H 0322H 0001H 001CH
	push	lr
	push	xr4
CBLOCK 236 2 802
CRET 0004H

;;	UTC[0]=UTC[1]=UTC[2]=Latitude=Longitude=LatDir=LonDir=fixQuality=numSat=HDOP=MSL=Geoid=0;
CLINEA 0000H 0001H 0323H 0002H 005AH
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	er6,	#0 
	lea	OFFSET _Geoid
	st	qr0,	[ea]
	lea	OFFSET _MSL
	st	qr0,	[ea]
	lea	OFFSET _HDOP
	st	qr0,	[ea]
	st	er0,	NEAR _fixQuality
	st	er0,	NEAR _UTC+04h
	st	er0,	NEAR _UTC+02h
	st	er0,	NEAR _UTC

;;	Latitude=Longitude=LatDir=LonDir=UTC[0]=UTC[1]=UTC[2],LatLonValid=0;
CLINEA 0000H 0001H 0324H 0002H 0045H
	l	er0,	NEAR _UTC+04h
	st	er0,	NEAR _UTC+02h
	st	er0,	NEAR _UTC
	l	r0,	NEAR _UTC+04h
	st	r0,	NEAR _LonDir
	st	r0,	NEAR _LatDir
	mov	r1,	#00h
	push	xr0
	add	sp,	#-4
	bl	__duldu8sw
	pop	qr0
	lea	OFFSET _Longitude
	st	qr0,	[ea]
	lea	OFFSET _Latitude
	st	qr0,	[ea]
	mov	r0,	#00h
	st	r0,	NEAR _LatLonValid

;;	GSV_numMessage=GSV_index=numSat=PRN_num=Eleveation=Azimuth=SNR=GSV_Info[0]=GSV_Info[1]=GSV_Info[2]=0;
CLINEA 0000H 0001H 0325H 0002H 0066H
	mov	er0,	#0 
	st	er0,	NEAR _GSV_Info+04h
	st	er0,	NEAR _GSV_Info+02h
	st	er0,	NEAR _GSV_Info
	st	er0,	NEAR _SNR
	st	er0,	NEAR _Azimuth
	st	er0,	NEAR _Eleveation
	st	er0,	NEAR _PRN_num
	st	er0,	NEAR _numSat
	st	er0,	NEAR _GSV_index
	st	er0,	NEAR _GSV_numMessage

;;	ReceiverState=GroundSpeed=Course=Date[2]=MagneticVariation=MagDir=0;
CLINEA 0000H 0001H 0326H 0002H 0045H
	st	r0,	NEAR _MagDir
	mov	er2,	#0 
	mov	er4,	#0 
	mov	er6,	#0 
	lea	OFFSET _MagneticVariation
	st	qr0,	[ea]
	st	er0,	NEAR _Date+04h
	lea	OFFSET _Course
	st	qr0,	[ea]
	st	r0,	NEAR _ReceiverState

;;	TrueDegrees=isTrueNorth=MagDegrees=isMagNorth=KnotsSpeed=speedUnit=GroundSpeed=0; 
CLINEA 0000H 0001H 0327H 0002H 0053H
	lea	OFFSET _GroundSpeed
	st	qr0,	[ea]
	st	r0,	NEAR _speedUnit
	lea	OFFSET _KnotsSpeed
	st	qr0,	[ea]
	st	r0,	NEAR _isMagNorth
	lea	OFFSET _MagDegrees
	st	qr0,	[ea]
	st	r0,	NEAR _isTrueNorth
	lea	OFFSET _TrueDegrees
	st	qr0,	[ea]
CBLOCKEND 236 2 808

;;}
CLINEA 0000H 0001H 0328H 0001H 0001H
	pop	xr4
	pop	pc
CBLOCKEND 236 1 808
CFUNCTIONEND 236


	rseg $$parseGGA$main
CFUNCTION 230

_parseGGA	:
CBLOCK 230 1 810

;;void parseGGA(void){  
CLINEA 0000H 0001H 032AH 0001H 0016H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-032
	push	xr4
CBLOCK 230 2 810
CRET 0026H
CLOCAL 43H 0008H 0010H 0002H "a" 02H 00H 04H
CLOCAL 43H 0008H 0018H 0002H "b" 02H 00H 04H
CLOCAL 43H 0008H 0020H 0002H "c" 02H 00H 04H

;;	UTC[0] = readCharToInt(2, 0); // day
CLINEA 0000H 0000H 032DH 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC

;;	UTC[1] = readCharToInt(2, 0); // hour
CLINEA 0000H 0000H 032EH 0002H 0026H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+02h

;;	UTC[2] = readCharToInt(2, 0); // min
CLINEA 0000H 0000H 032FH 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+04h

;;	readCharToInt(0, '.');
CLINEA 0000H 0001H 0332H 0002H 0017H
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt

;;	readCharToInt(0, ',');
CLINEA 0000H 0001H 0333H 0002H 0017H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	a = readCharToInt(2, 0); 
CLINEA 0000H 0000H 0336H 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 0337H 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	b /= 60; 
CLINEA 0000H 0001H 0338H 0002H 000AH
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0339H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-32[fp]
	st	qr0,	[ea]

;;	c = c / 60 / sigDigits; 
CLINEA 0000H 0001H 033AH 0002H 0019H
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	l	er0,	NEAR _sigDigits
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	Latitude = a+b+c;
CLINEA 0000H 0001H 033BH 0002H 0012H
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	lea	-32[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _Latitude
	st	qr0,	[ea]

;;	LatDir = readChar();  
CLINEA 0000H 0000H 033DH 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LatDir

;;	if(LatDir == 'S')
CLINEA 0000H 0001H 033EH 0002H 0012H
	cmp	r0,	#053h
	bne	_$L187

;;		Latitude *= -1;
CLINEA 0000H 0001H 033FH 0003H 0011H
	lea	OFFSET _Latitude
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
_$L187 :

;;	a = readCharToInt(3, 0); 
CLINEA 0000H 0000H 0342H 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#3 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 0343H 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	b /= 60; 
CLINEA 0000H 0001H 0344H 0002H 000AH
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0345H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-32[fp]
	st	qr0,	[ea]

;;	c = c / 60 / sigDigits; 
CLINEA 0000H 0001H 0346H 0002H 0019H
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	l	er0,	NEAR _sigDigits
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	Longitude = a+b+c;
CLINEA 0000H 0001H 0347H 0002H 0013H
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	lea	-32[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _Longitude
	st	qr0,	[ea]

;;	LonDir = readChar();  
CLINEA 0000H 0000H 0349H 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LonDir

;;	if(LonDir == 'W')
CLINEA 0000H 0001H 034AH 0002H 0012H
	cmp	r0,	#057h
	bne	_$L189

;;		Longitude *= -1; 
CLINEA 0000H 0001H 034BH 0003H 0013H
	lea	OFFSET _Longitude
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
_$L189 :

;;	fixQuality = readCharToInt(0, ','); 
CLINEA 0000H 0000H 034DH 0002H 0025H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _fixQuality

;;	numSat = readCharToInt(0, ','); 
CLINEA 0000H 0000H 034EH 0002H 0021H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _numSat

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0350H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0351H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0352H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	HDOP = a+b ;
CLINEA 0000H 0001H 0353H 0002H 000DH
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _HDOP
	st	qr0,	[ea]

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0355H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0356H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0357H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	if(isNeg)
CLINEA 0000H 0001H 0358H 0002H 000AH
	l	er0,	NEAR _isNeg
	beq	_$L191

;;		MSL = -1*(a+b);
CLINEA 0000H 0001H 0359H 0003H 0011H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0

;;	else
CLINEA 0000H 0001H 035AH 0002H 0005H
	bal	_$L193
_$L191 :

;;		MSL = a+b; 
CLINEA 0000H 0001H 035BH 0003H 000DH
	lea	-8[fp]
	l	qr0,	[ea]
_$L193 :
	lea	OFFSET _MSL
	st	qr0,	[ea]

;;	main_clrWDT(); 
CLINEA 0000H 0001H 035CH 0002H 0010H
	bl	_main_clrWDT

;;	readCharToInt(0, ',');
CLINEA 0000H 0001H 035DH 0002H 0017H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 035FH 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0360H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0361H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	if(isNeg)
CLINEA 0000H 0001H 0362H 0002H 000AH
	l	er0,	NEAR _isNeg
	beq	_$L194

;;		Geoid = -1*(a+b);
CLINEA 0000H 0001H 0363H 0003H 0013H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0

;;	else
CLINEA 0000H 0001H 0364H 0002H 0005H
	bal	_$L196
_$L194 :

;;		Geoid = a+b;
CLINEA 0000H 0001H 0365H 0003H 000EH
	lea	-8[fp]
	l	qr0,	[ea]
_$L196 :
	lea	OFFSET _Geoid
	st	qr0,	[ea]

;;	readCharToInt(0, ',');
CLINEA 0000H 0001H 0367H 0002H 0017H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	readCharToInt(0, ',');
CLINEA 0000H 0001H 0368H 0002H 0017H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	main_clrWDT();
CLINEA 0000H 0001H 036AH 0002H 000FH
	bl	_main_clrWDT
CBLOCKEND 230 2 875

;;}
CLINEA 0000H 0001H 036BH 0001H 0001H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 230 1 875
CFUNCTIONEND 230


	rseg $$readCharToInt$main
CFUNCTION 238

_readCharToInt	:
CBLOCK 238 1 878

;;float readCharToInt(unsigned int numOfChars, unsigned char stopToken){
CLINEA 0000H 0001H 036EH 0001H 0046H
	push	lr
	push	xr8
	push	xr4
	mov	er8,	er0
	mov	r10,	r2
CBLOCK 238 2 878
CRET 0008H
CARGUMENT 46H 0002H 0028H "numOfChars" 02H 00H 01H
CARGUMENT 46H 0001H 001EH "stopToken" 02H 00H 00H
CLOCAL 47H 0002H 0027H 0002H "j" 02H 00H 01H
CLOCAL 47H 0002H 0026H 0002H "temp" 02H 00H 01H
CLOCAL 47H 0002H 0027H 0002H "tokenIndex" 02H 00H 01H

;;	int j = numOfChars;
CLINEA 0000H 0001H 036FH 0002H 0014H
	mov	er6,	er0

;;	int temp=0;
CLINEA 0000H 0001H 0370H 0002H 000CH
	mov	er4,	#0 

;;	sigDigits = 1;
CLINEA 0000H 0001H 0372H 0002H 000FH
	mov	er0,	#1 
	st	er0,	NEAR _sigDigits

;;	main_clrWDT();
CLINEA 0000H 0001H 0373H 0002H 000FH
	bl	_main_clrWDT

;;	if(numOfChars){
CLINEA 0000H 0001H 0374H 0002H 0010H
	mov	er8,	er8
	beq	_$L198
CBLOCK 238 3 884

;;	    main_clrWDT();
CLINEA 0000H 0001H 0375H 0006H 0013H
	bl	_main_clrWDT

;;		while(j>0){
CLINEA 0000H 0000H 0376H 0001H 0001H
	bal	_$L219

;;		while(j>0){
CLINEA 0000H 0000H 0376H 0003H 000DH
_$L202 :
CBLOCK 238 4 886

;;			temp = temp*10 + (val[++i] - 48);
CLINEA 0000H 0000H 0377H 0004H 0024H
	mov	er0,	er4
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er4
	add	er0,	er0
	mov	er2,	er0
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	mov	r1,	#00h
	add	er0,	er2
	add	er0,	#-48
	mov	er4,	er0

;;			j--;
CLINEA 0000H 0000H 0378H 0004H 0007H
	add	er6,	#-1

;;			main_clrWDT();
CLINEA 0000H 0001H 0379H 0004H 0011H
	bl	_main_clrWDT
CBLOCKEND 238 4 890

;;		while(j>0){
CLINEA 0000H 0000H 0376H 0001H 0001H
_$L219 :

;;		while(j>0){
CLINEA 0000H 0000H 0376H 0009H 000EH
	cmp	r6,	#00h
	cmpc	r7,	#00h
	bgts	_$L202
CBLOCKEND 238 3 891

;;	else{
CLINEA 0000H 0001H 037CH 0002H 0006H
	bal	_$L204
_$L198 :
CBLOCK 238 5 892

;;	    tokenIndex = i+1;
CLINEA 0000H 0001H 037DH 0006H 0016H
	l	er0,	NEAR _i
	add	er0,	#1 
	mov	er6,	er0

;;		while(val[++i] != stopToken){  
CLINEA 0000H 0001H 037EH 0003H 0021H
	bal	_$L205
_$L207 :
CBLOCK 238 6 894

;;		    main_clrWDT();
CLINEA 0000H 0001H 037FH 0007H 0014H
	bl	_main_clrWDT

;;			if(  (stopToken == '.') && (tokenIndex ==i)  ){
CLINEA 0000H 0001H 0380H 0004H 0032H
	cmp	r10,	#02eh
	bne	_$L218
	l	er0,	NEAR _i
	cmp	er0,	er6
	bne	_$L218
CBLOCK 238 7 896

;;				if(val[i] == '-'){
CLINEA 0000H 0001H 0381H 0005H 0016H
	l	r0,	NEAR _val[er0]
	cmp	r0,	#02dh
	bne	_$L216
CBLOCK 238 8 897

;;					isNeg = 1;
CLINEA 0000H 0001H 0382H 0006H 000FH
	mov	er0,	#1 
	st	er0,	NEAR _isNeg

;;					i++; 
CLINEA 0000H 0000H 0383H 0006H 000AH
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
CBLOCKEND 238 8 900

;;				else{	
CLINEA 0000H 0001H 0385H 0005H 000AH
	bal	_$L218
_$L216 :
CBLOCK 238 9 901

;;					isNeg = 0;
CLINEA 0000H 0001H 0386H 0006H 000FH
	mov	er0,	#0 
	st	er0,	NEAR _isNeg
CBLOCKEND 238 9 903

;;				}
CLINEA 0000H 0000H 0387H 0005H 0005H
_$L218 :
CBLOCKEND 238 7 904

;;			temp = temp*10 + (val[i] - 48);
CLINEA 0000H 0001H 0389H 0004H 0022H
	mov	er2,	er4
	sllc	r3,	#02h
	sll	r2,	#02h
	add	er2,	er4
	add	er2,	er2
	l	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	mov	r1,	#00h
	add	er0,	#-48
	add	er0,	er2
	mov	er4,	er0

;;			main_clrWDT();
CLINEA 0000H 0001H 038AH 0004H 0011H
	bl	_main_clrWDT

;;			sigDigits*=10;
CLINEA 0000H 0001H 038BH 0004H 0011H
	l	er0,	NEAR _sigDigits
	mov	er2,	er0
	sllc	r1,	#02h
	sll	r0,	#02h
	add	er0,	er2
	add	er0,	er0
	st	er0,	NEAR _sigDigits
CBLOCKEND 238 6 908

;;		}
CLINEA 0000H 0000H 038CH 0003H 0003H
_$L205 :

;;		while(val[++i] != stopToken){  
CLINEA 0000H 0000H 037EH 0009H 000EH
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	cmp	r0,	r10
	bne	_$L207
CBLOCKEND 238 5 909

;;	}
CLINEA 0000H 0000H 038DH 0002H 0002H
_$L204 :

;;	main_clrWDT();
CLINEA 0000H 0001H 038EH 0002H 000FH
	bl	_main_clrWDT

;;	return temp;
CLINEA 0000H 0001H 038FH 0002H 000DH
	mov	r2,	r5
	extbw	er2
	mov	r2,	r3
	mov	er6,	er2
	push	xr4
	bl	__fildu8sw
	pop	xr0
CBLOCKEND 238 2 912

;;}
CLINEA 0000H 0000H 0390H 0001H 0001H
	pop	xr4
	pop	xr8
	pop	pc
CBLOCKEND 238 1 912
CFUNCTIONEND 238


	rseg $$readChar$main
CFUNCTION 237

_readChar	:
CBLOCK 237 1 915

;;char readChar(void){
CLINEA 0000H 0001H 0393H 0001H 0014H
	push	lr
	push	er4
CBLOCK 237 2 915
CRET 0002H
CLOCAL 47H 0001H 0018H 0002H "temp" 02H 00H 00H

;;	char temp = val[++i];
CLINEA 0000H 0001H 0394H 0002H 0016H
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i
	l	r0,	NEAR _val[er0]
	mov	r4,	r0

;;	i++;
CLINEA 0000H 0000H 0395H 0002H 0005H
	l	er0,	NEAR _i
	add	er0,	#1 
	st	er0,	NEAR _i

;;	main_clrWDT();
CLINEA 0000H 0001H 0396H 0002H 000FH
	bl	_main_clrWDT

;;	return temp;
CLINEA 0000H 0001H 0397H 0002H 000DH
	mov	r0,	r4
CBLOCKEND 237 2 920

;;}
CLINEA 0000H 0000H 0398H 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 237 1 920
CFUNCTIONEND 237


	rseg $$parseGLL$main
CFUNCTION 231

_parseGLL	:
CBLOCK 231 1 922

;;void parseGLL(void){
CLINEA 0000H 0001H 039AH 0001H 0014H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-024
	push	xr4
CBLOCK 231 2 922
CRET 001EH
CLOCAL 43H 0008H 0008H 0002H "a" 02H 00H 04H
CLOCAL 43H 0008H 0010H 0002H "b" 02H 00H 04H
CLOCAL 43H 0008H 0018H 0002H "c" 02H 00H 04H

;;	a = readCharToInt(2, 0); 
CLINEA 0000H 0000H 03A0H 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 03A1H 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b /= 60; 
CLINEA 0000H 0001H 03A2H 0002H 000AH
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 03A3H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	c = c / 60 / sigDigits; 
CLINEA 0000H 0001H 03A4H 0002H 0019H
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	l	er0,	NEAR _sigDigits
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	Latitude = a+b+c;
CLINEA 0000H 0001H 03A5H 0002H 0012H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _Latitude
	st	qr0,	[ea]

;;	LatDir = readChar();  
CLINEA 0000H 0000H 03A7H 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LatDir

;;	if(LatDir == 'S')
CLINEA 0000H 0001H 03A8H 0002H 0012H
	cmp	r0,	#053h
	bne	_$L222

;;		Latitude *= -1;
CLINEA 0000H 0001H 03A9H 0003H 0011H
	lea	OFFSET _Latitude
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
_$L222 :

;;	a = readCharToInt(3, 0); 
CLINEA 0000H 0000H 03ACH 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#3 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 03ADH 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b /= 60; 
CLINEA 0000H 0001H 03AEH 0002H 000AH
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 03AFH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-24[fp]
	st	qr0,	[ea]

;;	c = c / 60 / sigDigits; 
CLINEA 0000H 0001H 03B0H 0002H 0019H
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#04eh
	mov	r7,	#040h
	push	qr0
	bl	__ddivu8sw
	add	sp,	#8 
	l	er0,	NEAR _sigDigits
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	Longitude = a+b+c;
CLINEA 0000H 0001H 03B1H 0002H 0013H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	lea	-24[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _Longitude
	st	qr0,	[ea]

;;	LonDir = readChar();  
CLINEA 0000H 0000H 03B3H 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LonDir

;;	if(LonDir == 'W')
CLINEA 0000H 0001H 03B4H 0002H 0012H
	cmp	r0,	#057h
	bne	_$L224

;;		Longitude *= -1; 
CLINEA 0000H 0001H 03B5H 0003H 0013H
	lea	OFFSET _Longitude
	l	qr0,	[ea]
	push	qr0
	mov	er0,	#0 
	mov	er2,	#0 
	mov	er4,	#0 
	mov	r6,	#0f0h
	mov	r7,	#0bfh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]
_$L224 :

;;	UTC[0] = readCharToInt(2, 0); // day
CLINEA 0000H 0000H 03B8H 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC

;;	UTC[1] = readCharToInt(2, 0); // hour
CLINEA 0000H 0000H 03B9H 0002H 0026H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+02h

;;	UTC[2] = readCharToInt(2, 0); // min
CLINEA 0000H 0000H 03BAH 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+04h

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 03BCH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	LatLonValid = readChar();  
CLINEA 0000H 0000H 03BEH 0002H 001CH
	bl	_readChar
	st	r0,	NEAR _LatLonValid
CBLOCKEND 231 2 959

;;}
CLINEA 0000H 0001H 03BFH 0001H 0001H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 231 1 959
CFUNCTIONEND 231


	rseg $$parseGSA$main
CFUNCTION 233

_parseGSA	:
CBLOCK 233 1 961

;;void parseGSA(void){
CLINEA 0000H 0001H 03C1H 0001H 0014H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-016
	push	xr4
CBLOCK 233 2 961
CRET 0016H
CLOCAL 43H 0008H 0008H 0002H "a" 02H 00H 04H
CLOCAL 43H 0008H 0010H 0002H "b" 02H 00H 04H
CLOCAL 4BH 0008H 0000H 0002H "c" 02H 00H 04H
CLOCAL 47H 0002H 0026H 0002H "index" 02H 00H 01H

;;	Mode[0] = readChar();
CLINEA 0000H 0000H 03C6H 0002H 0016H
	bl	_readChar
	st	r0,	NEAR _Mode

;;	Mode[1] = readChar();  
CLINEA 0000H 0000H 03C7H 0002H 0018H
	bl	_readChar
	st	r0,	NEAR _Mode+01h

;;	for(index=0;index<=11;index++){
CLINEA 0000H 0001H 03C8H 0002H 0020H
	mov	er4,	#0 
_$L229 :
CBLOCK 233 3 968

;;		SV_ID[index] = readCharToInt(0, ',');
CLINEA 0000H 0000H 03C9H 0003H 0027H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er2
	add	sp,	#2 
	mov	er0,	er4
	add	er0,	er4
	st	er2,	NEAR _SV_ID[er0]
CBLOCKEND 233 3 970

;;	for(index=0;index<=11;index++){
CLINEA 0000H 0000H 03C8H 0002H 0020H
	add	er4,	#1 

;;	for(index=0;index<=11;index++){
CLINEA 0000H 0000H 03C8H 0009H 000EH
	cmp	r4,	#0bh
	cmpc	r5,	#00h
	bles	_$L229

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 03CCH 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03CDH 0002H 001CH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits;  
CLINEA 0000H 0001H 03CEH 0002H 0015H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	PDOP = a+b;
CLINEA 0000H 0001H 03CFH 0002H 000CH
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _PDOP
	st	qr0,	[ea]

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 03D1H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03D2H 0002H 001CH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 03D3H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	HDOP = a+b;
CLINEA 0000H 0001H 03D4H 0002H 000CH
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _HDOP
	st	qr0,	[ea]

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 03D6H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, '*'); 
CLINEA 0000H 0000H 03D7H 0002H 001CH
	mov	r2,	#02ah
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 03D8H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	VDOP = a+b; 
CLINEA 0000H 0001H 03D9H 0002H 000DH
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _VDOP
	st	qr0,	[ea]
CBLOCKEND 233 2 987

;;}
CLINEA 0000H 0001H 03DBH 0001H 0001H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 233 1 987
CFUNCTIONEND 233


	rseg $$parseGSV$main
CFUNCTION 232

_parseGSV	:
CBLOCK 232 1 989

;;void parseGSV(void){ 
CLINEA 0000H 0001H 03DDH 0001H 0015H
	push	lr
	push	er4
CBLOCK 232 2 989
CRET 0002H
CLOCAL 47H 0002H 0026H 0002H "index" 02H 00H 01H

;;	GSV_numMessage = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E1H 0002H 0029H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _GSV_numMessage

;;	GSV_index = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E2H 0002H 0024H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _GSV_index

;;	numSat = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E3H 0002H 0021H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _numSat

;;	PRN_num = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E4H 0002H 0022H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _PRN_num

;;	Eleveation = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E5H 0002H 0025H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _Eleveation

;;	Azimuth = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03E6H 0002H 0022H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _Azimuth

;;	SNR = readCharToInt(0, ',');  
CLINEA 0000H 0000H 03E7H 0002H 001FH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _SNR

;;	if(GSV_numMessage != GSV_index){
CLINEA 0000H 0001H 03E8H 0002H 0021H
	l	er0,	NEAR _GSV_index
	l	er2,	NEAR _GSV_numMessage
	cmp	er0,	er2
	beq	_$L234
CBLOCK 232 3 1000

;;		for(index=0;index<11;index++){
CLINEA 0000H 0001H 03E9H 0007H 000EH
	mov	er4,	#0 

;;		for(index=0;index<11;index++){
CLINEA 0000H 0000H 03E9H 0018H 001EH
_$L238 :
CBLOCK 232 4 1001

;;			GSV_Info[index] = readCharToInt(0, ','); 
CLINEA 0000H 0000H 03EAH 0004H 002CH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er2
	add	sp,	#2 
	mov	er0,	er4
	add	er0,	er4
	st	er2,	NEAR _GSV_Info[er0]
CBLOCKEND 232 4 1003

;;		for(index=0;index<11;index++){
CLINEA 0000H 0000H 03E9H 0018H 001EH
	add	er4,	#1 

;;		for(index=0;index<11;index++){
CLINEA 0000H 0000H 03E9H 000FH 0017H
	cmp	r4,	#0bh
	cmpc	r5,	#00h
	blts	_$L238

;;		GSV_Info[index] = readCharToInt(0, '*'); 
CLINEA 0000H 0000H 03ECH 0003H 002BH
	mov	r2,	#02ah
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er2
	add	sp,	#2 
	mov	er0,	er4
	add	er0,	er4
	st	er2,	NEAR _GSV_Info[er0]
CBLOCKEND 232 3 1005

;;	}
CLINEA 0000H 0000H 03EDH 0002H 0002H
_$L234 :
CBLOCKEND 232 2 1006

;;}
CLINEA 0000H 0001H 03EEH 0001H 0001H
	pop	er4
	pop	pc
CBLOCKEND 232 1 1006
CFUNCTIONEND 232


	rseg $$parseRMC$main
CFUNCTION 234

_parseRMC	:
CBLOCK 234 1 1009

;;void parseRMC(void){ // RMC Fetched Values
CLINEA 0000H 0001H 03F1H 0001H 002AH
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-016
	push	xr4
CBLOCK 234 2 1009
CRET 0016H
CLOCAL 43H 0008H 0008H 0002H "a" 02H 00H 04H
CLOCAL 43H 0008H 0010H 0002H "b" 02H 00H 04H
CLOCAL 4BH 0008H 0000H 0002H "c" 02H 00H 04H

;;	UTC[0] = readCharToInt(2, 0); // day
CLINEA 0000H 0000H 03F5H 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC

;;	UTC[1] = readCharToInt(2, 0); // hour
CLINEA 0000H 0000H 03F6H 0002H 0026H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+02h

;;	UTC[2] = readCharToInt(2, 0); // min
CLINEA 0000H 0000H 03F7H 0002H 0025H
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _UTC+04h

;;	ReceiverState = readChar();
CLINEA 0000H 0000H 03F9H 0002H 001CH
	bl	_readChar
	st	r0,	NEAR _ReceiverState

;;	a = readCharToInt(2, 0); 
CLINEA 0000H 0000H 03FCH 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#2 
	bl	_readCharToInt

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 03FDH 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 03FFH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	LatDir = readChar();  
CLINEA 0000H 0000H 0403H 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LatDir

;;	a = readCharToInt(3, 0); 
CLINEA 0000H 0000H 0408H 0002H 001AH
	mov	r2,	#00h
	mov	er0,	#3 
	bl	_readCharToInt

;;	b = readCharToInt(0, '.');
CLINEA 0000H 0000H 0409H 0002H 001BH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt

;;	c = readCharToInt(0, ',');  
CLINEA 0000H 0000H 040BH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt

;;	LonDir = readChar();  
CLINEA 0000H 0000H 040FH 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _LonDir

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0415H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0416H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0417H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	GroundSpeed = a+b;
CLINEA 0000H 0001H 0418H 0002H 0013H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _GroundSpeed
	st	qr0,	[ea]

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 041BH 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 041CH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 041DH 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	Course = a+b;
CLINEA 0000H 0001H 041EH 0002H 000EH
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _Course
	st	qr0,	[ea]

;;	Date[0] = readCharToInt(0, ','); // day
CLINEA 0000H 0000H 0420H 0002H 0028H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _Date

;;	Date[1] = readCharToInt(0, ','); // hour
CLINEA 0000H 0000H 0421H 0002H 0029H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _Date+02h

;;	Date[2] = readCharToInt(0, ','); // min
CLINEA 0000H 0000H 0422H 0002H 0028H
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	bl	__ftolu8sw
	pop	er0
	add	sp,	#2 
	st	er0,	NEAR _Date+04h

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0426H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0427H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0428H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	MagneticVariation = a+b;
CLINEA 0000H 0001H 0429H 0002H 0019H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _MagneticVariation
	st	qr0,	[ea]

;;	MagDir = readChar();  
CLINEA 0000H 0000H 042CH 0002H 0017H
	bl	_readChar
	st	r0,	NEAR _MagDir
CBLOCKEND 234 2 1069

;;}
CLINEA 0000H 0001H 042DH 0001H 0001H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 234 1 1069
CFUNCTIONEND 234


	rseg $$parseVTG$main
CFUNCTION 235

_parseVTG	:
CBLOCK 235 1 1071

;;void parseVTG(void){ // VTG Fetched Values
CLINEA 0000H 0001H 042FH 0001H 002AH
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-016
	push	xr4
CBLOCK 235 2 1071
CRET 0016H
CLOCAL 43H 0008H 0008H 0002H "a" 02H 00H 04H
CLOCAL 43H 0008H 0010H 0002H "b" 02H 00H 04H
CLOCAL 4BH 0008H 0000H 0002H "c" 02H 00H 04H

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0434H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0435H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0436H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	TrueDegrees = a+b;
CLINEA 0000H 0001H 0437H 0002H 0013H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _TrueDegrees
	st	qr0,	[ea]

;;	isTrueNorth = readChar(); // displays 'T' if TrueDegrees is made good.
CLINEA 0000H 0000H 0439H 0002H 0047H
	bl	_readChar
	st	r0,	NEAR _isTrueNorth

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 043CH 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 043DH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 043EH 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	MagDegrees = a+b;
CLINEA 0000H 0001H 043FH 0002H 0012H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _MagDegrees
	st	qr0,	[ea]

;;	isMagNorth = readChar(); // displays 'M' if TrueDegrees is made good.
CLINEA 0000H 0000H 0441H 0002H 0046H
	bl	_readChar
	st	r0,	NEAR _isMagNorth

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 0444H 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 0445H 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 0446H 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	KnotsSpeed = a+b;
CLINEA 0000H 0001H 0447H 0002H 0012H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _KnotsSpeed
	st	qr0,	[ea]

;;	KnotsUnit = readChar(); // displays 'N' if KnotsSpeed is in knots.
CLINEA 0000H 0000H 0449H 0002H 0043H
	bl	_readChar
	st	r0,	NEAR _KnotsUnit

;;	a = readCharToInt(0, '.'); 
CLINEA 0000H 0000H 044CH 0002H 001CH
	mov	r2,	#02eh
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]

;;	b = readCharToInt(0, ',');  
CLINEA 0000H 0000H 044DH 0002H 001DH
	mov	r2,	#02ch
	mov	er0,	#0 
	bl	_readCharToInt
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	pop	qr0
	lea	-16[fp]
	st	qr0,	[ea]

;;	b = b / sigDigits; 
CLINEA 0000H 0001H 044EH 0002H 0014H
	push	qr0
	l	er0,	NEAR _sigDigits
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	bl	__ddivu8sw
	add	sp,	#8 
	pop	qr0
	st	qr0,	[ea]

;;	GroundSpeed = a+b;
CLINEA 0000H 0001H 044FH 0002H 0013H
	lea	-8[fp]
	l	qr0,	[ea]
	push	qr0
	lea	-16[fp]
	l	qr0,	[ea]
	push	qr0
	bl	__daddu8sw
	add	sp,	#8 
	pop	qr0
	lea	OFFSET _GroundSpeed
	st	qr0,	[ea]

;;	KMHSpeed = readChar(); // displays 'N' if KnotsSpeed is in knots.
CLINEA 0000H 0000H 0451H 0002H 0042H
	bl	_readChar
	st	r0,	NEAR _KMHSpeed
CBLOCKEND 235 2 1107

;;} 
CLINEA 0000H 0001H 0453H 0001H 0002H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 235 1 1107
CFUNCTIONEND 235


	rseg $$OutputPWM$main
CFUNCTION 239

_OutputPWM	:
CBLOCK 239 1 1131

;;void OutputPWM(void){ 
CLINEA 0000H 0001H 046BH 0001H 0016H
CBLOCK 239 2 1131

;;      PA2DIR = 0;       // PortB Bit0 set to Output Mode... 
CLINEA 0000H 0001H 0477H 0007H 003CH
	rb	0f251h.2

;;      PA2C1  = 1;       // PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 047AH 0007H 003BH
	sb	0f253h.2

;;      PA2C0  = 1;       
CLINEA 0000H 0001H 047BH 0007H 0018H
	sb	0f252h.2

;;      PA2MD1  = 0;            // PortC Bit0 set to PWM Output (1,0)...
CLINEA 0000H 0001H 047EH 0007H 0046H
	rb	0f255h.2

;;      PA2MD0  = 1;      
CLINEA 0000H 0001H 047FH 0007H 0018H
	sb	0f254h.2

;;      PECS1 = 0;        //00= LS; 01=HS; 10=PLL
CLINEA 0000H 0001H 0482H 0007H 002FH
	rb	0f936h.1

;;      PECS0 = 1; 
CLINEA 0000H 0001H 0483H 0007H 0011H
	sb	0f936h.0

;;      PWEP = 27000;            // Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz) 
CLINEA 0000H 0001H 0486H 0007H 008FH
	mov	r0,	#078h
	mov	r1,	#069h
	st	er0,	0f930h

;;	  PWED = 10000;
CLINEA 0000H 0001H 0489H 0004H 0010H
	mov	r0,	#010h
	mov	r1,	#027h
	st	er0,	0f932h

;;      PERUN = 0;        // OFF to start 
CLINEA 0000H 0001H 0491H 0007H 0028H
	rb	0f937h.0
CBLOCKEND 239 2 1170

;;}
CLINEA 0000H 0001H 0492H 0001H 0001H
	rt
CBLOCKEND 239 1 1170
CFUNCTIONEND 239


	rseg $$Initialization$main
CFUNCTION 180

_Initialization	:
CBLOCK 180 1 1180

;;static void Initialization(void){
CLINEA 0000H 0001H 049CH 0001H 0021H
	push	lr
CBLOCK 180 2 1180
CRET 0000H

;;	DSIO0 = 1; // 0=> Enables Synchronous Serial Port 0 (initial value).
CLINEA 0000H 0001H 04A0H 0002H 0045H
	sb	0f02ah.0

;;	DUA0  = 0; // 0=> Enables the operation of UART0 (initial value).
CLINEA 0000H 0001H 04A1H 0002H 0042H
	rb	0f02ah.2

;;	DUA1  = 0; // 0=> Enables Uart1 (initial value). 
CLINEA 0000H 0001H 04A2H 0002H 0032H
	rb	0f02ah.3

;;	DI2C1 = 1; // 0=> Enables I2C bus Interface (Slave) (initial value).
CLINEA 0000H 0001H 04A3H 0002H 0045H
	sb	0f02ah.6

;;	DI2C0 = 0; // 0=> Enables I2C bus Interface (Master) (initial value).	
CLINEA 0000H 0001H 04A4H 0002H 0047H
	rb	0f02ah.7

;;	BLKCON4 = 0x00; // 0=> Enables SA-ADC
CLINEA 0000H 0001H 04A6H 0002H 0026H
	mov	r0,	#00h
	st	r0,	0f02ch

;;	BLKCON6 = 0x00; // (1=disables; 0=enables) the operation of Timers 8, 9, A, E, F.
CLINEA 0000H 0001H 04A7H 0002H 0052H
	st	r0,	0f02eh

;;	BLKCON7 = 0x00; // (1=disables; 0=enables) the operation of PWM (PWMC, PWMD, PWME, PWMF
CLINEA 0000H 0001H 04A8H 0002H 0058H
	st	r0,	0f02fh

;;	PortA_Low();	//Initialize all 3 Ports of Port A to GPIO-Low
CLINEA 0000H 0001H 04ABH 0002H 003CH
	bl	_PortA_Low

;;	PortB_Low();	//Initialize all 8 Ports of Port B to GPIO-Low
CLINEA 0000H 0001H 04ACH 0002H 003CH
	bl	_PortB_Low

;;	PortC_Low();	//Initialize all 8 Ports of Port C to GPIO-Low
CLINEA 0000H 0001H 04ADH 0002H 003CH
	bl	_PortC_Low

;;	PortD_Low();	//Initialize all 6 Ports of Port D to input GPIO
CLINEA 0000H 0001H 04AEH 0002H 003EH
	bl	_PortD_Low

;;    SetOSC();
CLINEA 0000H 0001H 04B1H 0005H 000DH
	bl	_SetOSC

;;	PA0DIR = 1;
CLINEA 0000H 0001H 04B5H 0002H 000CH
	sb	0f251h.0

;;	PA1DIR = 1;		//GPIO Input
CLINEA 0000H 0001H 04B6H 0002H 001AH
	sb	0f251h.1

;;	SACH0 = 1;		//This enables the ADC Channel 0 from A0 Pin
CLINEA 0000H 0001H 04B7H 0002H 0039H
	sb	0f2f2h.0

;;	SACH1 = 1;		//This enables the ADC Channel 1 from A1 Pin
CLINEA 0000H 0001H 04B8H 0002H 0039H
	sb	0f2f2h.1

;;	SALP = 0;		//Single Read or Continuous Read... Single = 0, Consecutive = 1
CLINEA 0000H 0001H 04B9H 0002H 004BH
	rb	0f2f0h.0

;;	irq_di();	// Disable Interrupts
CLINEA 0000H 0001H 04BEH 0002H 0020H
	bl	_irq_di

;;	irq_init();	// Initialize Interrupts (All Off and NO Requests)
CLINEA 0000H 0001H 04BFH 0002H 003FH
	bl	_irq_init

;;	IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
CLINEA 0000H 0001H 04C2H 0002H 0033H
	mov	r0,	#00h
	st	r0,	0f017h
	st	r0,	0f016h
	st	r0,	0f015h
	st	r0,	0f014h
	st	r0,	0f013h
	st	r0,	0f012h
	st	r0,	0f011h
	st	r0,	0f010h

;;	IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
CLINEA 0000H 0001H 04C4H 0002H 003BH
	st	r0,	0f01fh
	st	r0,	0f01eh
	st	r0,	0f01dh
	st	r0,	0f01ch
	st	r0,	0f01bh
	st	r0,	0f01ah
	st	r0,	0f019h
	st	r0,	0f018h

;;	E2H = 0;	// E2H is the Enable flag for 2Hz TBC Interrupt (1=ENABLED)
CLINEA 0000H 0001H 04C6H 0002H 0045H
	rb	0f017h.3

;;	irq_setHdr((unsigned char)IRQ_NO_UA0INT, _intUart);
CLINEA 0000H 0001H 04C8H 0002H 0034H
	mov	r2,	#BYTE1 OFFSET __intUart
	mov	r3,	#BYTE2 OFFSET __intUart
	mov	r0,	#0fh
	bl	_irq_setHdr

;;	EUA0 = 1; 	// EUA0 is the enable flag for the UART0 interrupt (1=ENABLED)
CLINEA 0000H 0001H 04C9H 0002H 004AH
	sb	0f014h.0

;;	irq_setHdr((unsigned char)IRQ_NO_I2CMINT, _intI2c);
CLINEA 0000H 0001H 04CBH 0002H 0034H
	mov	r2,	#BYTE1 OFFSET __intI2c
	mov	r3,	#BYTE2 OFFSET __intI2c
	mov	r0,	#0ch
	bl	_irq_setHdr

;;	EI2CM = 1;
CLINEA 0000H 0001H 04CCH 0002H 000BH
	sb	0f012h.7

;;	QI2CM = 0;
CLINEA 0000H 0001H 04CDH 0002H 000BH
	rb	0f01ah.7

;;	irq_ei(); // Enable Interrupts
CLINEA 0000H 0001H 04E0H 0002H 001FH
	bl	_irq_ei

;;	WDTMOD = 0x01; 	
CLINEA 0000H 0001H 04ECH 0002H 0011H
	mov	r0,	#01h
	st	r0,	0f00fh

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 04EDH 0002H 001DH
	bl	_main_clrWDT

;;	i2c_init(I2C_MOD_FST, (unsigned short)HSCLK_KHZ, I2C_SYN_OFF);
CLINEA 0000H 0001H 04F3H 0002H 003FH
	mov	r0,	#00h
	push	r0
	mov	r2,	#040h
	mov	r3,	#01fh
	mov	r0,	#01h
	bl	_i2c_init
	add	sp,	#2 

;;			   &_uartSetParam );				/* Param... 	 */
CLINEA 0000H 0001H 04F8H 0007H 002BH
	mov	r0,	#BYTE1 OFFSET __uartSetParam
	mov	r1,	#BYTE2 OFFSET __uartSetParam
	push	er0
	mov	r2,	#040h
	mov	r3,	#01fh
	mov	r0,	#02h
	bl	_uart_init
	add	sp,	#2 

;;	uart_PortSet();
CLINEA 0000H 0001H 04F9H 0002H 0010H
	bl	_uart_PortSet

;;	ETM8 = 0; //Turn OFF TIMER8/9 ISR for this function...
CLINEA 0000H 0001H 04FDH 0002H 0037H
	rb	0f013h.2

;;	ETM9 = 0; //Turn OFF TIMER8/9 ISR for this function... 
CLINEA 0000H 0001H 04FEH 0002H 0038H
	rb	0f013h.3
CBLOCKEND 180 2 1280

;;}//End Initialization
CLINEA 0000H 0001H 0500H 0001H 0015H
	pop	pc
CBLOCKEND 180 1 1280
CFUNCTIONEND 180


	rseg $$write$main
CFUNCTION 186

_write	:
CBLOCK 186 1 1294

;;{
CLINEA 0000H 0001H 050EH 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	er10
	mov	er10,	er2
CBLOCK 186 2 1294
CRET 0004H
CARGUMENT 47H 0002H 0000H "handle" 02H 00H 01H
CARGUMENT 46H 0002H 0029H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0002H 0004H "len" 02H 00H 01H

;;	_flgUartFin = 0; 
CLINEA 0000H 0001H 050FH 0002H 0012H
	mov	r0,	#00h
	st	r0,	NEAR __flgUartFin

;;	uart_stop();
CLINEA 0000H 0001H 0510H 0002H 000DH
	bl	_uart_stop

;;	uart_startSend(buffer, len, _funcUartFin); 
CLINEA 0000H 0001H 0511H 0002H 002CH
	mov	r0,	#BYTE1 OFFSET __funcUartFin
	mov	r1,	#BYTE2 OFFSET __funcUartFin
	push	er0
	l	er2,	4[fp]
	mov	er0,	er10
	bl	_uart_startSend
	add	sp,	#2 

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 0512H 0001H 0001H
	bal	_$L251

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 0512H 0002H 0018H
_$L249 :
CBLOCK 186 3 1299

;;		main_clrWDT();
CLINEA 0000H 0001H 0514H 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 186 3 1301

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 0512H 0001H 0001H
_$L251 :

;;	while(_flgUartFin != 1)
CLINEA 0000H 0000H 0512H 000FH 0017H
	l	r0,	NEAR __flgUartFin
	cmp	r0,	#01h
	bne	_$L249

;;	return len;
CLINEA 0000H 0001H 0516H 0002H 000CH
	l	er0,	4[fp]
CBLOCKEND 186 2 1303

;;}
CLINEA 0000H 0000H 0517H 0001H 0001H
	pop	er10
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 186 1 1303
CFUNCTIONEND 186


	rseg $$ADC_Read$main
CFUNCTION 187

_ADC_Read	:
CBLOCK 187 1 1314

;;{
CLINEA 0000H 0001H 0522H 0001H 0001H
	push	lr
	push	er8
	mov	r8,	r0
CBLOCK 187 2 1314
CRET 0002H
CARGUMENT 46H 0001H 001CH "idx" 02H 00H 00H

;;	_flgADCFin = 0;
CLINEA 0000H 0001H 0523H 0002H 0010H
	mov	r0,	#00h
	st	r0,	NEAR __flgADCFin

;;	SADMOD0 = (unsigned char)(1<<idx);
CLINEA 0000H 0001H 0524H 0002H 0023H
	mov	er0,	#1 
	mov	r2,	r8
_$M19 :
	cmp	r2,	#07h
	ble	_$M18
	sllc	r1,	#07h
	sll	r0,	#07h
	add	r2,	#0f9h
	bne	_$M19
_$M18 :
	sll	r0,	r2
	st	r0,	0f2f2h

;;	SARUN = 1;
CLINEA 0000H 0001H 0525H 0002H 000BH
	sb	0f2f1h.0

;;	NOPms(40); 
CLINEA 0000H 0001H 052CH 0002H 000CH
	mov	er0,	#40
	bl	_NOPms

;;	switch(idx)
CLINEA 0000H 0001H 052DH 0002H 000CH
	mov	r0,	r8
	mov	r1,	#00h
CBLOCK 187 3 1326
	cmp	r8,	#07h
	cmpc	r1,	#00h
	ble	_$M21
	b	_$L257
_$M21 :
	sllc	r1,	#01h
	sll	r0,	#01h
	l	er0,	NEAR _$M20[er0]
	b	er0

;;	}
CBLOCKEND 187 2 1337

;;}
CLINEA 0000H 0001H 0539H 0001H 0001H
_$L252 :
	pop	er8
	pop	pc

;;		case 0:		return (SADR0H<<2|SADR0L>>6);
CLINEA 0000H 0001H 052FH 0003H 0028H
_$S258 :
	l	r0,	0f2d1h
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2d0h
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	bal	_$L252

;;		case 1:		return (SADR1H<<2|SADR1L>>6);
CLINEA 0000H 0001H 0530H 0003H 0028H
_$S259 :
	l	r0,	0f2d3h
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2d2h
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	bal	_$L252

;;		case 2:		return (SADR2H<<2|SADR2L>>6);
CLINEA 0000H 0001H 0531H 0003H 0028H
_$S260 :
	l	r0,	0f2d5h
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2d4h
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	bal	_$L252

;;		case 3:		return (SADR3H<<2|SADR3L>>6);
CLINEA 0000H 0001H 0532H 0003H 0028H
_$S261 :
	l	r0,	0f2d7h
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2d6h
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	bal	_$L252

;;		case 4:		return (SADR4H<<2|SADR4L>>6);
CLINEA 0000H 0001H 0533H 0003H 0028H
_$S262 :
	l	r0,	0f2d9h
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2d8h
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	b	_$L252

;;		case 5:		return (SADR5H<<2|SADR5L>>6);
CLINEA 0000H 0001H 0534H 0003H 0028H
_$S263 :
	l	r0,	0f2dbh
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2dah
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	b	_$L252

;;		case 6:		return (SADR6H<<2|SADR6L>>6);
CLINEA 0000H 0001H 0535H 0003H 0028H
_$S264 :
	l	r0,	0f2ddh
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2dch
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	b	_$L252

;;		case 7:		return (SADR7H<<2|SADR7L>>6);
CLINEA 0000H 0001H 0536H 0003H 0028H
_$S265 :
	l	r0,	0f2dfh
	mov	r1,	#00h
	sllc	r1,	#02h
	sll	r0,	#02h
	l	r2,	0f2deh
	mov	r3,	#00h
	srlc	r2,	#06h
	sra	r3,	#06h
	or	r2,	r0
	or	r3,	r1
	mov	er0,	er2
	b	_$L252

;;		default:	return 0;
CLINEA 0000H 0001H 0537H 0003H 0014H
_$L257 :
	mov	er0,	#0 
	b	_$L252
CBLOCKEND 187 3 1336
CBLOCKEND 187 1 1337
CFUNCTIONEND 187


	rseg $$I2C_Read$main
CFUNCTION 188

_I2C_Read	:
CBLOCK 188 1 1352

;;{
CLINEA 0000H 0001H 0548H 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	mov	er10,	er2
	mov	r8,	r0
CBLOCK 188 2 1352
CRET 0006H
CARGUMENT 46H 0001H 001CH "slave_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "reg_address" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "reg_address_size" 02H 00H 00H
CARGUMENT 42H 0002H 0006H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0008H "size" 02H 00H 00H

;;	_flgI2CFin = 0;
CLINEA 0000H 0001H 0549H 0002H 0010H
	mov	r0,	#00h
	st	r0,	NEAR __flgI2CFin

;;	i2c_stop();	
CLINEA 0000H 0001H 054AH 0002H 000DH
	bl	_i2c_stop

;;	i2c_startReceive(slave_address, reg_address, reg_address_size, buffer, size, (cbfI2c)_funcI2CFin);
CLINEA 0000H 0001H 054BH 0002H 0063H
	mov	r0,	#BYTE1 OFFSET __funcI2CFin
	mov	r1,	#BYTE2 OFFSET __funcI2CFin
	push	er0
	l	r0,	8[fp]
	mov	r1,	#00h
	push	er0
	l	er0,	6[fp]
	push	er0
	l	r0,	4[fp]
	mov	r1,	#00h
	push	er0
	mov	er2,	er10
	mov	r0,	r8
	bl	_i2c_startReceive
	add	sp,	#8 

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 054CH 0001H 0001H
	bal	_$L271

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 054CH 0002H 0017H
_$L269 :
CBLOCK 188 3 1357

;;		main_clrWDT();
CLINEA 0000H 0001H 054EH 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 188 3 1359

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 054CH 0001H 0001H
_$L271 :

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 054CH 000FH 0017H
	l	r0,	NEAR __flgI2CFin
	cmp	r0,	#01h
	bne	_$L269
CBLOCKEND 188 2 1360

;;}
CLINEA 0000H 0001H 0550H 0001H 0001H
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 188 1 1360
CFUNCTIONEND 188


	rseg $$I2C_Write$main
CFUNCTION 189

_I2C_Write	:
CBLOCK 189 1 1375

;;{
CLINEA 0000H 0001H 055FH 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	push	xr8
	mov	er10,	er2
	mov	r8,	r0
CBLOCK 189 2 1375
CRET 0006H
CARGUMENT 46H 0001H 001CH "slave_address" 02H 00H 00H
CARGUMENT 46H 0002H 0029H "reg_address" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0004H "reg_address_size" 02H 00H 00H
CARGUMENT 42H 0002H 0006H "buffer" 04H 03H 00H 00H 00H
CARGUMENT 42H 0001H 0008H "size" 02H 00H 00H

;;	_flgI2CFin = 0;
CLINEA 0000H 0001H 0560H 0002H 0010H
	mov	r0,	#00h
	st	r0,	NEAR __flgI2CFin

;;	i2c_stop();	
CLINEA 0000H 0001H 0561H 0002H 000DH
	bl	_i2c_stop

;;	i2c_startSend(slave_address, reg_address, reg_address_size, buffer, size, (cbfI2c)_funcI2CFin);
CLINEA 0000H 0001H 0562H 0002H 0060H
	mov	r0,	#BYTE1 OFFSET __funcI2CFin
	mov	r1,	#BYTE2 OFFSET __funcI2CFin
	push	er0
	l	r0,	8[fp]
	mov	r1,	#00h
	push	er0
	l	er0,	6[fp]
	push	er0
	l	r0,	4[fp]
	mov	r1,	#00h
	push	er0
	mov	er2,	er10
	mov	r0,	r8
	bl	_i2c_startSend
	add	sp,	#8 

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 0563H 0001H 0001H
	bal	_$L277

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 0563H 0002H 0017H
_$L275 :
CBLOCK 189 3 1380

;;		main_clrWDT();
CLINEA 0000H 0001H 0565H 0003H 0010H
	bl	_main_clrWDT
CBLOCKEND 189 3 1382

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 0563H 0001H 0001H
_$L277 :

;;	while(_flgI2CFin != 1)
CLINEA 0000H 0000H 0563H 000FH 0017H
	l	r0,	NEAR __flgI2CFin
	cmp	r0,	#01h
	bne	_$L275
CBLOCKEND 189 2 1383

;;}
CLINEA 0000H 0001H 0567H 0001H 0001H
	pop	xr8
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 189 1 1383
CFUNCTIONEND 189


	rseg $$DeviceSelection$main
CFUNCTION 199

_DeviceSelection	:
CBLOCK 199 1 1395

;;{  
CLINEA 0000H 0001H 0573H 0001H 0003H
CBLOCK 199 2 1395

;;	if(PDD!=SensorPlatformSelection)
CLINEA 0000H 0001H 0580H 0002H 0021H
	l	r0,	0f268h
	l	r1,	NEAR _SensorPlatformSelection
	cmp	r0,	r1
	beq	_$L279
CBLOCK 199 3 1409

;;		SensorIntializationFlag = 1;
CLINEA 0000H 0001H 0582H 0003H 001EH
	mov	r0,	#01h
	st	r0,	NEAR _SensorIntializationFlag

;;		SensorPlatformSelection = PDD;
CLINEA 0000H 0001H 0583H 0003H 0020H
	l	r0,	0f268h
	st	r0,	NEAR _SensorPlatformSelection
CBLOCKEND 199 3 1412

;;	}
CLINEA 0000H 0000H 0584H 0002H 0002H
_$L279 :
CBLOCKEND 199 2 1413

;;}
CLINEA 0000H 0001H 0585H 0001H 0001H
	rt
CBLOCKEND 199 1 1413
CFUNCTIONEND 199


	rseg $$SensorInitialization$main
CFUNCTION 200

_SensorInitialization	:
CBLOCK 200 1 1423

;;{  
CLINEA 0000H 0001H 058FH 0001H 0003H
	push	lr
CBLOCK 200 2 1423
CRET 0000H

;;	switch(SensorPlatformSelection){
CLINEA 0000H 0001H 0590H 0002H 0021H
	l	r0,	NEAR _SensorPlatformSelection
	mov	r1,	#00h
CBLOCK 200 3 1424
	cmp	r0,	#017h
	cmpc	r1,	#00h
	bgt	_$L285
	cmp	r0,	#01h
	cmpc	r1,	#00h
	blt	_$L285
	add	er0,	#-1
	sllc	r1,	#01h
	sll	r0,	#01h
	l	er0,	NEAR _$M26[er0]
	b	er0

;;	} 	 
_$L285 :
CBLOCKEND 200 2 1470

;;}
CLINEA 0000H 0001H 05BEH 0001H 0001H
	pop	pc

;;		case 1:
CLINEA 0000H 0001H 0591H 0003H 0009H
_$S287 :

;;			Init_Hall_Effect_Sensors_1(); // Refer to function description for list of sensors
CLINEA 0000H 0001H 0592H 0004H 0055H
	bl	_Init_Hall_Effect_Sensors_1

;;			break;
CLINEA 0000H 0001H 0593H 0004H 0009H
	bal	_$L285

;;		case 2:
CLINEA 0000H 0001H 0594H 0003H 0009H
_$S288 :

;;			Init_Hall_Effect_Sensors_2(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 0595H 0004H 0056H
	bl	_Init_Hall_Effect_Sensors_2

;;			break;
CLINEA 0000H 0001H 0596H 0004H 0009H
	bal	_$L285

;;		case 5: 
CLINEA 0000H 0001H 0597H 0003H 000AH
_$S289 :

;;			Init_Ambient_Light_Sensor_5(); // Refer to function description for list of sensors
CLINEA 0000H 0001H 0598H 0004H 0056H
	bl	_Init_Ambient_Light_Sensor_5

;;			break;
CLINEA 0000H 0001H 0599H 0004H 0009H
	bal	_$L285

;;		case 6:
CLINEA 0000H 0001H 059AH 0003H 0009H
_$S290 :

;;			Init_Ambient_Light_Sensor_6(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 059BH 0004H 0057H
	bl	_Init_Ambient_Light_Sensor_6

;;			break;
CLINEA 0000H 0001H 059CH 0004H 0009H
	bal	_$L285

;;		case 7:
CLINEA 0000H 0001H 059DH 0003H 0009H
_$S291 :

;;			Init_Ambient_Light_Sensor_7(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 059EH 0004H 0057H
	bl	_Init_Ambient_Light_Sensor_7

;;			break;
CLINEA 0000H 0001H 059FH 0004H 0009H
	bal	_$L285

;;		case 8:
CLINEA 0000H 0001H 05A0H 0003H 0009H
_$S292 :

;;			Init_Ambient_Light_Sensor_8(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05A1H 0004H 0057H
	bl	_Init_Ambient_Light_Sensor_8

;;			break;
CLINEA 0000H 0001H 05A2H 0004H 0009H
	bal	_$L285

;;		case 9:
CLINEA 0000H 0001H 05A3H 0003H 0009H
_$S293 :

;;			Init_Ambient_Light_Sensor_9(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05A4H 0004H 0057H
	bl	_Init_Ambient_Light_Sensor_9

;;			break;
CLINEA 0000H 0001H 05A5H 0004H 0009H
	bal	_$L285

;;		case 10:
CLINEA 0000H 0001H 05A6H 0003H 000AH
_$S294 :

;;			Init_UV_Sensor_10(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05A7H 0004H 004DH
	bl	_Init_UV_Sensor_10

;;			break;
CLINEA 0000H 0001H 05A8H 0004H 0009H
	bal	_$L285

;;		case 15:
CLINEA 0000H 0001H 05A9H 0003H 000AH
_$S295 :

;;			Init_KX022(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05AAH 0004H 0046H
	bl	_Init_KX022

;;			break;
CLINEA 0000H 0001H 05ABH 0004H 0009H
	bal	_$L285

;;		case 16:
CLINEA 0000H 0001H 05ACH 0003H 000AH
_$S296 :

;;			Init_KMX61(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05ADH 0004H 0046H
	bl	_Init_KMX61

;;			break;
CLINEA 0000H 0001H 05AEH 0004H 0009H
	bal	_$L285

;;		case 20:
CLINEA 0000H 0001H 05AFH 0003H 000AH
_$S297 :

;;			Init_Temperature_Sensor_20(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05B0H 0004H 0056H
	bl	_Init_Temperature_Sensor_20

;;			break;
CLINEA 0000H 0001H 05B1H 0004H 0009H
	bal	_$L285

;;		case 21:
CLINEA 0000H 0001H 05B2H 0003H 000AH
_$S298 :

;;			Init_Temperature_Sensor_21(); // Refer to function description for list of sensors
CLINEA 0000H 0001H 05B3H 0004H 0055H
	bl	_Init_Temperature_Sensor_21

;;			break;
CLINEA 0000H 0001H 05B4H 0004H 0009H
	bal	_$L285

;;		case 22:
CLINEA 0000H 0001H 05B5H 0003H 000AH
_$S299 :

;;			Init_Temperature_Sensor_22(); // Refer to function description for list of sensors 
CLINEA 0000H 0001H 05B6H 0004H 0056H
	bl	_Init_Temperature_Sensor_22

;;			break;
CLINEA 0000H 0001H 05B7H 0004H 0009H
	bal	_$L285

;;		case 23:
CLINEA 0000H 0001H 05B8H 0003H 000AH
_$S300 :

;;			Init_Temperature_Sensor_23(); // Refer to function description for list of sensors
CLINEA 0000H 0001H 05B9H 0004H 0055H
	bl	_Init_Temperature_Sensor_23

;;			break; 
CLINEA 0000H 0001H 05BAH 0004H 000AH
	bal	_$L285

;;		default:
CLINEA 0000H 0001H 05BBH 0003H 000AH
_$L286 :

;;			break;
CLINEA 0000H 0001H 05BCH 0004H 0009H
	bal	_$L285
CBLOCKEND 200 3 1469
CBLOCKEND 200 1 1470
CFUNCTIONEND 200


	rseg $$MainOp_Hall_Effect_Sensors_1$main
CFUNCTION 202

_MainOp_Hall_Effect_Sensors_1	:
CBLOCK 202 1 1483

;;{
CLINEA 0000H 0001H 05CBH 0001H 0001H
	push	lr
CBLOCK 202 2 1483
CRET 0000H

;;	if(SENINTF_HDR1_GPIO0(D)==1 && SENINTF_HDR1_GPIO1(D)==1)
CLINEA 0000H 0001H 05CCH 0002H 0039H
	tb	0f258h.2
	beq	_$L302
	tb	0f258h.3
	beq	_$L302
CBLOCK 202 3 1485

;;		LEDOUT(0x0);	// Turn off all LEDs
CLINEA 0000H 0001H 05CEH 0003H 0023H
	mov	r0,	#00h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52004GUL> Hall �?? No Mag Fields Detected." ESC_SOL);
CLINEA 0000H 0001H 05CFH 0003H 0051H
	mov	er0,	#51
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S309
	mov	r3,	#BYTE2 OFFSET $$S309
	mov	er0,	#0 
	bl	_write

;;	else if(SENINTF_HDR1_GPIO0(D)==1 && SENINTF_HDR1_GPIO1(D)==0)
CLINEA 0000H 0001H 05D1H 0002H 003EH
	bal	_$L328
_$L302 :
	tb	0f258h.2
	beq	_$L311
	tb	0f258h.3
	bne	_$L311
CBLOCK 202 4 1490

;;		LEDOUT(0x02);	// Turn on LED1
CLINEA 0000H 0001H 05D3H 0003H 001FH
	mov	r0,	#02h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52004GUL> Hall �?? North Mag Field Detected." ESC_SOL);
CLINEA 0000H 0001H 05D4H 0003H 0053H
	mov	er0,	#53
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S318
	mov	r3,	#BYTE2 OFFSET $$S318
	mov	er0,	#0 
	bl	_write

;;	else if(SENINTF_HDR1_GPIO0(D)==0 && SENINTF_HDR1_GPIO1(D)==1)
CLINEA 0000H 0001H 05D6H 0002H 003EH
	bal	_$L328
_$L311 :
	tb	0f258h.2
	bne	_$L320
	tb	0f258h.3
	beq	_$L320
CBLOCK 202 5 1495

;;		LEDOUT(0x80);	// Turn on LED7
CLINEA 0000H 0001H 05D8H 0003H 001FH
	mov	r0,	#080h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52004GUL> Hall �?? South Mag Field Detected." ESC_SOL);
CLINEA 0000H 0001H 05D9H 0003H 0053H
	mov	er0,	#53
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S327
	mov	r3,	#BYTE2 OFFSET $$S327
	mov	er0,	#0 
	bl	_write
CBLOCKEND 202 5 1498

;;	else
CLINEA 0000H 0001H 05DBH 0002H 0005H
	bal	_$L328
_$L320 :
CBLOCK 202 6 1500

;;		LEDOUT(0x82);	// Turn on LED7 and LED1
CLINEA 0000H 0001H 05DDH 0003H 0028H
	mov	r0,	#082h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52004GUL> Hall �?? Both Mag Fields Detected." ESC_SOL);
CLINEA 0000H 0001H 05DEH 0003H 0053H
	mov	er0,	#53
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S329
	mov	r3,	#BYTE2 OFFSET $$S329
	mov	er0,	#0 
	bl	_write
CBLOCKEND 202 6 1503

;;	}
CLINEA 0000H 0000H 05DFH 0002H 0002H
_$L328 :
	add	sp,	#2 
CBLOCKEND 202 4 1504
CBLOCKEND 202 3 1504
CBLOCKEND 202 2 1504

;;}
CLINEA 0000H 0001H 05E0H 0001H 0001H
	pop	pc
CBLOCKEND 202 1 1504
CFUNCTIONEND 202


	rseg $$MainOp_Hall_Effect_Sensors_2$main
CFUNCTION 201

_MainOp_Hall_Effect_Sensors_2	:
CBLOCK 201 1 1517

;;{
CLINEA 0000H 0001H 05EDH 0001H 0001H
	push	lr
CBLOCK 201 2 1517
CRET 0000H

;;	if(SENINTF_HDR1_GPIO0(D)==0)
CLINEA 0000H 0001H 05EEH 0002H 001DH
	tb	0f258h.2
	bne	_$L331
CBLOCK 201 3 1519

;;		LEDOUT(0x80);	// Turn on LED7
CLINEA 0000H 0001H 05F0H 0003H 001FH
	mov	r0,	#080h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52011HFV> Hall �?? Mag Field Detected." ESC_SOL);
CLINEA 0000H 0001H 05F1H 0003H 004DH
	mov	er0,	#47
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S333
	mov	r3,	#BYTE2 OFFSET $$S333
	mov	er0,	#0 
	bl	_write
CBLOCKEND 201 3 1522

;;	else
CLINEA 0000H 0001H 05F3H 0002H 0005H
	bal	_$L334
_$L331 :
CBLOCK 201 4 1524

;;		LEDOUT(0x0);	// Turn off all LEDs
CLINEA 0000H 0001H 05F5H 0003H 0023H
	mov	r0,	#00h
	st	r0,	0f260h

;;		PRINTF(ESC_ERASE2END "BU52011HFV> Hall �?? No Mag Fields Detected." ESC_SOL);
CLINEA 0000H 0001H 05F6H 0003H 0051H
	mov	er0,	#51
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S335
	mov	r3,	#BYTE2 OFFSET $$S335
	mov	er0,	#0 
	bl	_write
CBLOCKEND 201 4 1527

;;	}
CLINEA 0000H 0000H 05F7H 0002H 0002H
_$L334 :
	add	sp,	#2 
CBLOCKEND 201 2 1528

;;}
CLINEA 0000H 0001H 05F8H 0001H 0001H
	pop	pc
CBLOCKEND 201 1 1528
CFUNCTIONEND 201


	rseg $$MainOp_Ambient_Light_Sensor_5$main
CFUNCTION 203

_MainOp_Ambient_Light_Sensor_5	:
CBLOCK 203 1 1541

;;{	
CLINEA 0000H 0001H 0605H 0001H 0002H
	push	lr
CBLOCK 203 2 1541
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 0606H 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 0608H 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	switch(SENINTF_HDR1_GPIO1(D)<<1|SENINTF_HDR1_GPIO0(D))
CLINEA 0000H 0001H 060DH 0002H 0037H
	l	r0,	0f258h
	srl	r0,	#03h
	and	r0,	#01h
	mov	r1,	#00h
	mov	er2,	er0
	sllc	r3,	#01h
	sll	r2,	#01h
	l	r0,	0f258h
	srl	r0,	#02h
	and	r0,	#01h
	or	r0,	r2
	or	r1,	r3
	mov	er2,	er0
CBLOCK 203 3 1550
	cmp	r1,	#00h
	bne	_$L345
	mov	r0,	r2
	beq	_$L345

;;	switch(SENINTF_HDR1_GPIO1(D)<<1|SENINTF_HDR1_GPIO0(D))
CLINEA 0000H 0000H 060DH 0002H 0037H
	cmp	r2,	#01h
	beq	_$L342

;;	switch(SENINTF_HDR1_GPIO1(D)<<1|SENINTF_HDR1_GPIO0(D))
CLINEA 0000H 0000H 060DH 0002H 0037H
	cmp	r2,	#02h
	beq	_$L343

;;	switch(SENINTF_HDR1_GPIO1(D)<<1|SENINTF_HDR1_GPIO0(D))
CLINEA 0000H 0000H 060DH 0002H 0037H
	cmp	r2,	#03h
	bne	_$M30
	b	_$L344
_$M30 :

;;		case 0:	// Shutdown
CLINEA 0000H 0001H 0618H 0003H 0015H
_$L345 :

;;			flSensorOut[0] = 0;
CLINEA 0000H 0001H 061AH 0004H 0016H
	mov	er0,	#0 
	st	er0,	NEAR _flSensorOut
	st	er0,	NEAR _flSensorOut+02h
CBLOCKEND 203 3 1564

;;	}
CLINEA 0000H 0000H 061CH 0002H 0002H
_$L340 :

;;	LEDOUT(ReverseBits((unsigned char)(uniRawSensorOut._uint>>2)));
CLINEA 0000H 0000H 061EH 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#02h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BH1620FVC> Ambient Light = %lu[lx]" ESC_SOL, (unsigned long)flSensorOut[0]);
CLINEA 0000H 0001H 061FH 0002H 0063H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	push	xr0
	mov	r0,	#BYTE1 OFFSET $$S346
	mov	r1,	#BYTE2 OFFSET $$S346
	push	er0
	bl	_printf_n
	add	sp,	#6 
CBLOCKEND 203 2 1568

;;}
CLINEA 0000H 0001H 0620H 0001H 0001H
	pop	pc

;;		case 1: // H-Gain mode
CLINEA 0000H 0001H 060FH 0003H 0018H
_$L342 :

;;			flSensorOut[0] = flSensorOut[0]/(0.57e-6f*5.6e3f);
CLINEA 0000H 0001H 0610H 0004H 0035H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#0e0h
	mov	r1,	#030h
	mov	r2,	#051h
	mov	r3,	#03bh
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;			break;
CLINEA 0000H 0001H 0611H 0004H 0009H
	bal	_$L340

;;		case 2: // M-Gain mode
CLINEA 0000H 0001H 0612H 0003H 0018H
_$L343 :

;;			flSensorOut[0] = flSensorOut[0]/(0.057e-6f*5.6e3f);
CLINEA 0000H 0001H 0613H 0004H 0036H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#04dh
	mov	r1,	#05ah
	mov	r2,	#0a7h
	mov	r3,	#039h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;			break;
CLINEA 0000H 0001H 0614H 0004H 0009H
	bal	_$L340

;;		case 3: // L-Gain mode
CLINEA 0000H 0001H 0615H 0003H 0018H
_$L344 :

;;			flSensorOut[0] = flSensorOut[0]/(0.0057e-6f*5.6e3f);
CLINEA 0000H 0001H 0616H 0004H 0037H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#0d7h
	mov	r1,	#0e1h
	mov	r2,	#05h
	mov	r3,	#038h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;			break;
CLINEA 0000H 0001H 0617H 0004H 0009H
	b	_$L340
CBLOCKEND 203 1 1568
CFUNCTIONEND 203


	rseg $$MainOp_Ambient_Light_Sensor_6$main
CFUNCTION 204

_MainOp_Ambient_Light_Sensor_6	:
CBLOCK 204 1 1581

;;{
CLINEA 0000H 0001H 062DH 0001H 0001H
	push	lr
CBLOCK 204 2 1581
CRET 0000H

;;	I2C_Read(BH17xxFVC_ADDR_1, NULL, 0, uniRawSensorOut._ucharArr, 2);
CLINEA 0000H 0001H 0633H 0002H 0043H
	mov	r0,	#02h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Read
	add	sp,	#6 

;;	flSensorOut[0] = (uniRawSensorOut._ucharArr[0]<<8|uniRawSensorOut._ucharArr[1])/1.2f;
CLINEA 0000H 0001H 0637H 0002H 0056H
	l	r0,	NEAR _uniRawSensorOut
	mov	r1,	#00h
	mov	r3,	r0
	l	r0,	NEAR _uniRawSensorOut+01h
	or	r1,	r3
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	r0,	#09ah
	mov	r1,	#099h
	mov	r2,	#099h
	mov	r3,	#03fh
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	LEDOUT(ReverseBits(uniRawSensorOut._ucharArr[0]));
CLINEA 0000H 0000H 0639H 0002H 0033H
	l	r0,	NEAR _uniRawSensorOut
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BH1710FVC> Ambient Light = %lu[lx]" ESC_SOL, (unsigned long)flSensorOut[0]);
CLINEA 0000H 0001H 063AH 0002H 0063H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	push	xr0
	mov	r0,	#BYTE1 OFFSET $$S348
	mov	r1,	#BYTE2 OFFSET $$S348
	push	er0
	bl	_printf_n
	add	sp,	#6 
CBLOCKEND 204 2 1595

;;}
CLINEA 0000H 0001H 063BH 0001H 0001H
	pop	pc
CBLOCKEND 204 1 1595
CFUNCTIONEND 204


	rseg $$MainOp_Ambient_Light_Sensor_7$main
CFUNCTION 205

_MainOp_Ambient_Light_Sensor_7	:
CBLOCK 205 1 1608

;;{
CLINEA 0000H 0001H 0648H 0001H 0001H
	push	lr
	push	xr4
CBLOCK 205 2 1608
CRET 0004H

;;	I2C_Read(BH17xxFVC_ADDR_2, NULL, 0, uniRawSensorOut._ucharArr, 4);
CLINEA 0000H 0001H 064EH 0002H 0043H
	mov	r0,	#04h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#029h
	bl	_I2C_Read
	add	sp,	#6 

;;	flSensorOut[0] = (float)uniRawSensorOut._uintArr[1]/uniRawSensorOut._uintArr[0];
CLINEA 0000H 0001H 0655H 0002H 0051H
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	l	er4,	NEAR _uniRawSensorOut
	mov	er6,	#0 
	push	xr4
	bl	__fuldu8sw
	pop	xr4
	push	xr0
	push	xr4
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	if(flSensorOut[0]<0.26f)
CLINEA 0000H 0001H 0656H 0002H 0019H
	push	xr0
	mov	r0,	#0b8h
	mov	r1,	#01eh
	mov	r2,	#085h
	mov	r3,	#03eh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L350

;;		flSensorOut[0] = (1.290f*uniRawSensorOut._uintArr[0]-2.733f*uniRawSensorOut._uintArr[1])/1*100/218;
CLINEA 0000H 0001H 0657H 0003H 0065H
	l	er0,	NEAR _uniRawSensorOut
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#0b8h
	mov	r1,	#01eh
	mov	r2,	#0a5h
	mov	r3,	#03fh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#079h
	mov	r1,	#0e9h
	mov	r2,	#02eh
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0c8h
	mov	r3,	#042h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r2,	#05ah
	mov	r3,	#043h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	else if(flSensorOut[0]<0.55f)
CLINEA 0000H 0001H 0658H 0002H 001EH
	b	_$L361
_$L350 :
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#0cdh
	mov	r1,	#0cch
	mov	r2,	#0ch
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L353

;;		flSensorOut[0] = (0.795f*uniRawSensorOut._uintArr[0]-0.859f*uniRawSensorOut._uintArr[1])/1*100/218;
CLINEA 0000H 0001H 0659H 0003H 0065H
	l	er0,	NEAR _uniRawSensorOut
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#01fh
	mov	r1,	#085h
	mov	r2,	#04bh
	mov	r3,	#03fh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#06dh
	mov	r1,	#0e7h
	mov	r2,	#05bh
	mov	r3,	#03fh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0c8h
	mov	r3,	#042h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r2,	#05ah
	mov	r3,	#043h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	else if(flSensorOut[0]<1.09f)
CLINEA 0000H 0001H 065AH 0002H 001EH
	b	_$L361
_$L353 :
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#01fh
	mov	r1,	#085h
	mov	r2,	#08bh
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L356

;;		flSensorOut[0] = (0.510f*uniRawSensorOut._uintArr[0]-0.345f*uniRawSensorOut._uintArr[1])/1*100/218;
CLINEA 0000H 0001H 065BH 0003H 0065H
	l	er0,	NEAR _uniRawSensorOut
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#05ch
	mov	r1,	#08fh
	mov	r2,	#02h
	mov	r3,	#03fh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#0d7h
	mov	r1,	#0a3h
	mov	r2,	#0b0h
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0c8h
	mov	r3,	#042h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r2,	#05ah
	mov	r3,	#043h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	else if(flSensorOut[0]<2.13f)
CLINEA 0000H 0001H 065CH 0002H 001EH
	b	_$L361
_$L356 :
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	r0,	#0ech
	mov	r1,	#051h
	mov	r2,	#08h
	mov	r3,	#040h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L359

;;		flSensorOut[0] = (0.276f*uniRawSensorOut._uintArr[0]-0.130f*uniRawSensorOut._uintArr[1])/1*100/218;
CLINEA 0000H 0001H 065DH 0003H 0065H
	l	er0,	NEAR _uniRawSensorOut
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#0dfh
	mov	r1,	#04fh
	mov	r2,	#08dh
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr4
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#0b8h
	mov	r1,	#01eh
	mov	r2,	#05h
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	push	qr0
	bl	__fsubu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0c8h
	mov	r3,	#042h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r2,	#05ah
	mov	r3,	#043h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	else
CLINEA 0000H 0001H 065EH 0002H 0005H
	bal	_$L361
_$L359 :

;;		flSensorOut[0] = 0;
CLINEA 0000H 0001H 065FH 0003H 0015H
	mov	er0,	#0 
	st	er0,	NEAR _flSensorOut
	st	er0,	NEAR _flSensorOut+02h
_$L361 :

;;	LEDOUT(ReverseBits(uniRawSensorOut._ucharArr[1]));
CLINEA 0000H 0000H 0661H 0002H 0033H
	l	r0,	NEAR _uniRawSensorOut+01h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BH1730FVC> Ambient Light = %lu[lx]" ESC_SOL, (unsigned long)flSensorOut[0]);
CLINEA 0000H 0001H 0662H 0002H 0063H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	push	xr0
	mov	r0,	#BYTE1 OFFSET $$S362
	mov	r1,	#BYTE2 OFFSET $$S362
	push	er0
	bl	_printf_n
	add	sp,	#6 
CBLOCKEND 205 2 1635

;;}
CLINEA 0000H 0001H 0663H 0001H 0001H
	pop	xr4
	pop	pc
CBLOCKEND 205 1 1635
CFUNCTIONEND 205


	rseg $$MainOp_Ambient_Light_Sensor_8$main
CFUNCTION 206

_MainOp_Ambient_Light_Sensor_8	:
CBLOCK 206 1 1648

;;{	
CLINEA 0000H 0001H 0670H 0001H 0002H
	push	lr
CBLOCK 206 2 1648
CRET 0000H

;;	I2C_Read(BH17xxFVC_ADDR_1, NULL, 0, uniRawSensorOut._ucharArr, 2);
CLINEA 0000H 0001H 0675H 0002H 0043H
	mov	r0,	#02h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Read
	add	sp,	#6 

;;	flSensorOut[0] = (uniRawSensorOut._ucharArr[0]<<8|uniRawSensorOut._ucharArr[1])/1.2f;
CLINEA 0000H 0001H 0679H 0002H 0056H
	l	r0,	NEAR _uniRawSensorOut
	mov	r1,	#00h
	mov	r3,	r0
	l	r0,	NEAR _uniRawSensorOut+01h
	or	r1,	r3
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	r0,	#09ah
	mov	r1,	#099h
	mov	r2,	#099h
	mov	r3,	#03fh
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	LEDOUT(ReverseBits(uniRawSensorOut._ucharArr[0]));
CLINEA 0000H 0000H 067BH 0002H 0033H
	l	r0,	NEAR _uniRawSensorOut
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BH1721FVC> Ambient Light = %lu[lx]" ESC_SOL, (unsigned long)flSensorOut[0]);
CLINEA 0000H 0001H 067CH 0002H 0063H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	push	xr0
	mov	r0,	#BYTE1 OFFSET $$S364
	mov	r1,	#BYTE2 OFFSET $$S364
	push	er0
	bl	_printf_n
	add	sp,	#6 
CBLOCKEND 206 2 1661

;;}
CLINEA 0000H 0001H 067DH 0001H 0001H
	pop	pc
CBLOCKEND 206 1 1661
CFUNCTIONEND 206


	rseg $$MainOp_Ambient_Light_Sensor_9$main
CFUNCTION 207

_MainOp_Ambient_Light_Sensor_9	:
CBLOCK 207 1 1674

;;{
CLINEA 0000H 0001H 068AH 0001H 0001H
	push	lr
CBLOCK 207 2 1674
CRET 0000H

;;	I2C_Read(BH17xxFVC_ADDR_2, NULL, 0, uniRawSensorOut._ucharArr, 2);
CLINEA 0000H 0001H 0690H 0002H 0043H
	mov	r0,	#02h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#029h
	bl	_I2C_Read
	add	sp,	#6 

;;	flSensorOut[0] = uniRawSensorOut._uint;
CLINEA 0000H 0001H 0694H 0002H 0028H
	l	er0,	NEAR _uniRawSensorOut
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	LEDOUT(ReverseBits(uniRawSensorOut._ucharArr[1]));
CLINEA 0000H 0000H 0696H 0002H 0033H
	l	r0,	NEAR _uniRawSensorOut+01h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BH1780GLI> Ambient Light = %lu[lx]" ESC_SOL, (unsigned long)flSensorOut[0]);
CLINEA 0000H 0001H 0697H 0002H 0063H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__ftolu8sw
	pop	xr0
	push	xr0
	mov	r0,	#BYTE1 OFFSET $$S366
	mov	r1,	#BYTE2 OFFSET $$S366
	push	er0
	bl	_printf_n
	add	sp,	#6 
CBLOCKEND 207 2 1688

;;}
CLINEA 0000H 0001H 0698H 0001H 0001H
	pop	pc
CBLOCKEND 207 1 1688
CFUNCTIONEND 207


	rseg $$MainOp_UV_Sensor_10$main
CFUNCTION 208

_MainOp_UV_Sensor_10	:
CBLOCK 208 1 1701

;;{
CLINEA 0000H 0001H 06A5H 0001H 0001H
	push	lr
CBLOCK 208 2 1701
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 06A6H 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 06A8H 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = Voltage2UVIntensity(flSensorOut[0]);
CLINEA 0000H 0001H 06AAH 0002H 0036H
	push	xr0
	mov	r0,	#0cdh
	mov	r1,	#0cch
	mov	r2,	#0ch
	mov	r3,	#0c0h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	mov	r0,	#093h
	mov	r1,	#018h
	mov	r2,	#04h
	mov	r3,	#03eh
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#020h
	mov	r3,	#041h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	LEDOUT(ReverseBits((unsigned char)(uniRawSensorOut._uint>>2)));
CLINEA 0000H 0000H 06ACH 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#02h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "ML8511> UV Intensity = %.02f[mW/cm2]. Vsenout = %.02f[V]" ESC_SOL, flSensorOut[1], flSensorOut[0]);
CLINEA 0000H 0001H 06ADH 0002H 007AH
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#BYTE1 OFFSET $$S368
	mov	r1,	#BYTE2 OFFSET $$S368
	push	er0
	bl	_printf_n
	add	sp,	#18
CBLOCKEND 208 2 1710

;;}
CLINEA 0000H 0001H 06AEH 0001H 0001H
	pop	pc
CBLOCKEND 208 1 1710
CFUNCTIONEND 208


	rseg $$MainOp_KX022$main
CFUNCTION 209

_MainOp_KX022	:
CBLOCK 209 1 1723

;;{
CLINEA 0000H 0001H 06BBH 0001H 0001H
	push	lr
CBLOCK 209 2 1723
CRET 0000H

;;	I2C_Read(KX022_I2C_ADDR, &KX022_XOUTL, 1, uniRawSensorOut._ucharArr, 6);
CLINEA 0000H 0001H 06C0H 0002H 0049H
	mov	r0,	#06h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_XOUTL
	mov	r3,	#BYTE2 OFFSET _KX022_XOUTL
	mov	r0,	#01eh
	bl	_I2C_Read
	add	sp,	#6 

;;	flSensorOut[0] = (float)uniRawSensorOut._intArr[0]/16384.0f;	// X
CLINEA 0000H 0001H 06C3H 0002H 0042H
	l	er0,	NEAR _uniRawSensorOut
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#046h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = (float)uniRawSensorOut._intArr[1]/16384.0f;	// Y
CLINEA 0000H 0001H 06C4H 0002H 0042H
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#046h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	flSensorOut[2] = (float)uniRawSensorOut._intArr[2]/16384.0f;	// Y
CLINEA 0000H 0001H 06C5H 0002H 0042H
	l	er0,	NEAR _uniRawSensorOut+04h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#046h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+08h
	st	er2,	NEAR _flSensorOut+0ah

;;		uniRawSensorOut._intArr[0], flSensorOut[0], uniRawSensorOut._intArr[1], flSensorOut[1], uniRawSensorOut._intArr[2], flSensorOut[2]);
CLINEA 0000H 0001H 06C8H 0003H 0086H
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+04h
	push	er0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+02h
	push	er0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut
	push	er0
	mov	r0,	#BYTE1 OFFSET $$S370
	mov	r1,	#BYTE2 OFFSET $$S370
	push	er0
	bl	_printf_n
	add	sp,	#32

;;	I2C_Read(KX022_I2C_ADDR, &KX022_TSCP, 1, uniRawSensorOut._ucharArr, 2);
CLINEA 0000H 0001H 06CBH 0002H 0048H
	mov	r0,	#02h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_TSCP
	mov	r3,	#BYTE2 OFFSET _KX022_TSCP
	mov	r0,	#01eh
	bl	_I2C_Read
	add	sp,	#6 

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0001H 06CDH 0002H 0025H
	l	r0,	NEAR _uniRawSensorOut
CBLOCK 209 3 1742
	cmp	r0,	#01h
	beq	_$L376

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0000H 06CDH 0002H 0025H
	cmp	r0,	#02h
	beq	_$L377

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0000H 06CDH 0002H 0025H
	cmp	r0,	#04h
	beq	_$L378

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0000H 06CDH 0002H 0025H
	cmp	r0,	#08h
	beq	_$L379

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0000H 06CDH 0002H 0025H
	cmp	r0,	#010h
	beq	_$L380

;;	switch(uniRawSensorOut._ucharArr[0])
CLINEA 0000H 0000H 06CDH 0002H 0025H
	cmp	r0,	#020h
	beq	_$L381

;;		default:	LEDOUT(0x00u); break;	// NONE
CLINEA 0000H 0000H 06D5H 0003H 0028H
	mov	r0,	#00h
CBLOCKEND 209 3 1750

;;	}
CLINEA 0000H 0000H 06D6H 0002H 0002H
_$L374 :
	st	r0,	0f260h
CBLOCKEND 209 2 1751

;;}
CLINEA 0000H 0001H 06D7H 0001H 0001H
	pop	pc

;;		case 0x01u:	LEDOUT(0x1u<<4); break;	// FU: Face-Up State (Z+). Turn on LED4
CLINEA 0000H 0001H 06CFH 0003H 004DH
_$L376 :
	mov	r0,	#010h
	bal	_$L374

;;		case 0x02u:	LEDOUT(0x1u<<3); break;	// FD: Face-Down State (Z-). Turn on LED3
CLINEA 0000H 0001H 06D0H 0003H 004FH
_$L377 :
	mov	r0,	#08h
	bal	_$L374

;;		case 0x04u:	LEDOUT(0x1u<<2); break;	// UP: Up State (Y+). Turn on LED2
CLINEA 0000H 0001H 06D1H 0003H 0048H
_$L378 :
	mov	r0,	#04h
	bal	_$L374

;;		case 0x08u:	LEDOUT(0x1u<<5); break;	// DO: Down State (Y-). Turn on LED5
CLINEA 0000H 0001H 06D2H 0003H 004AH
_$L379 :
	mov	r0,	#020h
	bal	_$L374

;;		case 0x10u:	LEDOUT(0x1u<<7); break;	// RI: Right State (X+). Turn on LED7
CLINEA 0000H 0001H 06D3H 0003H 004BH
_$L380 :
	mov	r0,	#080h
	bal	_$L374

;;		case 0x20u:	LEDOUT(0x1u<<0); break;	// LE: Left State (X-). Turn on LED0
CLINEA 0000H 0001H 06D4H 0003H 004AH
_$L381 :
	mov	r0,	#01h
	bal	_$L374
CBLOCKEND 209 1 1751
CFUNCTIONEND 209


	rseg $$MainOp_KMX61$main
CFUNCTION 210

_MainOp_KMX61	:
CBLOCK 210 1 1764

;;{ 
CLINEA 0000H 0001H 06E4H 0001H 0002H
	push	lr
CBLOCK 210 2 1764
CRET 0000H

;;	I2C_Read(KMX61_I2C_ADDR, &KMX61_ACCEL_XOUT_L, 1, uniRawSensorOut._ucharArr, 6);
CLINEA 0000H 0001H 06E6H 0002H 0050H
	mov	r0,	#06h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_ACCEL_XOUT_L
	mov	r3,	#BYTE2 OFFSET _KMX61_ACCEL_XOUT_L
	mov	r0,	#0eh
	bl	_I2C_Read
	add	sp,	#6 

;;	uniRawSensorOut._intArr[0] = uniRawSensorOut._intArr[0]>>2;
CLINEA 0000H 0001H 06E7H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut

;;	uniRawSensorOut._intArr[1] = uniRawSensorOut._intArr[1]>>2;
CLINEA 0000H 0001H 06E8H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut+02h
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut+02h

;;	uniRawSensorOut._intArr[2] = uniRawSensorOut._intArr[2]>>2;
CLINEA 0000H 0001H 06E9H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut+04h
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut+04h

;;	flSensorOut[0] = (float)uniRawSensorOut._intArr[0]/1024.0f;	// X
CLINEA 0000H 0001H 06EBH 0002H 0041H
	l	er0,	NEAR _uniRawSensorOut
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = (float)uniRawSensorOut._intArr[1]/1024.0f;	// Y
CLINEA 0000H 0001H 06ECH 0002H 0041H
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	flSensorOut[2] = (float)uniRawSensorOut._intArr[2]/1024.0f;	// Y
CLINEA 0000H 0001H 06EDH 0002H 0041H
	l	er0,	NEAR _uniRawSensorOut+04h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	er0,	#0 
	mov	r2,	#080h
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+08h
	st	er2,	NEAR _flSensorOut+0ah

;;		uniRawSensorOut._intArr[0], flSensorOut[0], uniRawSensorOut._intArr[1], flSensorOut[1], uniRawSensorOut._intArr[2], flSensorOut[2]);
CLINEA 0000H 0001H 06EFH 0003H 0086H
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+04h
	push	er0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+02h
	push	er0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut
	push	er0
	mov	r0,	#BYTE1 OFFSET $$S383
	mov	r1,	#BYTE2 OFFSET $$S383
	push	er0
	bl	_printf_n
	add	sp,	#32

;;	if(-0.5f<flSensorOut[0] && flSensorOut[0]<0.5f && 0.5f<flSensorOut[1])
CLINEA 0000H 0001H 06F1H 0002H 0047H
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L384
	l	er0,	NEAR _flSensorOut
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L384
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L384

;;		LEDOUT(0x1u<<5);	// -30<angle(X,1g)<30 & angle(Y,1g)>30. Turn on LED5
CLINEA 0000H 0001H 06F2H 0003H 0047H
	mov	r0,	#020h
	st	r0,	0f260h

;;	else if(0.5f<flSensorOut[0] && -0.5f<flSensorOut[1] && flSensorOut[1]<0.5f)
CLINEA 0000H 0001H 06F3H 0002H 004CH
	b	_$L431
_$L384 :
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L395
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L395
	l	er0,	NEAR _flSensorOut+04h
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L395

;;		LEDOUT(0x1u<<0);	// 30<angle(X,1g) & -30<angle(Y,1g)<30. Turn on LED0
CLINEA 0000H 0001H 06F4H 0003H 0047H
	mov	r0,	#01h
	st	r0,	0f260h

;;	else if(-0.5f<flSensorOut[0] && flSensorOut[0]<0.5f && flSensorOut[1]<-0.5f)
CLINEA 0000H 0001H 06F5H 0002H 004DH
	b	_$L431
_$L395 :
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L406
	l	er0,	NEAR _flSensorOut
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L406
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L406

;;		LEDOUT(0x1u<<2);	// -30<angle(X,1g)<30 & angle(Y,1g)<-30. Turn on LED2
CLINEA 0000H 0001H 06F6H 0003H 0048H
	mov	r0,	#04h
	st	r0,	0f260h

;;	else if(flSensorOut[0]<-0.5f && -0.5f<flSensorOut[1] && flSensorOut[1]<0.5f)
CLINEA 0000H 0001H 06F7H 0002H 004DH
	b	_$L431
_$L406 :
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L417
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L417
	l	er0,	NEAR _flSensorOut+04h
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L417

;;		LEDOUT(0x1u<<7);	// angle(X,1g)<-30 & -30<angle(Y,1g)<30. Turn on LED7
CLINEA 0000H 0001H 06F8H 0003H 0048H
	mov	r0,	#080h
	st	r0,	0f260h

;;	else if(flSensorOut[2]>0.5f)
CLINEA 0000H 0001H 06F9H 0002H 001DH
	bal	_$L431
_$L417 :
	l	er0,	NEAR _flSensorOut+08h
	l	er2,	NEAR _flSensorOut+0ah
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#03fh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	ble	_$L428

;;		LEDOUT(0x1u<<4);	// angle(Z,1g)>30. Turn on LED4
CLINEA 0000H 0001H 06FAH 0003H 0032H
	mov	r0,	#010h
	st	r0,	0f260h

;;	else if(flSensorOut[2]<-0.5f)
CLINEA 0000H 0001H 06FBH 0002H 001EH
	bal	_$L431
_$L428 :
	l	er0,	NEAR _flSensorOut+08h
	l	er2,	NEAR _flSensorOut+0ah
	push	xr0
	mov	er0,	#0 
	mov	r2,	#00h
	mov	r3,	#0bfh
	push	xr0
	bl	__fcmpu8sw
	add	sp,	#8 
	mov	psw,	r0
	bge	_$L431

;;		LEDOUT(0x1u<<3);	// angle(Z,1g)<-30. Turn on LED3
CLINEA 0000H 0001H 06FCH 0003H 0033H
	mov	r0,	#08h
	st	r0,	0f260h
_$L431 :

;;	I2C_Read(KMX61_I2C_ADDR, &KMX61_MAG_XOUT_L, 1, uniRawSensorOut._ucharArr, 6);
CLINEA 0000H 0001H 06FFH 0002H 004EH
	mov	r0,	#06h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_MAG_XOUT_L
	mov	r3,	#BYTE2 OFFSET _KMX61_MAG_XOUT_L
	mov	r0,	#0eh
	bl	_I2C_Read
	add	sp,	#6 

;;	uniRawSensorOut._intArr[0] = uniRawSensorOut._intArr[0]>>2;
CLINEA 0000H 0001H 0700H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut

;;	uniRawSensorOut._intArr[1] = uniRawSensorOut._intArr[1]>>2;
CLINEA 0000H 0001H 0701H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut+02h
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut+02h

;;	uniRawSensorOut._intArr[2] = uniRawSensorOut._intArr[2]>>2;
CLINEA 0000H 0001H 0702H 0002H 003CH
	l	er0,	NEAR _uniRawSensorOut+04h
	srlc	r0,	#02h
	sra	r1,	#02h
	st	er0,	NEAR _uniRawSensorOut+04h

;;	flSensorOut[0] = (float)uniRawSensorOut._intArr[0]*0.146f;	// X
CLINEA 0000H 0001H 0704H 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	r0,	#06h
	mov	r1,	#081h
	mov	r2,	#015h
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = (float)uniRawSensorOut._intArr[1]*0.146f;	// Y
CLINEA 0000H 0001H 0705H 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut+02h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	r0,	#06h
	mov	r1,	#081h
	mov	r2,	#015h
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	flSensorOut[2] = (float)uniRawSensorOut._intArr[2]*0.146f;	// Y
CLINEA 0000H 0001H 0706H 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut+04h
	mov	r2,	r1
	extbw	er2
	mov	r2,	r3
	push	xr0
	bl	__fildu8sw
	mov	r0,	#06h
	mov	r1,	#081h
	mov	r2,	#015h
	mov	r3,	#03eh
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+08h
	st	er2,	NEAR _flSensorOut+0ah

;;		uniRawSensorOut._intArr[0], flSensorOut[0], uniRawSensorOut._intArr[1], flSensorOut[1], uniRawSensorOut._intArr[2], flSensorOut[2]);
CLINEA 0000H 0001H 0708H 0003H 0086H
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+04h
	push	er0
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut+02h
	push	er0
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _uniRawSensorOut
	push	er0
	mov	r0,	#BYTE1 OFFSET $$S433
	mov	r1,	#BYTE2 OFFSET $$S433
	push	er0
	bl	_printf_n
	add	sp,	#32
CBLOCKEND 210 2 1801

;;}
CLINEA 0000H 0001H 0709H 0001H 0001H
	pop	pc
CBLOCKEND 210 1 1801
CFUNCTIONEND 210


	rseg $$MainOp_Temperature_Sensor_20$main
CFUNCTION 211

_MainOp_Temperature_Sensor_20	:
CBLOCK 211 1 1814

;;{
CLINEA 0000H 0001H 0716H 0001H 0001H
	push	lr
CBLOCK 211 2 1814
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 0717H 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 0719H 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = Voltage2Temperature(flSensorOut[0], 1.3f, 30.0f, -0.0082f);
CLINEA 0000H 0001H 071BH 0002H 004DH
	push	xr0
	mov	r0,	#066h
	mov	r1,	#066h
	mov	r2,	#0a6h
	mov	r3,	#0bfh
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	mov	r0,	#04bh
	mov	r1,	#059h
	mov	r2,	#06h
	mov	r3,	#0bch
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0f0h
	mov	r3,	#041h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	LEDOUT(((unsigned char)(uniRawSensorOut._uint>>2)));
CLINEA 0000H 0001H 071DH 0002H 0035H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#02h
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BD1020HFV> Temperature = %.02f[°C]. Vsenout = %.02f[V]" ESC_SOL, flSensorOut[1], flSensorOut[0]);
CLINEA 0000H 0001H 071EH 0002H 0079H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#BYTE1 OFFSET $$S435
	mov	r1,	#BYTE2 OFFSET $$S435
	push	er0
	bl	_printf_n
	add	sp,	#18
CBLOCKEND 211 2 1823

;;}
CLINEA 0000H 0001H 071FH 0001H 0001H
	pop	pc
CBLOCKEND 211 1 1823
CFUNCTIONEND 211


	rseg $$MainOp_Temperature_Sensor_21$main
CFUNCTION 212

_MainOp_Temperature_Sensor_21	:
CBLOCK 212 1 1836

;;{
CLINEA 0000H 0001H 072CH 0001H 0001H
	push	lr
CBLOCK 212 2 1836
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 072DH 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 072FH 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = Voltage2Temperature(flSensorOut[0], 1.3f, 30.0f, -0.0082f);
CLINEA 0000H 0001H 0731H 0002H 004DH
	push	xr0
	mov	r0,	#066h
	mov	r1,	#066h
	mov	r2,	#0a6h
	mov	r3,	#0bfh
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	mov	r0,	#04bh
	mov	r1,	#059h
	mov	r2,	#06h
	mov	r3,	#0bch
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0f0h
	mov	r3,	#041h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	LEDOUT(ReverseBits((unsigned char)(uniRawSensorOut._uint>>3)));
CLINEA 0000H 0000H 0733H 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#03h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BDJ0601HFV> Temperature = %.02f[°C]. Vsenout = %.02f[V]", flSensorOut[1], flSensorOut[0]);
CLINEA 0000H 0001H 0734H 0002H 0072H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#BYTE1 OFFSET $$S437
	mov	r1,	#BYTE2 OFFSET $$S437
	push	er0
	bl	_printf_n
	add	sp,	#18

;;	if(SENINTF_HDR1_GPIO0(D)==1)
CLINEA 0000H 0001H 0735H 0002H 001DH
	tb	0f258h.2
	beq	_$L438

;;		PRINTF(ESC_NEWLINE "BDJ0601HFV> Temperature Threshold Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 0736H 0003H 0050H
	mov	er0,	#48
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S440
	mov	r3,	#BYTE2 OFFSET $$S440
	mov	er0,	#0 
	bl	_write

;;	else
CLINEA 0000H 0001H 0737H 0002H 0005H
	bal	_$L441
_$L438 :

;;		PRINTF(ESC_NEWLINE "BDJ0601HFV> Temperature Threshold Not Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 0738H 0003H 0054H
	mov	er0,	#52
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S442
	mov	r3,	#BYTE2 OFFSET $$S442
	mov	er0,	#0 
	bl	_write
_$L441 :
	add	sp,	#2 
CBLOCKEND 212 2 1849

;;}
CLINEA 0000H 0001H 0739H 0001H 0001H
	pop	pc
CBLOCKEND 212 1 1849
CFUNCTIONEND 212


	rseg $$MainOp_Temperature_Sensor_22$main
CFUNCTION 213

_MainOp_Temperature_Sensor_22	:
CBLOCK 213 1 1862

;;{
CLINEA 0000H 0001H 0746H 0001H 0001H
	push	lr
CBLOCK 213 2 1862
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 0747H 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 0749H 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = Voltage2Temperature(flSensorOut[0], 1.753f, 30.0f, -0.01068f);
CLINEA 0000H 0001H 074BH 0002H 0050H
	push	xr0
	mov	r0,	#04eh
	mov	r1,	#062h
	mov	r2,	#0e0h
	mov	r3,	#0bfh
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	mov	r0,	#02bh
	mov	r1,	#0fbh
	mov	r2,	#02eh
	mov	r3,	#0bch
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0f0h
	mov	r3,	#041h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	LEDOUT(ReverseBits((unsigned char)(uniRawSensorOut._uint>>3)));
CLINEA 0000H 0000H 074DH 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#03h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BDE0600G> Temperature = %.02f[°C]. Vsenout = %.02f[V]", flSensorOut[1], flSensorOut[0]);
CLINEA 0000H 0001H 074EH 0002H 0070H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#BYTE1 OFFSET $$S444
	mov	r1,	#BYTE2 OFFSET $$S444
	push	er0
	bl	_printf_n
	add	sp,	#18

;;	if(SENINTF_HDR1_GPIO0(D)==0)
CLINEA 0000H 0001H 074FH 0002H 001DH
	tb	0f258h.2
	bne	_$L445

;;		PRINTF(ESC_NEWLINE "BDE0600G> Temperature Threshold Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 0750H 0003H 004EH
	mov	er0,	#46
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S447
	mov	r3,	#BYTE2 OFFSET $$S447
	mov	er0,	#0 
	bl	_write

;;	else
CLINEA 0000H 0001H 0751H 0002H 0005H
	bal	_$L448
_$L445 :

;;		PRINTF(ESC_NEWLINE "BDE0600G> Temperature Threshold Not Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 0752H 0003H 0052H
	mov	er0,	#50
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S449
	mov	r3,	#BYTE2 OFFSET $$S449
	mov	er0,	#0 
	bl	_write
_$L448 :
	add	sp,	#2 
CBLOCKEND 213 2 1875

;;}
CLINEA 0000H 0001H 0753H 0001H 0001H
	pop	pc
CBLOCKEND 213 1 1875
CFUNCTIONEND 213


	rseg $$MainOp_Temperature_Sensor_23$main
CFUNCTION 214

_MainOp_Temperature_Sensor_23	:
CBLOCK 214 1 1888

;;{
CLINEA 0000H 0001H 0760H 0001H 0001H
	push	lr
CBLOCK 214 2 1888
CRET 0000H

;;	uniRawSensorOut._uint = ADC_Read(0);
CLINEA 0000H 0000H 0761H 0002H 0025H
	mov	r0,	#00h
	bl	_ADC_Read
	st	er0,	NEAR _uniRawSensorOut

;;	flSensorOut[0] = uniRawSensorOut._uint*3.3f/1023;
CLINEA 0000H 0001H 0763H 0002H 0032H
	mov	er2,	#0 
	push	xr0
	bl	__fuldu8sw
	mov	r0,	#033h
	mov	r1,	#033h
	mov	r2,	#053h
	mov	r3,	#040h
	push	xr0
	bl	__fmulu8sw
	add	sp,	#4 
	mov	r0,	#00h
	mov	r1,	#0c0h
	mov	r2,	#07fh
	mov	r3,	#044h
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut
	st	er2,	NEAR _flSensorOut+02h

;;	flSensorOut[1] = Voltage2Temperature(flSensorOut[0], 1.3f, 30.0f, -0.0082f);
CLINEA 0000H 0001H 0765H 0002H 004DH
	push	xr0
	mov	r0,	#066h
	mov	r1,	#066h
	mov	r2,	#0a6h
	mov	r3,	#0bfh
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	mov	r0,	#04bh
	mov	r1,	#059h
	mov	r2,	#06h
	mov	r3,	#0bch
	push	xr0
	bl	__fdivu8sw
	add	sp,	#4 
	mov	er0,	#0 
	mov	r2,	#0f0h
	mov	r3,	#041h
	push	xr0
	bl	__faddu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	NEAR _flSensorOut+04h
	st	er2,	NEAR _flSensorOut+06h

;;	LEDOUT(ReverseBits((unsigned char)(uniRawSensorOut._uint>>3)));
CLINEA 0000H 0000H 0767H 0002H 0040H
	l	er0,	NEAR _uniRawSensorOut
	srlc	r0,	#03h
	bl	_ReverseBits
	st	r0,	0f260h

;;	printf(ESC_ERASE2END "BDJ0550HFV> Temperature = %.02f[°C]. Vsenout = %.02f[V]", flSensorOut[1], flSensorOut[0]);
CLINEA 0000H 0001H 0768H 0002H 0072H
	l	er0,	NEAR _flSensorOut
	l	er2,	NEAR _flSensorOut+02h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	l	er0,	NEAR _flSensorOut+04h
	l	er2,	NEAR _flSensorOut+06h
	push	xr0
	add	sp,	#-4
	bl	__ftodu8sw
	mov	r0,	#BYTE1 OFFSET $$S451
	mov	r1,	#BYTE2 OFFSET $$S451
	push	er0
	bl	_printf_n
	add	sp,	#18

;;	if(SENINTF_HDR1_GPIO0(D)==0)
CLINEA 0000H 0001H 0769H 0002H 001DH
	tb	0f258h.2
	bne	_$L452

;;		PRINTF(ESC_NEWLINE "BDJ0550HFV> Temperature Threshold Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 076AH 0003H 0050H
	mov	er0,	#48
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S454
	mov	r3,	#BYTE2 OFFSET $$S454
	mov	er0,	#0 
	bl	_write

;;	else
CLINEA 0000H 0001H 076BH 0002H 0005H
	bal	_$L455
_$L452 :

;;		PRINTF(ESC_NEWLINE "BDJ0550HFV> Temperature Threshold Not Reached." ESC_PREVLINE);
CLINEA 0000H 0001H 076CH 0003H 0054H
	mov	er0,	#52
	push	er0
	mov	r2,	#BYTE1 OFFSET $$S456
	mov	r3,	#BYTE2 OFFSET $$S456
	mov	er0,	#0 
	bl	_write
_$L455 :
	add	sp,	#2 
CBLOCKEND 214 2 1901

;;}
CLINEA 0000H 0001H 076DH 0001H 0001H
	pop	pc
CBLOCKEND 214 1 1901
CFUNCTIONEND 214


	rseg $$Init_Hall_Effect_Sensors_1$main
CFUNCTION 216

_Init_Hall_Effect_Sensors_1	:
CBLOCK 216 1 1914

;;{
CLINEA 0000H 0001H 077AH 0001H 0001H
CBLOCK 216 2 1914

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 077CH 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO1(DIR) = 1;
CLINEA 0000H 0001H 077DH 0002H 001DH
	sb	0f259h.3

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 077FH 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 0780H 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO1(C0) = 0;
CLINEA 0000H 0001H 0781H 0002H 001CH
	rb	0f25ah.3

;;	SENINTF_HDR1_GPIO1(C1) = 1;
CLINEA 0000H 0001H 0782H 0002H 001CH
	sb	0f25bh.3

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 0784H 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 0785H 0002H 001DH
	rb	0f25dh.2

;;	SENINTF_HDR1_GPIO1(MD0) = 0;
CLINEA 0000H 0001H 0786H 0002H 001DH
	rb	0f25ch.3

;;	SENINTF_HDR1_GPIO1(MD1) = 0;
CLINEA 0000H 0001H 0787H 0002H 001DH
	rb	0f25dh.3
CBLOCKEND 216 2 1928

;;}
CLINEA 0000H 0001H 0788H 0001H 0001H
	rt
CBLOCKEND 216 1 1928
CFUNCTIONEND 216


	rseg $$Init_Hall_Effect_Sensors_2$main
CFUNCTION 215

_Init_Hall_Effect_Sensors_2	:
CBLOCK 215 1 1941

;;{
CLINEA 0000H 0001H 0795H 0001H 0001H
CBLOCK 215 2 1941

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 0797H 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 0799H 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 079AH 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 079CH 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 079DH 0002H 001DH
	rb	0f25dh.2
CBLOCKEND 215 2 1950

;;}
CLINEA 0000H 0001H 079EH 0001H 0001H
	rt
CBLOCKEND 215 1 1950
CFUNCTIONEND 215


	rseg $$Init_Ambient_Light_Sensor_5$main
CFUNCTION 217

_Init_Ambient_Light_Sensor_5	:
CBLOCK 217 1 1963

;;{
CLINEA 0000H 0001H 07ABH 0001H 0001H
CBLOCK 217 2 1963

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 07ADH 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO1(DIR) = 1;
CLINEA 0000H 0001H 07AEH 0002H 001DH
	sb	0f259h.3

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 07B0H 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 07B1H 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO1(C0) = 0;
CLINEA 0000H 0001H 07B2H 0002H 001CH
	rb	0f25ah.3

;;	SENINTF_HDR1_GPIO1(C1) = 1;
CLINEA 0000H 0001H 07B3H 0002H 001CH
	sb	0f25bh.3

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 07B5H 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 07B6H 0002H 001DH
	rb	0f25dh.2

;;	SENINTF_HDR1_GPIO1(MD0) = 0;
CLINEA 0000H 0001H 07B7H 0002H 001DH
	rb	0f25ch.3

;;	SENINTF_HDR1_GPIO1(MD1) = 0;
CLINEA 0000H 0001H 07B8H 0002H 001DH
	rb	0f25dh.3
CBLOCKEND 217 2 1977

;;}
CLINEA 0000H 0001H 07B9H 0001H 0001H
	rt
CBLOCKEND 217 1 1977
CFUNCTIONEND 217


	rseg $$Init_Ambient_Light_Sensor_6$main
CFUNCTION 218

_Init_Ambient_Light_Sensor_6	:
CBLOCK 218 1 1990

;;{
CLINEA 0000H 0001H 07C6H 0001H 0001H
	push	lr
CBLOCK 218 2 1990
CRET 0000H

;;	I2C_Write(BH17xxFVC_ADDR_1, NULL, 0, &BH17xxFVC_PWR_ON, 1);
CLINEA 0000H 0001H 07C8H 0002H 003CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _BH17xxFVC_PWR_ON
	mov	r1,	#BYTE2 OFFSET _BH17xxFVC_PWR_ON
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(BH17xxFVC_ADDR_1, NULL, 0, &BH1710FVC_CONT_M_RES_MOD, 1);
CLINEA 0000H 0001H 07CAH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _BH1710FVC_CONT_M_RES_MOD
	mov	r1,	#BYTE2 OFFSET _BH1710FVC_CONT_M_RES_MOD
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Write
	add	sp,	#6 

;;	NOPms(24);
CLINEA 0000H 0001H 07CFH 0002H 000BH
	mov	er0,	#24
	bl	_NOPms
CBLOCKEND 218 2 2000

;;}
CLINEA 0000H 0001H 07D0H 0001H 0001H
	pop	pc
CBLOCKEND 218 1 2000
CFUNCTIONEND 218


	rseg $$Init_Ambient_Light_Sensor_7$main
CFUNCTION 219

_Init_Ambient_Light_Sensor_7	:
CBLOCK 219 1 2013

;;{
CLINEA 0000H 0001H 07DDH 0001H 0001H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
CBLOCK 219 2 2013
CRET 0004H
CLOCAL 42H 0001H 0001H 0002H "cTmp" 02H 00H 00H

;;	unsigned char cTmp = 0x0;
CLINEA 0000H 0001H 07DEH 0002H 001AH
	mov	r0,	#00h
	st	r0,	-1[fp]

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1730FVC_REG_INTERRUPT, 1, &cTmp, 1);
CLINEA 0000H 0001H 07E1H 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	er0,	fp
	add	er0,	#-1
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1730FVC_REG_INTERRUPT
	mov	r3,	#BYTE2 OFFSET _BH1730FVC_REG_INTERRUPT
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1730FVC_REG_GAIN, 1, &cTmp, 1);
CLINEA 0000H 0001H 07E3H 0002H 003FH
	mov	r0,	#01h
	push	r0
	mov	er0,	fp
	add	er0,	#-1
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1730FVC_REG_GAIN
	mov	r3,	#BYTE2 OFFSET _BH1730FVC_REG_GAIN
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 

;;	cTmp = 0xdau;
CLINEA 0000H 0001H 07E5H 0002H 000EH
	mov	r0,	#0dah
	st	r0,	-1[fp]

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1730FVC_REG_TIMING, 1, &cTmp, 1);
CLINEA 0000H 0001H 07E6H 0002H 0041H
	mov	r0,	#01h
	push	r0
	mov	er0,	fp
	add	er0,	#-1
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1730FVC_REG_TIMING
	mov	r3,	#BYTE2 OFFSET _BH1730FVC_REG_TIMING
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 

;;	cTmp = 0x3;
CLINEA 0000H 0001H 07E8H 0002H 000CH
	mov	r0,	#03h
	st	r0,	-1[fp]

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1730FVC_REG_CONTROL, 1, &cTmp, 1);
CLINEA 0000H 0001H 07E9H 0002H 0042H
	mov	r0,	#01h
	push	r0
	mov	er0,	fp
	add	er0,	#-1
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1730FVC_REG_CONTROL
	mov	r3,	#BYTE2 OFFSET _BH1730FVC_REG_CONTROL
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1730FVC_REG_DATA0LOW, 1, NULL, 0);
CLINEA 0000H 0001H 07EBH 0002H 0042H
	mov	r0,	#00h
	push	r0
	mov	er0,	#0 
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1730FVC_REG_DATA0LOW
	mov	r3,	#BYTE2 OFFSET _BH1730FVC_REG_DATA0LOW
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 
CBLOCKEND 219 2 2028

;;}
CLINEA 0000H 0001H 07ECH 0001H 0001H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 219 1 2028
CFUNCTIONEND 219


	rseg $$Init_Ambient_Light_Sensor_8$main
CFUNCTION 220

_Init_Ambient_Light_Sensor_8	:
CBLOCK 220 1 2041

;;{	
CLINEA 0000H 0001H 07F9H 0001H 0002H
	push	lr
CBLOCK 220 2 2041
CRET 0000H

;;	I2C_Write(BH17xxFVC_ADDR_1, NULL, 0, &BH17xxFVC_PWR_ON, 1);
CLINEA 0000H 0001H 07FBH 0002H 003CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _BH17xxFVC_PWR_ON
	mov	r1,	#BYTE2 OFFSET _BH17xxFVC_PWR_ON
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(BH17xxFVC_ADDR_1, NULL, 0, &BH1721FVC_CONT_A_RES_MOD, 1);
CLINEA 0000H 0001H 07FDH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _BH1721FVC_CONT_A_RES_MOD
	mov	r1,	#BYTE2 OFFSET _BH1721FVC_CONT_A_RES_MOD
	push	er0
	mov	r0,	#00h
	push	r0
	mov	er2,	#0 
	mov	r0,	#023h
	bl	_I2C_Write
	add	sp,	#6 

;;	NOPms(180);	
CLINEA 0000H 0001H 0801H 0002H 000DH
	mov	r0,	#0b4h
	mov	r1,	#00h
	bl	_NOPms
CBLOCKEND 220 2 2050

;;}
CLINEA 0000H 0001H 0802H 0001H 0001H
	pop	pc
CBLOCKEND 220 1 2050
CFUNCTIONEND 220


	rseg $$Init_Ambient_Light_Sensor_9$main
CFUNCTION 221

_Init_Ambient_Light_Sensor_9	:
CBLOCK 221 1 2063

;;{
CLINEA 0000H 0001H 080FH 0001H 0001H
	push	lr
CBLOCK 221 2 2063
CRET 0000H

;;	uniRawSensorOut._uchar = 0x3;
CLINEA 0000H 0001H 0810H 0002H 001EH
	mov	r0,	#03h
	st	r0,	NEAR _uniRawSensorOut

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1780GLI_REG_CONTROL, 1, &uniRawSensorOut._uchar, 1);
CLINEA 0000H 0001H 0812H 0002H 0054H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1780GLI_REG_CONTROL
	mov	r3,	#BYTE2 OFFSET _BH1780GLI_REG_CONTROL
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(BH17xxFVC_ADDR_2, &BH1780GLI_REG_DATALOW, 1, NULL, 0);
CLINEA 0000H 0001H 0814H 0002H 0041H
	mov	r0,	#00h
	push	r0
	mov	er0,	#0 
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _BH1780GLI_REG_DATALOW
	mov	r3,	#BYTE2 OFFSET _BH1780GLI_REG_DATALOW
	mov	r0,	#029h
	bl	_I2C_Write
	add	sp,	#6 
CBLOCKEND 221 2 2069

;;}
CLINEA 0000H 0001H 0815H 0001H 0001H
	pop	pc
CBLOCKEND 221 1 2069
CFUNCTIONEND 221


	rseg $$Init_UV_Sensor_10$main
CFUNCTION 222

_Init_UV_Sensor_10	:
CBLOCK 222 1 2082

;;{
CLINEA 0000H 0001H 0822H 0001H 0001H
CBLOCK 222 2 2082
CBLOCKEND 222 2 2085

;;}
CLINEA 0000H 0001H 0825H 0001H 0001H
	rt
CBLOCKEND 222 1 2085
CFUNCTIONEND 222


	rseg $$Init_KX022$main
CFUNCTION 223

_Init_KX022	:
CBLOCK 223 1 2098

;;{
CLINEA 0000H 0001H 0832H 0001H 0001H
	push	lr
CBLOCK 223 2 2098
CRET 0000H

;;	I2C_Write(KX022_I2C_ADDR, &KX022_CNTL1, 1, &KX022_CNTL1_CFGDAT, 1);
CLINEA 0000H 0001H 0833H 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KX022_CNTL1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KX022_CNTL1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_CNTL1
	mov	r3,	#BYTE2 OFFSET _KX022_CNTL1
	mov	r0,	#01eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KX022_I2C_ADDR, &KX022_ODCNTL, 1, &KX022_ODCNTL_CFGDAT, 1);
CLINEA 0000H 0001H 0834H 0002H 0046H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KX022_ODCNTL_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KX022_ODCNTL_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_ODCNTL
	mov	r3,	#BYTE2 OFFSET _KX022_ODCNTL
	mov	r0,	#01eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KX022_I2C_ADDR, &KX022_CNTL3, 1, &KX022_CNTL3_CFGDAT, 1);
CLINEA 0000H 0001H 0835H 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KX022_CNTL3_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KX022_CNTL3_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_CNTL3
	mov	r3,	#BYTE2 OFFSET _KX022_CNTL3
	mov	r0,	#01eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KX022_I2C_ADDR, &KX022_TILT_TIMER, 1, &KX022_TILT_TIMER_CFGDAT, 1);
CLINEA 0000H 0001H 0836H 0002H 004EH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KX022_TILT_TIMER_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KX022_TILT_TIMER_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_TILT_TIMER
	mov	r3,	#BYTE2 OFFSET _KX022_TILT_TIMER
	mov	r0,	#01eh
	bl	_I2C_Write
	add	sp,	#6 

;;	uniRawSensorOut._uchar = (unsigned char)(KX022_CNTL1_CFGDAT|0x80);
CLINEA 0000H 0001H 0838H 0002H 0043H
	mov	r0,	#0c1h
	st	r0,	NEAR _uniRawSensorOut

;;	I2C_Write(KX022_I2C_ADDR, &KX022_CNTL1, 1, &uniRawSensorOut._uchar, 1);
CLINEA 0000H 0001H 0839H 0002H 0048H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KX022_CNTL1
	mov	r3,	#BYTE2 OFFSET _KX022_CNTL1
	mov	r0,	#01eh
	bl	_I2C_Write
	add	sp,	#6 
CBLOCKEND 223 2 2106

;;}
CLINEA 0000H 0001H 083AH 0001H 0001H
	pop	pc
CBLOCKEND 223 1 2106
CFUNCTIONEND 223


	rseg $$Init_KMX61$main
CFUNCTION 224

_Init_KMX61	:
CBLOCK 224 1 2119

;;{ 
CLINEA 0000H 0001H 0847H 0001H 0002H
	push	lr
CBLOCK 224 2 2119
CRET 0000H

;;	uniRawSensorOut._uchar = 0x03u;
CLINEA 0000H 0001H 0849H 0002H 0020H
	mov	r0,	#03h
	st	r0,	NEAR _uniRawSensorOut

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_STBY_REG, 1, &uniRawSensorOut._uchar, 1);
CLINEA 0000H 0001H 084AH 0002H 004BH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_STBY_REG
	mov	r3,	#BYTE2 OFFSET _KMX61_STBY_REG
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_SELF_TEST, 1, &KMX61_SELF_TEST_CFGDAT, 1);
CLINEA 0000H 0001H 084CH 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_SELF_TEST_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_SELF_TEST_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_SELF_TEST
	mov	r3,	#BYTE2 OFFSET _KMX61_SELF_TEST
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_CNTL1, 1, &KMX61_CNTL1_CFGDAT, 1);
CLINEA 0000H 0001H 084DH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_CNTL1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_CNTL1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_CNTL1
	mov	r3,	#BYTE2 OFFSET _KMX61_CNTL1
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_CNTL2, 1, &KMX61_CNTL2_CFGDAT, 1);
CLINEA 0000H 0001H 084EH 0002H 0044H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_CNTL2_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_CNTL2_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_CNTL2
	mov	r3,	#BYTE2 OFFSET _KMX61_CNTL2
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_ODCNTL, 1, &KMX61_ODCNTL_CFGDAT, 1);
CLINEA 0000H 0001H 084FH 0002H 0046H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_ODCNTL_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_ODCNTL_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_ODCNTL
	mov	r3,	#BYTE2 OFFSET _KMX61_ODCNTL
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_TEMP_EN_CNTL, 1, &KMX61_TEMP_EN_CNTL_CFGDAT, 1);
CLINEA 0000H 0001H 0850H 0002H 0052H
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_TEMP_EN_CNTL_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_TEMP_EN_CNTL_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_TEMP_EN_CNTL
	mov	r3,	#BYTE2 OFFSET _KMX61_TEMP_EN_CNTL
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_BUF_CTRL1, 1, &KMX61_BUF_CTRL1_CFGDAT, 1);
CLINEA 0000H 0001H 0851H 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_BUF_CTRL1_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_BUF_CTRL1_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_BUF_CTRL1
	mov	r3,	#BYTE2 OFFSET _KMX61_BUF_CTRL1
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_BUF_CTRL2, 1, &KMX61_BUF_CTRL2_CFGDAT, 1);
CLINEA 0000H 0001H 0852H 0002H 004CH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _KMX61_BUF_CTRL2_CFGDAT
	mov	r1,	#BYTE2 OFFSET _KMX61_BUF_CTRL2_CFGDAT
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_BUF_CTRL2
	mov	r3,	#BYTE2 OFFSET _KMX61_BUF_CTRL2
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 

;;	uniRawSensorOut._uchar = 0x0u;
CLINEA 0000H 0001H 0854H 0002H 001FH
	mov	r0,	#00h
	st	r0,	NEAR _uniRawSensorOut

;;	I2C_Write(KMX61_I2C_ADDR, &KMX61_STBY_REG, 1, &uniRawSensorOut._uchar, 1);
CLINEA 0000H 0001H 0855H 0002H 004BH
	mov	r0,	#01h
	push	r0
	mov	r0,	#BYTE1 OFFSET _uniRawSensorOut
	mov	r1,	#BYTE2 OFFSET _uniRawSensorOut
	push	er0
	mov	r0,	#01h
	push	r0
	mov	r2,	#BYTE1 OFFSET _KMX61_STBY_REG
	mov	r3,	#BYTE2 OFFSET _KMX61_STBY_REG
	mov	r0,	#0eh
	bl	_I2C_Write
	add	sp,	#6 
CBLOCKEND 224 2 2134

;;}
CLINEA 0000H 0001H 0856H 0001H 0001H
	pop	pc
CBLOCKEND 224 1 2134
CFUNCTIONEND 224


	rseg $$Init_Temperature_Sensor_20$main
CFUNCTION 225

_Init_Temperature_Sensor_20	:
CBLOCK 225 1 2147

;;{
CLINEA 0000H 0001H 0863H 0001H 0001H
CBLOCK 225 2 2147
CBLOCKEND 225 2 2150

;;}
CLINEA 0000H 0001H 0866H 0001H 0001H
	rt
CBLOCKEND 225 1 2150
CFUNCTIONEND 225


	rseg $$Init_Temperature_Sensor_21$main
CFUNCTION 226

_Init_Temperature_Sensor_21	:
CBLOCK 226 1 2163

;;{
CLINEA 0000H 0001H 0873H 0001H 0001H
CBLOCK 226 2 2163

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 0875H 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 0877H 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 0878H 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 087AH 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 087BH 0002H 001DH
	rb	0f25dh.2
CBLOCKEND 226 2 2172

;;}
CLINEA 0000H 0001H 087CH 0001H 0001H
	rt
CBLOCKEND 226 1 2172
CFUNCTIONEND 226


	rseg $$Init_Temperature_Sensor_22$main
CFUNCTION 227

_Init_Temperature_Sensor_22	:
CBLOCK 227 1 2185

;;{
CLINEA 0000H 0001H 0889H 0001H 0001H
CBLOCK 227 2 2185

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 088BH 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 088DH 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 088EH 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 0890H 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 0891H 0002H 001DH
	rb	0f25dh.2
CBLOCKEND 227 2 2194

;;}
CLINEA 0000H 0001H 0892H 0001H 0001H
	rt
CBLOCKEND 227 1 2194
CFUNCTIONEND 227


	rseg $$Init_Temperature_Sensor_23$main
CFUNCTION 228

_Init_Temperature_Sensor_23	:
CBLOCK 228 1 2207

;;{
CLINEA 0000H 0001H 089FH 0001H 0001H
CBLOCK 228 2 2207

;;	SENINTF_HDR1_GPIO0(DIR) = 1;
CLINEA 0000H 0001H 08A1H 0002H 001DH
	sb	0f259h.2

;;	SENINTF_HDR1_GPIO0(C0) = 0;
CLINEA 0000H 0001H 08A3H 0002H 001CH
	rb	0f25ah.2

;;	SENINTF_HDR1_GPIO0(C1) = 1;
CLINEA 0000H 0001H 08A4H 0002H 001CH
	sb	0f25bh.2

;;	SENINTF_HDR1_GPIO0(MD0) = 0;
CLINEA 0000H 0001H 08A6H 0002H 001DH
	rb	0f25ch.2

;;	SENINTF_HDR1_GPIO0(MD1) = 0;
CLINEA 0000H 0001H 08A7H 0002H 001DH
	rb	0f25dh.2
CBLOCKEND 228 2 2216

;;}
CLINEA 0000H 0001H 08A8H 0001H 0001H
	rt
CBLOCKEND 228 1 2216
CFUNCTIONEND 228


	rseg $$main_clrWDT$main
CFUNCTION 179

_main_clrWDT	:
CBLOCK 179 1 2227

;;{
CLINEA 0000H 0001H 08B3H 0001H 0001H
CBLOCK 179 2 2227

;;	do {
CLINEA 0000H 0001H 08B6H 0002H 0005H
_$L474 :
CBLOCK 179 3 2230

;;		WDTCON = 0x5Au;
CLINEA 0000H 0001H 08B7H 0003H 0011H
	mov	r0,	#05ah
	st	r0,	0f00eh
CBLOCKEND 179 3 2232

;;	} while (WDP != 1);
CLINEA 0000H 0000H 08B8H 0002H 0014H
	tb	0f00eh.0
	beq	_$L474

;;	WDTCON = 0xA5u;
CLINEA 0000H 0001H 08B9H 0002H 0010H
	mov	r0,	#0a5h
	st	r0,	0f00eh
CBLOCKEND 179 2 2234

;;}
CLINEA 0000H 0001H 08BAH 0001H 0001H
	rt
CBLOCKEND 179 1 2234
CFUNCTIONEND 179


	rseg $$_funcUartFin$main
CFUNCTION 190

__funcUartFin	:
CBLOCK 190 1 2245

;;{
CLINEA 0000H 0001H 08C5H 0001H 0001H
	push	lr
CBLOCK 190 2 2245
CRET 0000H
CARGUMENT 46H 0002H 0000H "size" 02H 00H 01H
CARGUMENT 46H 0001H 0000H "errStat" 02H 00H 00H

;;	uart_continue();					// Function in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 08C6H 0002H 0054H
	bl	_uart_continue

;;	_flgUartFin = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 08C7H 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __flgUartFin

;;	main_reqNotHalt();				// uncommented 5/2/2013
CLINEA 0000H 0001H 08C8H 0002H 002EH
	bl	_main_reqNotHalt
CBLOCKEND 190 2 2249

;;}
CLINEA 0000H 0001H 08C9H 0001H 0001H
	pop	pc
CBLOCKEND 190 1 2249
CFUNCTIONEND 190


	rseg $$_funcI2CFin$main
CFUNCTION 191

__funcI2CFin	:
CBLOCK 191 1 2260

;;{
CLINEA 0000H 0001H 08D4H 0001H 0001H
	push	lr
CBLOCK 191 2 2260
CRET 0000H
CARGUMENT 46H 0002H 0000H "size" 02H 00H 01H
CARGUMENT 46H 0001H 0000H "errStat" 02H 00H 00H

;;	i2c_continue();					// Function in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 08D5H 0002H 0053H
	bl	_i2c_continue

;;	_flgI2CFin = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 08D6H 0002H 0025H
	mov	r0,	#01h
	st	r0,	NEAR __flgI2CFin

;;	main_reqNotHalt();				// uncommented 5/2/2013
CLINEA 0000H 0001H 08D7H 0002H 002EH
	bl	_main_reqNotHalt
CBLOCKEND 191 2 2264

;;}
CLINEA 0000H 0001H 08D8H 0001H 0001H
	pop	pc
CBLOCKEND 191 1 2264
CFUNCTIONEND 191


	rseg $$_intI2c$main
CFUNCTION 194

__intI2c	:
CBLOCK 194 1 2274

;;{
CLINEA 0000H 0001H 08E2H 0001H 0001H
	push	lr
CBLOCK 194 2 2274
CRET 0000H

;;	i2c_continue();
CLINEA 0000H 0001H 08E3H 0002H 0010H
	bl	_i2c_continue

;;	main_reqNotHalt();
CLINEA 0000H 0001H 08E4H 0002H 0013H
	bl	_main_reqNotHalt
CBLOCKEND 194 2 2277

;;}
CLINEA 0000H 0001H 08E5H 0001H 0001H
	pop	pc
CBLOCKEND 194 1 2277
CFUNCTIONEND 194


	rseg $$_intADC$main
CFUNCTION 195

__intADC	:
CBLOCK 195 1 2287

;;{
CLINEA 0000H 0001H 08EFH 0001H 0001H
CBLOCK 195 2 2287

;;	_flgADCFin = 1;
CLINEA 0000H 0001H 08F0H 0002H 0010H
	mov	r0,	#01h
	st	r0,	NEAR __flgADCFin
CBLOCKEND 195 2 2289

;;}
CLINEA 0000H 0001H 08F1H 0001H 0001H
	rt
CBLOCKEND 195 1 2289
CFUNCTIONEND 195


	rseg $$main_reqNotHalt$main
CFUNCTION 192

_main_reqNotHalt	:
CBLOCK 192 1 2299

;;{
CLINEA 0000H 0001H 08FBH 0001H 0001H
CBLOCK 192 2 2299

;;	_reqNotHalt = (unsigned char)FLG_SET;
CLINEA 0000H 0001H 08FCH 0002H 0026H
	mov	r0,	#01h
	st	r0,	NEAR __reqNotHalt
CBLOCKEND 192 2 2301

;;}
CLINEA 0000H 0001H 08FDH 0001H 0001H
	rt
CBLOCKEND 192 1 2301
CFUNCTIONEND 192


	rseg $$_intUart$main
CFUNCTION 193

__intUart	:
CBLOCK 193 1 2311

;;{
CLINEA 0000H 0001H 0907H 0001H 0001H
CBLOCK 193 2 2311

;;	uart_continue(); 	//in UART.c: process to continue send and receive...
CLINEA 0000H 0001H 0908H 0002H 0047H
	b	_uart_continue
CBLOCKEND 193 2 2313
CLINEA 0000H 0001H 0909H 0001H 0001H
CBLOCKEND 193 1 2313
CFUNCTIONEND 193


	rseg $$SetOSC$main
CFUNCTION 181

_SetOSC	:
CBLOCK 181 1 2318

;;static void SetOSC(void){
CLINEA 0000H 0001H 090EH 0001H 0019H
CBLOCK 181 2 2318

;;	SYSC0 = 0;			// Used to select the frequency of the HSCLK => 00=8.192MHz.
CLINEA 0000H 0001H 0911H 0002H 004AH
	rb	0f002h.0

;;	SYSC1 = 0;
CLINEA 0000H 0001H 0912H 0002H 000BH
	rb	0f002h.1

;;	OSCM1 = 1;			// 10 => Built-in PLL oscillation mode
CLINEA 0000H 0001H 0914H 0002H 0034H
	sb	0f002h.3

;;	OSCM0 = 0;
CLINEA 0000H 0001H 0915H 0002H 000BH
	rb	0f002h.2

;;	ENOSC = 1;			//1=Enable High Speed Oscillator...
CLINEA 0000H 0001H 0917H 0002H 0031H
	sb	0f003h.1

;;	SYSCLK = 1;			//1=HSCLK; 0=LSCLK 
CLINEA 0000H 0001H 0918H 0002H 0022H
	sb	0f003h.0

;;	LPLL = 1;			//1=Enables the use of PLL oscillation - ADDED 4/30/2013
CLINEA 0000H 0001H 091AH 0002H 0045H
	sb	0f003h.7

;;	__EI();			//INT enable
CLINEA 0000H 0001H 091CH 0002H 0017H
	ei
CBLOCKEND 181 2 2333

;;}
CLINEA 0000H 0001H 091DH 0001H 0001H
	rt
CBLOCKEND 181 1 2333
CFUNCTIONEND 181


	rseg $$PortA_Low$main
CFUNCTION 182

_PortA_Low	:
CBLOCK 182 1 2339

;;void PortA_Low(void){
CLINEA 0000H 0001H 0923H 0001H 0015H
CBLOCK 182 2 2339

;;	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
CLINEA 0000H 0001H 092DH 0002H 0031H
	rb	0f251h.0

;;	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
CLINEA 0000H 0001H 092EH 0002H 0031H
	rb	0f251h.1

;;	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
CLINEA 0000H 0001H 092FH 0002H 0031H
	rb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0932H 0002H 0031H
	sb	0f253h.0

;;	PA0C0  = 1;		
CLINEA 0000H 0001H 0933H 0002H 000EH
	sb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
CLINEA 0000H 0001H 0934H 0002H 0031H
	sb	0f253h.1

;;	PA1C0  = 1;	
CLINEA 0000H 0001H 0935H 0002H 000DH
	sb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
CLINEA 0000H 0001H 0936H 0002H 0031H
	sb	0f253h.2

;;	PA2C0  = 1;	
CLINEA 0000H 0001H 0937H 0002H 000DH
	sb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 093AH 0002H 003CH
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 093BH 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 093CH 0002H 003CH
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 093DH 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 093EH 0002H 003CH
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 093FH 0002H 000EH
	rb	0f254h.2

;;	PA0D = 0;		// A.0 Output OFF....
CLINEA 0000H 0001H 0942H 0002H 0021H
	rb	0f250h.0

;;	PA1D = 0;		// A.1 Output OFF....
CLINEA 0000H 0001H 0943H 0002H 0021H
	rb	0f250h.1

;;	PA2D = 0;		// A.2 Output OFF....
CLINEA 0000H 0001H 0944H 0002H 0021H
	rb	0f250h.2

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0946H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 182 2 2375
CLINEA 0000H 0001H 0947H 0001H 0001H
CBLOCKEND 182 1 2375
CFUNCTIONEND 182


	rseg $$PortB_Low$main
CFUNCTION 183

_PortB_Low	:
CBLOCK 183 1 2381

;;void PortB_Low(void){
CLINEA 0000H 0001H 094DH 0001H 0015H
CBLOCK 183 2 2381

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 0957H 0002H 0031H
	rb	0f259h.0

;;	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
CLINEA 0000H 0001H 0958H 0002H 0031H
	rb	0f259h.1

;;	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
CLINEA 0000H 0001H 0959H 0002H 0031H
	rb	0f259h.2

;;	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
CLINEA 0000H 0001H 095AH 0002H 0031H
	rb	0f259h.3

;;	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
CLINEA 0000H 0001H 095BH 0002H 0031H
	rb	0f259h.4

;;	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
CLINEA 0000H 0001H 095CH 0002H 0031H
	rb	0f259h.5

;;	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
CLINEA 0000H 0001H 095DH 0002H 0031H
	rb	0f259h.6

;;	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
CLINEA 0000H 0001H 095EH 0002H 0031H
	rb	0f259h.7

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0961H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 0962H 0002H 000EH
	sb	0f25ah.0

;;	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
CLINEA 0000H 0001H 0963H 0002H 0031H
	sb	0f25bh.1

;;	PB1C0  = 1;	
CLINEA 0000H 0001H 0964H 0002H 000DH
	sb	0f25ah.1

;;	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
CLINEA 0000H 0001H 0965H 0002H 0031H
	sb	0f25bh.2

;;	PB2C0  = 1;	
CLINEA 0000H 0001H 0966H 0002H 000DH
	sb	0f25ah.2

;;	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
CLINEA 0000H 0001H 0967H 0002H 0031H
	sb	0f25bh.3

;;	PB3C0  = 1;		
CLINEA 0000H 0001H 0968H 0002H 000EH
	sb	0f25ah.3

;;	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
CLINEA 0000H 0001H 0969H 0002H 0031H
	sb	0f25bh.4

;;	PB4C0  = 1;	
CLINEA 0000H 0001H 096AH 0002H 000DH
	sb	0f25ah.4

;;	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
CLINEA 0000H 0001H 096BH 0002H 0031H
	sb	0f25bh.5

;;	PB5C0  = 1;	
CLINEA 0000H 0001H 096CH 0002H 000DH
	sb	0f25ah.5

;;	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
CLINEA 0000H 0001H 096DH 0002H 0031H
	sb	0f25bh.6

;;	PB6C0  = 1;	
CLINEA 0000H 0001H 096EH 0002H 000DH
	sb	0f25ah.6

;;	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
CLINEA 0000H 0001H 096FH 0002H 0031H
	sb	0f25bh.7

;;	PB7C0  = 1;	
CLINEA 0000H 0001H 0970H 0002H 000DH
	sb	0f25ah.7

;;	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 0973H 0002H 003CH
	rb	0f25dh.0

;;	PB0MD0  = 0;	
CLINEA 0000H 0001H 0974H 0002H 000EH
	rb	0f25ch.0

;;	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 0975H 0002H 003CH
	rb	0f25dh.1

;;	PB1MD0  = 0;	
CLINEA 0000H 0001H 0976H 0002H 000EH
	rb	0f25ch.1

;;	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 0977H 0002H 003CH
	rb	0f25dh.2

;;	PB2MD0  = 0;	
CLINEA 0000H 0001H 0978H 0002H 000EH
	rb	0f25ch.2

;;	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 0979H 0002H 003CH
	rb	0f25dh.3

;;	PB3MD0  = 0;	
CLINEA 0000H 0001H 097AH 0002H 000EH
	rb	0f25ch.3

;;	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
CLINEA 0000H 0001H 097BH 0002H 003CH
	rb	0f25dh.4

;;	PB4MD0  = 0;	
CLINEA 0000H 0001H 097CH 0002H 000EH
	rb	0f25ch.4

;;	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
CLINEA 0000H 0001H 097DH 0002H 003CH
	rb	0f25dh.5

;;	PB5MD0  = 0;
CLINEA 0000H 0001H 097EH 0002H 000DH
	rb	0f25ch.5

;;	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
CLINEA 0000H 0001H 097FH 0002H 003CH
	rb	0f25dh.6

;;	PB6MD0  = 0;	
CLINEA 0000H 0001H 0980H 0002H 000EH
	rb	0f25ch.6

;;	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 0981H 0002H 003CH
	rb	0f25dh.7

;;	PB7MD0  = 0;
CLINEA 0000H 0001H 0982H 0002H 000DH
	rb	0f25ch.7

;;	PB0D = 0;		// B.0 Output OFF....
CLINEA 0000H 0001H 0985H 0002H 0021H
	rb	0f258h.0

;;	PB1D = 0;		// B.1 Output OFF....
CLINEA 0000H 0001H 0986H 0002H 0021H
	rb	0f258h.1

;;	PB2D = 0;		// B.2 Output OFF....
CLINEA 0000H 0001H 0987H 0002H 0021H
	rb	0f258h.2

;;	PB3D = 0;		// B.3 Output OFF....
CLINEA 0000H 0001H 0988H 0002H 0021H
	rb	0f258h.3

;;	PB4D = 0;		// B.4 Output OFF....
CLINEA 0000H 0001H 0989H 0002H 0021H
	rb	0f258h.4

;;	PB5D = 0;		// B.5 Output OFF....
CLINEA 0000H 0001H 098AH 0002H 0021H
	rb	0f258h.5

;;	PB6D = 0;		// B.6 Output OFF....
CLINEA 0000H 0001H 098BH 0002H 0021H
	rb	0f258h.6

;;	PB7D = 0;		// B.7 Output OFF....
CLINEA 0000H 0001H 098CH 0002H 0021H
	rb	0f258h.7

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 098EH 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 183 2 2447
CLINEA 0000H 0001H 098FH 0001H 0001H
CBLOCKEND 183 1 2447
CFUNCTIONEND 183


	rseg $$PortC_Low$main
CFUNCTION 184

_PortC_Low	:
CBLOCK 184 1 2453

;;void PortC_Low(void){
CLINEA 0000H 0001H 0995H 0001H 0015H
CBLOCK 184 2 2453

;;	PC0DIR = 0;		// PortC Bit0 set to Output Mode...
CLINEA 0000H 0001H 099FH 0002H 0031H
	rb	0f261h.0

;;	PC1DIR = 0;		// PortC Bit1 set to Output Mode...
CLINEA 0000H 0001H 09A0H 0002H 0031H
	rb	0f261h.1

;;	PC2DIR = 1;		// PortC Bit2 set to Output Mode...
CLINEA 0000H 0001H 09A1H 0002H 0031H
	sb	0f261h.2

;;	PC3DIR = 0;		// PortC Bit3 set to Output Mode...
CLINEA 0000H 0001H 09A2H 0002H 0031H
	rb	0f261h.3

;;	PC4DIR = 0;		// PortC Bit4 set to Output Mode...
CLINEA 0000H 0001H 09A3H 0002H 0031H
	rb	0f261h.4

;;	PC5DIR = 0;		// PortC Bit5 set to Output Mode...
CLINEA 0000H 0001H 09A4H 0002H 0031H
	rb	0f261h.5

;;	PC6DIR = 0;		// PortC Bit6 set to Output Mode...
CLINEA 0000H 0001H 09A5H 0002H 0031H
	rb	0f261h.6

;;	PC7DIR = 0;		// PortC Bit7 set to Output Mode...
CLINEA 0000H 0001H 09A6H 0002H 0031H
	rb	0f261h.7

;;	PC0C1  = 1;		// PortC Bit0 set to High-Impedance Output...
CLINEA 0000H 0001H 09A9H 0002H 003BH
	sb	0f263h.0

;;	PC0C0  = 1;		
CLINEA 0000H 0001H 09AAH 0002H 000EH
	sb	0f262h.0

;;	PC1C1  = 1;		// PortC Bit1 set to High-Impedance Output...
CLINEA 0000H 0001H 09ABH 0002H 003BH
	sb	0f263h.1

;;	PC1C0  = 1;	
CLINEA 0000H 0001H 09ACH 0002H 000DH
	sb	0f262h.1

;;	PC2C1  = 1;		// PortC Bit2 set to High-Impedance Output...
CLINEA 0000H 0001H 09ADH 0002H 003BH
	sb	0f263h.2

;;	PC2C0  = 1;	
CLINEA 0000H 0001H 09AEH 0002H 000DH
	sb	0f262h.2

;;	PC3C1  = 1;		// PortC Bit3 set to High-Impedance Output...
CLINEA 0000H 0001H 09AFH 0002H 003BH
	sb	0f263h.3

;;	PC3C0  = 1;		
CLINEA 0000H 0001H 09B0H 0002H 000EH
	sb	0f262h.3

;;	PC4C1  = 1;		// PortC Bit4 set to High-Impedance Output...
CLINEA 0000H 0001H 09B1H 0002H 003BH
	sb	0f263h.4

;;	PC4C0  = 1;	
CLINEA 0000H 0001H 09B2H 0002H 000DH
	sb	0f262h.4

;;	PC5C1  = 1;		// PortC Bit5 set to High-Impedance Output...
CLINEA 0000H 0001H 09B3H 0002H 003BH
	sb	0f263h.5

;;	PC5C0  = 1;	
CLINEA 0000H 0001H 09B4H 0002H 000DH
	sb	0f262h.5

;;	PC6C1  = 1;		// PortC Bit6 set to High-Impedance Output...
CLINEA 0000H 0001H 09B5H 0002H 003BH
	sb	0f263h.6

;;	PC6C0  = 1;	
CLINEA 0000H 0001H 09B6H 0002H 000DH
	sb	0f262h.6

;;	PC7C1  = 1;		// PortC Bit7 set to High-Impedance Output...
CLINEA 0000H 0001H 09B7H 0002H 003BH
	sb	0f263h.7

;;	PC7C0  = 1;	
CLINEA 0000H 0001H 09B8H 0002H 000DH
	sb	0f262h.7

;;	PC0MD1  = 0;	// PortC Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 09BBH 0002H 003CH
	rb	0f265h.0

;;	PC0MD0  = 0;	
CLINEA 0000H 0001H 09BCH 0002H 000EH
	rb	0f264h.0

;;	PC1MD1  = 0;	// PortC Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 09BDH 0002H 003CH
	rb	0f265h.1

;;	PC1MD0  = 0;	
CLINEA 0000H 0001H 09BEH 0002H 000EH
	rb	0f264h.1

;;	PC2MD1  = 0;	// PortC Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 09BFH 0002H 003CH
	rb	0f265h.2

;;	PC2MD0  = 0;	
CLINEA 0000H 0001H 09C0H 0002H 000EH
	rb	0f264h.2

;;	PC3MD1  = 0;	// PortC Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 09C1H 0002H 003CH
	rb	0f265h.3

;;	PC3MD0  = 0;	
CLINEA 0000H 0001H 09C2H 0002H 000EH
	rb	0f264h.3

;;	PC4MD1  = 0;	// PortC Bit4 set to General Purpose Output...
CLINEA 0000H 0001H 09C3H 0002H 003CH
	rb	0f265h.4

;;	PC4MD0  = 0;	
CLINEA 0000H 0001H 09C4H 0002H 000EH
	rb	0f264h.4

;;	PC5MD1  = 0;	// PortC Bit5 set to General Purpose Output...
CLINEA 0000H 0001H 09C5H 0002H 003CH
	rb	0f265h.5

;;	PC5MD0  = 0;
CLINEA 0000H 0001H 09C6H 0002H 000DH
	rb	0f264h.5

;;	PC6MD1  = 0;	// PortC Bit6 set to General Purpose Output...
CLINEA 0000H 0001H 09C7H 0002H 003CH
	rb	0f265h.6

;;	PC6MD0  = 0;	
CLINEA 0000H 0001H 09C8H 0002H 000EH
	rb	0f264h.6

;;	PC7MD1  = 0;	// PortC Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 09C9H 0002H 003CH
	rb	0f265h.7

;;	PC7MD0  = 0;
CLINEA 0000H 0001H 09CAH 0002H 000DH
	rb	0f264h.7

;;	PC0D = 0;		// C.0 Output OFF....
CLINEA 0000H 0001H 09CDH 0002H 0021H
	rb	0f260h.0

;;	PC1D = 0;		// C.1 Output OFF....
CLINEA 0000H 0001H 09CEH 0002H 0021H
	rb	0f260h.1

;;	PC2D = 0;		// C.2 Output OFF....
CLINEA 0000H 0001H 09CFH 0002H 0021H
	rb	0f260h.2

;;	PC3D = 0;		// C.3 Output OFF....
CLINEA 0000H 0001H 09D0H 0002H 0021H
	rb	0f260h.3

;;	PC4D = 0;		// C.4 Output OFF....
CLINEA 0000H 0001H 09D1H 0002H 0021H
	rb	0f260h.4

;;	PC5D = 0;		// C.5 Output OFF....
CLINEA 0000H 0001H 09D2H 0002H 0021H
	rb	0f260h.5

;;	PC6D = 0;		// C.6 Output OFF....
CLINEA 0000H 0001H 09D3H 0002H 0021H
	rb	0f260h.6

;;	PC7D = 0;		// C.7 Output OFF....
CLINEA 0000H 0001H 09D4H 0002H 0021H
	rb	0f260h.7

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 09D6H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 184 2 2520
CLINEA 0000H 0001H 09D8H 0001H 0001H
CBLOCKEND 184 1 2520
CFUNCTIONEND 184


	rseg $$PortD_Low$main
CFUNCTION 185

_PortD_Low	:
CBLOCK 185 1 2526

;;void PortD_Low(void){
CLINEA 0000H 0001H 09DEH 0001H 0015H
CBLOCK 185 2 2526

;;	PD0DIR = 1;		// PortD Bit0 set to Input Mode...
CLINEA 0000H 0001H 09E7H 0002H 0030H
	sb	0f269h.0

;;	PD1DIR = 1;		// PortD Bit1 set to Input Mode...
CLINEA 0000H 0001H 09E8H 0002H 0030H
	sb	0f269h.1

;;	PD2DIR = 1;		// PortD Bit2 set to Input Mode...
CLINEA 0000H 0001H 09E9H 0002H 0030H
	sb	0f269h.2

;;	PD3DIR = 1;		// PortD Bit3 set to Input Mode...
CLINEA 0000H 0001H 09EAH 0002H 0030H
	sb	0f269h.3

;;	PD4DIR = 1;		// PortD Bit4 set to Input Mode...
CLINEA 0000H 0001H 09EBH 0002H 0030H
	sb	0f269h.4

;;	PD5DIR = 1;		// PortD Bit5 set to Input Mode...
CLINEA 0000H 0001H 09ECH 0002H 0030H
	sb	0f269h.5

;;	PD0C1= 1;		// PortD Bit0 set to High-impedance input...
CLINEA 0000H 0001H 09EFH 0002H 0038H
	sb	0f26bh.0

;;	PD0C0= 1;		
CLINEA 0000H 0001H 09F0H 0002H 000CH
	sb	0f26ah.0

;;	PD1C1= 1;		// PortD Bit1 set to High-impedance input...
CLINEA 0000H 0001H 09F1H 0002H 0038H
	sb	0f26bh.1

;;	PD1C0= 1;	
CLINEA 0000H 0001H 09F2H 0002H 000BH
	sb	0f26ah.1

;;	PD2C1= 1;		// PortD Bit2 set to High-impedance input...
CLINEA 0000H 0001H 09F3H 0002H 0038H
	sb	0f26bh.2

;;	PD2C0= 1;	
CLINEA 0000H 0001H 09F4H 0002H 000BH
	sb	0f26ah.2

;;	PD3C1= 1;		// PortD Bit3 set to High-impedance input...
CLINEA 0000H 0001H 09F5H 0002H 0038H
	sb	0f26bh.3

;;	PD3C0= 1;		
CLINEA 0000H 0001H 09F6H 0002H 000CH
	sb	0f26ah.3

;;	PD4C1= 1;		// PortD Bit4 set to High-impedance input...
CLINEA 0000H 0001H 09F7H 0002H 0038H
	sb	0f26bh.4

;;	PD4C0= 1;	
CLINEA 0000H 0001H 09F8H 0002H 000BH
	sb	0f26ah.4

;;	PD5C1= 1;		// PortD Bit5 set to High-impedance input...
CLINEA 0000H 0001H 09F9H 0002H 0038H
	sb	0f26bh.5

;;	PD5C0= 1;	
CLINEA 0000H 0001H 09FAH 0002H 000BH
	sb	0f26ah.5

;;	PD0D = 0;		// D.0 Input OFF....
CLINEA 0000H 0001H 09FDH 0002H 0020H
	rb	0f268h.0

;;	PD1D = 0;		// D.1 Input OFF....
CLINEA 0000H 0001H 09FEH 0002H 0020H
	rb	0f268h.1

;;	PD2D = 0;		// D.2 Input OFF....
CLINEA 0000H 0001H 09FFH 0002H 0020H
	rb	0f268h.2

;;	PD3D = 0;		// D.3 Input OFF....
CLINEA 0000H 0001H 0A00H 0002H 0020H
	rb	0f268h.3

;;	PD4D = 0;		// D.4 Input OFF....
CLINEA 0000H 0001H 0A01H 0002H 0020H
	rb	0f268h.4

;;	PD5D = 0;		// D.5 Input OFF....
CLINEA 0000H 0001H 0A02H 0002H 0020H
	rb	0f268h.5

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 0A04H 0002H 001DH
	b	_main_clrWDT
CBLOCKEND 185 2 2565
CLINEA 0000H 0001H 0A05H 0001H 0001H
CBLOCKEND 185 1 2565
CFUNCTIONEND 185


	rseg $$NOPms$main
CFUNCTION 196

_NOPms	:
CBLOCK 196 1 2579

;;{
CLINEA 0000H 0001H 0A13H 0001H 0001H
	push	lr
	push	xr4
	push	bp
	push	er8
	mov	er8,	er0
CBLOCK 196 2 2579
CRET 0008H
CARGUMENT 46H 0002H 0028H "ms" 02H 00H 01H
CLOCAL 46H 0002H 002AH 0002H "timerThres" 02H 00H 01H
CLOCAL 46H 0001H 001AH 0002H "TimeFlag" 02H 00H 00H
CLOCAL 46H 0002H 0026H 0002H "TempSec" 02H 00H 01H
CLOCAL 46H 0002H 0024H 0002H "timer" 02H 00H 01H
CLOCAL 4AH 0002H 0000H 0002H "timertest" 02H 00H 01H

;;	TempSec = ms;
CLINEA 0000H 0001H 0A1AH 0002H 000EH
	mov	er4,	er0

;;	TimeFlag = 0;
CLINEA 0000H 0001H 0A1BH 0002H 000EH
	mov	r6,	#00h

;;	tm_init(TM_CH_NO_AB);
CLINEA 0000H 0001H 0A1DH 0002H 0016H
	mov	r0,	#01h
	bl	_tm_init

;;	tm_setABSource(TM_CS_HTBCLK);
CLINEA 0000H 0000H 018DH 0002H 0015H
	sb	0f8eah.0

;;	tm_setABSource(TM_CS_HTBCLK);
CLINEA 0000H 0000H 018EH 0002H 001AH
	rb	0f8eah.1

;;	tm_setABData(0xffff);
CLINEA 0000H 0000H 0157H 0002H 0025H
	mov	r0,	#0ffh
	st	r0,	0f8e8h

;;	tm_setABData(0xffff);
CLINEA 0000H 0000H 0158H 0002H 0023H
	st	r0,	0f8ech

;;	if(ms < 128){
CLINEA 0000H 0001H 0A21H 0002H 000EH
	mov	er0,	er8
	cmp	r8,	#080h
	cmpc	r9,	#00h
	bge	_$L488
CBLOCK 196 3 2593

;;		timerThres = 0x1FF * ms;
CLINEA 0000H 0001H 0A22H 0003H 001AH
	sllc	r1,	#07h
	sll	r0,	#07h
	sllc	r1,	#02h
	sll	r0,	#02h
	sub	r0,	r8
	subc	r1,	r9
	mov	bp,	er0

;;		TimeFlag = 0;
CLINEA 0000H 0001H 0A23H 0003H 000FH
CBLOCKEND 196 3 2596

;;	}
CLINEA 0000H 0000H 0A24H 0002H 0002H
_$L488 :

;;	if(ms == 128){
CLINEA 0000H 0001H 0A25H 0002H 000FH
	cmp	r8,	#080h
	cmpc	r9,	#00h
	bne	_$L490
CBLOCK 196 4 2597

;;		timerThres = 0xFFFF;
CLINEA 0000H 0001H 0A26H 0003H 0016H
	mov	bp,	#-1

;;		TimeFlag = 0;
CLINEA 0000H 0001H 0A27H 0003H 000FH
	mov	r6,	#00h
CBLOCKEND 196 4 2600

;;	}
CLINEA 0000H 0000H 0A28H 0002H 0002H
_$L490 :

;;	if(ms > 128){
CLINEA 0000H 0001H 0A29H 0002H 000EH
	cmp	r8,	#080h
	cmpc	r9,	#00h
	ble	_$L500
CBLOCK 196 5 2601

;;		while(TempSec > 128){
CLINEA 0000H 0000H 0A2AH 0001H 0001H
	bal	_$L510

;;		while(TempSec > 128){
CLINEA 0000H 0000H 0A2AH 0003H 0017H
_$L496 :
CBLOCK 196 6 2602

;;			TempSec -= 128;
CLINEA 0000H 0001H 0A2BH 0004H 0012H
	add	r0,	#080h
	addc	r1,	#0ffh
	mov	er4,	er0

;;			TimeFlag++;
CLINEA 0000H 0000H 0A2CH 0004H 000EH
	add	r6,	#01h
CBLOCKEND 196 6 2605

;;		while(TempSec > 128){
CLINEA 0000H 0000H 0A2AH 0001H 0001H
_$L510 :

;;		while(TempSec > 128){
CLINEA 0000H 0000H 0A2AH 000FH 0017H
	mov	er0,	er4
	cmp	r4,	#080h
	cmpc	r5,	#00h
	bgt	_$L496

;;		if(TempSec != 0){
CLINEA 0000H 0001H 0A2EH 0003H 0013H
	mov	er4,	er4
	beq	_$L498
CBLOCK 196 7 2606

;;			timerThres = 0x1FF * TempSec;
CLINEA 0000H 0001H 0A2FH 0004H 0020H
	sllc	r1,	#07h
	sll	r0,	#07h
	sllc	r1,	#02h
	sll	r0,	#02h
	sub	r0,	r4
	subc	r1,	r5
	mov	bp,	er0
CBLOCKEND 196 7 2608

;;		else{
CLINEA 0000H 0001H 0A31H 0003H 0007H
	bal	_$L500
_$L498 :
CBLOCK 196 8 2609

;;			timerThres = 0xFFFF;
CLINEA 0000H 0001H 0A32H 0004H 0017H
	mov	bp,	#-1

;;			TimeFlag--;
CLINEA 0000H 0000H 0A33H 0004H 000EH
	add	r6,	#0ffh
CBLOCKEND 196 8 2612

;;		}
CLINEA 0000H 0000H 0A34H 0003H 0003H
_$L500 :
CBLOCKEND 196 5 2613

;;	main_clrWDT();	
CLINEA 0000H 0001H 0A38H 0002H 0010H
	bl	_main_clrWDT

;;	tm_startAB();
CLINEA 0000H 0001H 00D1H 0002H 000AH
	mov	r0,	#00h
	st	r0,	0f8e9h

;;	tm_startAB();
CLINEA 0000H 0000H 00D2H 0002H 000BH
	sb	0f8ebh.0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 0120H 0002H 001BH
	l	r0,	0f8e9h
	mov	r1,	#00h
	mov	er2,	er0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 0121H 0002H 0014H
	l	r0,	0f8edh
	or	r3,	r0

;;	timer = tm_getABCounter();
CLINEA 0000H 0000H 0122H 0002H 000CH
	mov	er0,	er2

;;	while(timer < timerThres){
CLINEA 0000H 0001H 0A3CH 0002H 001BH
	bal	_$L503
_$L505 :
CBLOCK 196 9 2620

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 0120H 0002H 001BH
	l	r0,	0f8e9h
	mov	r1,	#00h
	mov	er2,	er0

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 0121H 0002H 0014H
	l	r0,	0f8edh
	or	r3,	r0

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 0122H 0002H 000CH
	mov	er0,	er2

;;		timer = tm_getABCounter();
CLINEA 0000H 0000H 0A3DH 0003H 001CH
CBLOCKEND 196 9 2623

;;	}
CLINEA 0000H 0000H 0A3FH 0002H 0002H
_$L503 :

;;	while(timer < timerThres){
CLINEA 0000H 0000H 0A3CH 000FH 0017H
	cmp	er0,	bp
	blt	_$L505

;;	if(TimeFlag !=0){
CLINEA 0000H 0001H 0A40H 0002H 0012H
	cmp	r6,	#00h
	beq	_$L508

;;		tm_stopAB();
CLINEA 0000H 0001H 0105H 0002H 000BH
	rb	0f8ebh.0

;;		TimeFlag--;
CLINEA 0000H 0000H 0A42H 0003H 000DH
	add	r6,	#0ffh

;;		timerThres = 0xFFFF;
CLINEA 0000H 0001H 0A43H 0003H 0016H
	mov	bp,	#-1

;;		goto TimerRestart;
CLINEA 0000H 0001H 0A44H 0003H 0014H
	bal	_$L500

;;	}
CLINEA 0000H 0000H 0A45H 0002H 0002H
_$L508 :
CBLOCKEND 196 2 2630

;;}
CLINEA 0000H 0001H 0A46H 0001H 0001H
	pop	er8
	pop	bp
	pop	xr4
	pop	pc
CBLOCKEND 196 1 2630
CFUNCTIONEND 196


	rseg $$ReverseBits$main
CFUNCTION 197

_ReverseBits	:
CBLOCK 197 1 2640

;;{
CLINEA 0000H 0001H 0A50H 0001H 0001H
CBLOCK 197 2 2640
CARGUMENT 46H 0001H 0000H "data" 02H 00H 00H

;;");
CLINEA 0000H 0001H 0A5EH 0001H 0003H

	MOV r1,r0
	MOV r0,#0
	MOV r2,#8
_ReverseBits_loop:
	SLL r0,#1
	SRL r1,#1
	BGE _ReverseBits_next
	OR r0,#1
_ReverseBits_next:
	ADD	r2,	#0ffh
	CMP	r2,	#00h
	BGT _ReverseBits_loop

CBLOCKEND 197 2 2655

;;}
CLINEA 0000H 0001H 0A5FH 0001H 0001H
	rt
CBLOCKEND 197 1 2655
CFUNCTIONEND 197


	rseg $$FlashLEDs$main
CFUNCTION 198

_FlashLEDs	:
CBLOCK 198 1 2665

;;{
CLINEA 0000H 0001H 0A69H 0001H 0001H
CBLOCK 198 2 2665

;;	if(LEDFlashFlag == 0){
CLINEA 0000H 0001H 0A6AH 0002H 0017H
	l	r0,	NEAR _LEDFlashFlag
	bne	_$L513
CBLOCK 198 3 2666

;;		if(LEDChangeFlag == 0){
CLINEA 0000H 0001H 0A6BH 0003H 0019H
	l	r0,	NEAR _LEDChangeFlag
	bne	_$L515
CBLOCK 198 4 2667

;;			LEDOUT(0xAA);
CLINEA 0000H 0001H 0A6CH 0004H 0010H
	mov	r0,	#0aah
	st	r0,	0f260h

;;			LEDChangeFlag = 1;
CLINEA 0000H 0001H 0A6DH 0004H 0015H
	mov	r0,	#01h
CBLOCKEND 198 4 2670

;;		else{
CLINEA 0000H 0001H 0A6FH 0003H 0007H
	bal	_$L517
_$L515 :
CBLOCK 198 5 2671

;;			LEDOUT(0x55);
CLINEA 0000H 0001H 0A70H 0004H 0010H
	mov	r0,	#055h
	st	r0,	0f260h

;;			LEDChangeFlag = 0;
CLINEA 0000H 0001H 0A71H 0004H 0015H
	mov	r0,	#00h
CBLOCKEND 198 5 2674

;;		}
CLINEA 0000H 0000H 0A72H 0003H 0003H
_$L517 :
	st	r0,	NEAR _LEDChangeFlag
CBLOCKEND 198 3 2675

;;	else{
CLINEA 0000H 0001H 0A74H 0002H 0006H
	bal	_$L518
_$L513 :
CBLOCK 198 6 2676

;;		LEDOUT(0x00);
CLINEA 0000H 0001H 0A75H 0003H 000FH
	mov	r0,	#00h
	st	r0,	0f260h
CBLOCKEND 198 6 2678

;;	}
CLINEA 0000H 0000H 0A76H 0002H 0002H
_$L518 :

;;	LEDFlashFlag++;
CLINEA 0000H 0000H 0A77H 0002H 0010H
	lea	OFFSET _LEDFlashFlag
	inc	[ea]
	l	r0,	NEAR _LEDFlashFlag

;;	if(LEDFlashFlag >= 4){
CLINEA 0000H 0001H 0A78H 0002H 0017H
	cmp	r0,	#04h
	blt	_$L519
CBLOCK 198 7 2680

;;		LEDFlashFlag = 0;
CLINEA 0000H 0001H 0A79H 0003H 0013H
	mov	r0,	#00h
	st	r0,	NEAR _LEDFlashFlag
CBLOCKEND 198 7 2682

;;	}
CLINEA 0000H 0000H 0A7AH 0002H 0002H
_$L519 :
CBLOCKEND 198 2 2683

;;}
CLINEA 0000H 0001H 0A7BH 0001H 0001H
	rt
CBLOCKEND 198 1 2683
CFUNCTIONEND 198

	public _KX022_SELF_TEST
	public _Init_Hall_Effect_Sensors_1
	public _Init_Hall_Effect_Sensors_2
	public _clearAllGPSVariables
	public _KMX61_WUFC
	public _BH1780GLI_REG_PART_ID
	public _BH1730FVC_CMD_RESET_INT_OUT
	public _KX022_INT_REL
	public _BH1780GLI_REG_DATALOW
	public _BH1721FVC_CONT_A_RES_MOD
	public _BH1710FVC_CONT_H_RES_MOD
	public _BH1721FVC_CONT_H_RES_MOD
	public _MainOp_Hall_Effect_Sensors_1
	public _MainOp_Hall_Effect_Sensors_2
	public _BH1730FVC_REG_THHHIGH
	public _KMX61_TEMP_EN_CNTL_CFGDAT
	public _NOPms
	public _KMX61_CNTL1_CFGDAT
	public _KMX61_CNTL2_CFGDAT
	public _BH1780GLI_REG_DATAHIGH
	public _MainOp_Temperature_Sensor_20
	public _MainOp_Temperature_Sensor_21
	public _MainOp_Temperature_Sensor_22
	public _MainOp_Temperature_Sensor_23
	public _main_clrWDT
	public _KMX61_BTSC
	public _KMX61_ODCNTL
	public _KMX61_COTR
	public _main_reqNotHalt
	public _KX022_STAT
	public _MainOp_UV_Sensor_10
	public _KMX61_STATUS_REG
	public _BH1730FVC_REG_INTERRUPT
	public _KX022_XOUTL
	public _KX022_XOUTH
	public _KX022_BUF_READ
	public _KMX61_WUFTH
	public _KMX61_STBY_REG
	public _BH1710FVC_CONT_M_RES_MOD
	public _KX022_YHPL
	public _KX022_YHPH
	public _DeviceSelection
	public _KX022_I2C_ADDR
	public _KX022_CNTL1_CFGDAT
	public _KMX61_INC1
	public _KMX61_INC2
	public _KMX61_INC3
	public _KX022_XHPL
	public _KX022_CNTL3_CFGDAT
	public _KX022_XHPH
	public _Init_KX022
	public _BH17xxFVC_PWR_DOWN
	public _KMX61_ACCEL_YOUT_H
	public _BH1710FVC_CONT_L_RES_MOD
	public _KMX61_ACCEL_YOUT_L
	public _GetUART_Command
	public _BH1721FVC_CONT_L_RES_MOD
	public _KMX61_INS1
	public _KMX61_INS2
	public _KX022_TDTC
	public _BH1780GLI_REG_MFG_ID
	public _readCharToInt
	public _KX022_ZHPL
	public _KX022_ZHPH
	public _KX022_TDTRC
	public _KMX61_MAG_YOUT_H
	public _KMX61_MAG_YOUT_L
	public _readChar
	public _MainOp_KMX61
	public _KX022_TILT_ANGLE_HL
	public _KX022_TILT_ANGLE_LL
	public _KMX61_BUF_THRESH_H
	public _KMX61_BUF_THRESH_L
	public _BH1730FVC_CMD_STOP_MIM
	public _KX022_ODCNTL
	public _KMX61_BUF_CLEAR
	public _Init_Temperature_Sensor_20
	public _Init_Temperature_Sensor_21
	public _Init_Temperature_Sensor_22
	public _main
	public _Init_Temperature_Sensor_23
	public _Init_UV_Sensor_10
	public _KX022_BUF_STATUS_1
	public _KX022_BUF_STATUS_2
	public _KX022_WHO_AM_I
	public _SensorInitialization
	public _BH1730FVC_REG_DATA1HIGH
	public _KX022_ZOUTL
	public _KX022_ZOUTH
	public _I2C_Write
	public _KX022_TSCP
	public _KMX61_ODCNTL_CFGDAT
	public _OutputPWM
	public _PortD_Low
	public _KX022_TSPP
	public _BH1730FVC_REG_TIMING
	public _Prox_ModeCTR
	public _KMX61_BTH
	public _KX022_TILT_TIMER_CFGDAT
	public _BH1730FVC_REG_ID
	public _parseGGA
	public _KMX61_TEMP_EN_CNTL
	public _KMX61_CNTL1
	public _write
	public _KMX61_CNTL2
	public _KMX61_XOUT_HPF_L
	public _KMX61_XOUT_HPF_H
	public _KX022_BUF_CLEAR
	public _parseGLL
	public _BH1710FVC_RESET
	public _parseGSA
	public _parseRMC
	public _parseGSV
	public _BH1730FVC_REG_CONTROL
	public _KMX61_INL
	public _KX022_WUFC
	public _BH1730FVC_REG_DATA0HIGH
	public _KX022_YOUTL
	public _KX022_YOUTH
	public _BH17xxFVC_PWR_ON
	public _BH1710FVC_ONET_L_RES_MOD
	public _KMX61_ZOUT_HPF_L
	public _KX022_LP_CNTL
	public _KX022_ODCNTL_CFGDAT
	public _BH1730FVC_REG_THLHIGH
	public _KMX61_ZOUT_HPF_H
	public _PortC_Low
	public _KMX61_YOUT_HPF_L
	public _BH1730FVC_CMD_START_MIM
	public _KMX61_YOUT_HPF_H
	public _KX022_ATH
	public _KMX61_SN_1
	public _KMX61_SN_2
	public _KMX61_SN_3
	public _KMX61_SN_4
	public _parseVTG
	public _BH1780GLI_REG_CONTROL
	public _Read_GPS
	public _KX022_COTR
	public _KMX61_SELF_TEST_CFGDAT
	public _Prox_PS_LSB
	public _PortB_Low
	public _KX022_FTD
	public _KX022_BUF_CNTL1
	public _KX022_BUF_CNTL2
	public _KMX61_I2C_ADDR
	public _KMX61_BUF_READ
	public _BH17xxFVC_ADDR_1
	public _BH17xxFVC_ADDR_2
	public _BH1730FVC_REG_THHLOW
	public _BH1710FVC_ONET_M_RES_MOD
	public _KX022_CNTL1
	public _KX022_CNTL2
	public _KX022_CNTL3
	public _KMX61_TEMP_OUT_H
	public _KMX61_TEMP_OUT_L
	public _KX022_STD
	public _KMX61_ACCEL_XOUT_H
	public _KMX61_ACCEL_ZOUT_H
	public _KMX61_ACCEL_XOUT_L
	public _KMX61_ACCEL_ZOUT_L
	public _BH1710FVC_ONET_H_RES_MOD
	public _KMX61_BUF_CTRL2_CFGDAT
	public _I2C_Read
	public _ADC_Read
	public _KX022_INC1
	public _KX022_INC2
	public _KX022_INC3
	public _KMX61_BUF_CTRL1_CFGDAT
	public _KX022_INC4
	public _KX022_INC5
	public _BH1730FVC_REG_GAIN
	public _KX022_INC6
	public _KX022_TLT
	public _KMX61_BUF_CTRL1
	public _KMX61_BUF_CTRL2
	public _MainOp_KX022
	public _BH1730FVC_CMD_SW_RESET
	public _KX022_TTH
	public _Init_Ambient_Light_Sensor_5
	public _Init_Ambient_Light_Sensor_6
	public _Init_Ambient_Light_Sensor_7
	public _Init_Ambient_Light_Sensor_8
	public _KX022_TTL
	public _Init_Ambient_Light_Sensor_9
	public _KX022_INS1
	public _KX022_INS2
	public _KX022_INS3
	public _KX022_TWS
	public _KMX61_BUF_STATUS_L
	public _BH1730FVC_REG_DATA0LOW
	public _PortA_Low
	public _KMX61_BUF_STATUS_H
	public _KMX61_MAG_XOUT_H
	public _KMX61_MAG_ZOUT_H
	public _KMX61_MAG_XOUT_L
	public _KMX61_MAG_ZOUT_L
	public _KMX61_SELF_TEST
	public _ReverseBits
	public _BH1730FVC_REG_THLLOW
	public _KX022_HYST_SET
	public _KMX61_WHO_AM_I
	public _FlashLEDs
	public _Init_KMX61
	public _KX022_TILT_TIMER
	public _BH1730FVC_REG_DATA1LOW
	public _KMX61_BUF_STATUS_REG
	public _MainOp_Ambient_Light_Sensor_8
	public _MainOp_Ambient_Light_Sensor_9
	public _MainOp_Ambient_Light_Sensor_5
	public _MainOp_Ambient_Light_Sensor_6
	public _MainOp_Ambient_Light_Sensor_7
	__flgUartFin comm data 01h #00h
	_uniRawSensorOut comm data 06h #00h
	__flgI2CFin comm data 01h #00h
	__reqNotHalt comm data 01h #00h
	_flSensorOut comm data 0ch #00h
	__flgADCFin comm data 01h #00h
	extrn code near : _irq_init
	extrn code near : _uart_PortSet
	extrn code near : _i2c_stop
	extrn code near : _i2c_startReceive
	extrn code near : _uart_startReceive
	extrn code near : _uart_init
	extrn code near : _i2c_continue
	extrn code near : _irq_di
	extrn code near : _irq_ei
	extrn code near : _irq_setHdr
	extrn code near : _sprintf_nn
	extrn code near : _uart_stop
	extrn code near : _uart_startSend
	extrn code near : _printf_n
	extrn code near : _i2c_startSend
	extrn code near : _uart_continue
	extrn code near : _i2c_init
	extrn code near : _tm_init
	extrn code : $$start_up

	cseg #00h at 02h
	dw	$$start_up

	rseg $$NTABADC_Read$main
_$M20 :
	dw	_$S258
	dw	_$S259
	dw	_$S260
	dw	_$S261
	dw	_$S262
	dw	_$S263
	dw	_$S264
	dw	_$S265

	rseg $$NTABSensorInitialization$main
_$M26 :
	dw	_$S287
	dw	_$S288
	dw	_$L286
	dw	_$L286
	dw	_$S289
	dw	_$S290
	dw	_$S291
	dw	_$S292
	dw	_$S293
	dw	_$S294
	dw	_$L286
	dw	_$L286
	dw	_$L286
	dw	_$L286
	dw	_$S295
	dw	_$S296
	dw	_$L286
	dw	_$L286
	dw	_$L286
	dw	_$S297
	dw	_$S298
	dw	_$S299
	dw	_$S300

	rseg $$NINITTAB
	dw	020d0h
	dw	04268h
	db	01h
	db	00h
	db	00h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h
	db	020h

	rseg $$TAB_uartSetParam$main
__uartSetParam :
	dw	04b00h
	dw	00h
	db	00h
	db	02h
	db	00h
	db	00h
	db	00h
	align

	rseg $$TABBH17xxFVC_ADDR_1$main
_BH17xxFVC_ADDR_1 :
	db	023h

	rseg $$TABBH17xxFVC_ADDR_2$main
_BH17xxFVC_ADDR_2 :
	db	029h

	rseg $$TABBH17xxFVC_PWR_DOWN$main
_BH17xxFVC_PWR_DOWN :
	db	00h

	rseg $$TABBH17xxFVC_PWR_ON$main
_BH17xxFVC_PWR_ON :
	db	01h

	rseg $$TABBH1710FVC_RESET$main
_BH1710FVC_RESET :
	db	07h

	rseg $$TABBH1710FVC_CONT_H_RES_MOD$main
_BH1710FVC_CONT_H_RES_MOD :
	db	010h

	rseg $$TABBH1710FVC_CONT_M_RES_MOD$main
_BH1710FVC_CONT_M_RES_MOD :
	db	013h

	rseg $$TABBH1710FVC_CONT_L_RES_MOD$main
_BH1710FVC_CONT_L_RES_MOD :
	db	016h

	rseg $$TABBH1710FVC_ONET_H_RES_MOD$main
_BH1710FVC_ONET_H_RES_MOD :
	db	020h

	rseg $$TABBH1710FVC_ONET_M_RES_MOD$main
_BH1710FVC_ONET_M_RES_MOD :
	db	023h

	rseg $$TABBH1710FVC_ONET_L_RES_MOD$main
_BH1710FVC_ONET_L_RES_MOD :
	db	026h

	rseg $$TABBH1721FVC_CONT_A_RES_MOD$main
_BH1721FVC_CONT_A_RES_MOD :
	db	010h

	rseg $$TABBH1721FVC_CONT_H_RES_MOD$main
_BH1721FVC_CONT_H_RES_MOD :
	db	012h

	rseg $$TABBH1721FVC_CONT_L_RES_MOD$main
_BH1721FVC_CONT_L_RES_MOD :
	db	013h

	rseg $$TABBH1730FVC_REG_CONTROL$main
_BH1730FVC_REG_CONTROL :
	db	080h

	rseg $$TABBH1730FVC_REG_TIMING$main
_BH1730FVC_REG_TIMING :
	db	081h

	rseg $$TABBH1730FVC_REG_INTERRUPT$main
_BH1730FVC_REG_INTERRUPT :
	db	082h

	rseg $$TABBH1730FVC_REG_THLLOW$main
_BH1730FVC_REG_THLLOW :
	db	083h

	rseg $$TABBH1730FVC_REG_THLHIGH$main
_BH1730FVC_REG_THLHIGH :
	db	084h

	rseg $$TABBH1730FVC_REG_THHLOW$main
_BH1730FVC_REG_THHLOW :
	db	085h

	rseg $$TABBH1730FVC_REG_THHHIGH$main
_BH1730FVC_REG_THHHIGH :
	db	086h

	rseg $$TABBH1730FVC_REG_GAIN$main
_BH1730FVC_REG_GAIN :
	db	087h

	rseg $$TABBH1730FVC_REG_ID$main
_BH1730FVC_REG_ID :
	db	092h

	rseg $$TABBH1730FVC_REG_DATA0LOW$main
_BH1730FVC_REG_DATA0LOW :
	db	094h

	rseg $$TABBH1730FVC_REG_DATA0HIGH$main
_BH1730FVC_REG_DATA0HIGH :
	db	095h

	rseg $$TABBH1730FVC_REG_DATA1LOW$main
_BH1730FVC_REG_DATA1LOW :
	db	096h

	rseg $$TABBH1730FVC_REG_DATA1HIGH$main
_BH1730FVC_REG_DATA1HIGH :
	db	097h

	rseg $$TABBH1730FVC_CMD_RESET_INT_OUT$main
_BH1730FVC_CMD_RESET_INT_OUT :
	db	0e1h

	rseg $$TABBH1730FVC_CMD_STOP_MIM$main
_BH1730FVC_CMD_STOP_MIM :
	db	0e2h

	rseg $$TABBH1730FVC_CMD_START_MIM$main
_BH1730FVC_CMD_START_MIM :
	db	0e3h

	rseg $$TABBH1730FVC_CMD_SW_RESET$main
_BH1730FVC_CMD_SW_RESET :
	db	0e4h

	rseg $$TABBH1780GLI_REG_CONTROL$main
_BH1780GLI_REG_CONTROL :
	db	080h

	rseg $$TABBH1780GLI_REG_PART_ID$main
_BH1780GLI_REG_PART_ID :
	db	08ah

	rseg $$TABBH1780GLI_REG_MFG_ID$main
_BH1780GLI_REG_MFG_ID :
	db	08bh

	rseg $$TABBH1780GLI_REG_DATALOW$main
_BH1780GLI_REG_DATALOW :
	db	08ch

	rseg $$TABBH1780GLI_REG_DATAHIGH$main
_BH1780GLI_REG_DATAHIGH :
	db	08dh

	rseg $$TABProx_ModeCTR$main
_Prox_ModeCTR :
	db	041h

	rseg $$TABProx_PS_LSB$main
_Prox_PS_LSB :
	db	044h

	rseg $$TABKX022_I2C_ADDR$main
_KX022_I2C_ADDR :
	db	01eh

	rseg $$TABKX022_XHPL$main
_KX022_XHPL :
	db	00h

	rseg $$TABKX022_XHPH$main
_KX022_XHPH :
	db	01h

	rseg $$TABKX022_YHPL$main
_KX022_YHPL :
	db	02h

	rseg $$TABKX022_YHPH$main
_KX022_YHPH :
	db	03h

	rseg $$TABKX022_ZHPL$main
_KX022_ZHPL :
	db	04h

	rseg $$TABKX022_ZHPH$main
_KX022_ZHPH :
	db	05h

	rseg $$TABKX022_XOUTL$main
_KX022_XOUTL :
	db	06h

	rseg $$TABKX022_XOUTH$main
_KX022_XOUTH :
	db	07h

	rseg $$TABKX022_YOUTL$main
_KX022_YOUTL :
	db	08h

	rseg $$TABKX022_YOUTH$main
_KX022_YOUTH :
	db	09h

	rseg $$TABKX022_ZOUTL$main
_KX022_ZOUTL :
	db	0ah

	rseg $$TABKX022_ZOUTH$main
_KX022_ZOUTH :
	db	0bh

	rseg $$TABKX022_COTR$main
_KX022_COTR :
	db	0ch

	rseg $$TABKX022_WHO_AM_I$main
_KX022_WHO_AM_I :
	db	0fh

	rseg $$TABKX022_TSCP$main
_KX022_TSCP :
	db	010h

	rseg $$TABKX022_TSPP$main
_KX022_TSPP :
	db	011h

	rseg $$TABKX022_INS1$main
_KX022_INS1 :
	db	012h

	rseg $$TABKX022_INS2$main
_KX022_INS2 :
	db	013h

	rseg $$TABKX022_INS3$main
_KX022_INS3 :
	db	014h

	rseg $$TABKX022_STAT$main
_KX022_STAT :
	db	015h

	rseg $$TABKX022_INT_REL$main
_KX022_INT_REL :
	db	017h

	rseg $$TABKX022_CNTL1$main
_KX022_CNTL1 :
	db	018h

	rseg $$TABKX022_CNTL2$main
_KX022_CNTL2 :
	db	019h

	rseg $$TABKX022_CNTL3$main
_KX022_CNTL3 :
	db	01ah

	rseg $$TABKX022_ODCNTL$main
_KX022_ODCNTL :
	db	01bh

	rseg $$TABKX022_INC1$main
_KX022_INC1 :
	db	01ch

	rseg $$TABKX022_INC2$main
_KX022_INC2 :
	db	01dh

	rseg $$TABKX022_INC3$main
_KX022_INC3 :
	db	01eh

	rseg $$TABKX022_INC4$main
_KX022_INC4 :
	db	01fh

	rseg $$TABKX022_INC5$main
_KX022_INC5 :
	db	020h

	rseg $$TABKX022_INC6$main
_KX022_INC6 :
	db	021h

	rseg $$TABKX022_TILT_TIMER$main
_KX022_TILT_TIMER :
	db	022h

	rseg $$TABKX022_WUFC$main
_KX022_WUFC :
	db	023h

	rseg $$TABKX022_TDTRC$main
_KX022_TDTRC :
	db	024h

	rseg $$TABKX022_TDTC$main
_KX022_TDTC :
	db	025h

	rseg $$TABKX022_TTH$main
_KX022_TTH :
	db	026h

	rseg $$TABKX022_TTL$main
_KX022_TTL :
	db	027h

	rseg $$TABKX022_FTD$main
_KX022_FTD :
	db	028h

	rseg $$TABKX022_STD$main
_KX022_STD :
	db	029h

	rseg $$TABKX022_TLT$main
_KX022_TLT :
	db	02ah

	rseg $$TABKX022_TWS$main
_KX022_TWS :
	db	02bh

	rseg $$TABKX022_ATH$main
_KX022_ATH :
	db	030h

	rseg $$TABKX022_TILT_ANGLE_LL$main
_KX022_TILT_ANGLE_LL :
	db	032h

	rseg $$TABKX022_TILT_ANGLE_HL$main
_KX022_TILT_ANGLE_HL :
	db	033h

	rseg $$TABKX022_HYST_SET$main
_KX022_HYST_SET :
	db	034h

	rseg $$TABKX022_LP_CNTL$main
_KX022_LP_CNTL :
	db	035h

	rseg $$TABKX022_BUF_CNTL1$main
_KX022_BUF_CNTL1 :
	db	03ah

	rseg $$TABKX022_BUF_CNTL2$main
_KX022_BUF_CNTL2 :
	db	03bh

	rseg $$TABKX022_BUF_STATUS_1$main
_KX022_BUF_STATUS_1 :
	db	03ch

	rseg $$TABKX022_BUF_STATUS_2$main
_KX022_BUF_STATUS_2 :
	db	03dh

	rseg $$TABKX022_BUF_CLEAR$main
_KX022_BUF_CLEAR :
	db	03eh

	rseg $$TABKX022_BUF_READ$main
_KX022_BUF_READ :
	db	03fh

	rseg $$TABKX022_SELF_TEST$main
_KX022_SELF_TEST :
	db	060h

	rseg $$TABKX022_CNTL1_CFGDAT$main
_KX022_CNTL1_CFGDAT :
	db	041h

	rseg $$TABKX022_ODCNTL_CFGDAT$main
_KX022_ODCNTL_CFGDAT :
	db	02h

	rseg $$TABKX022_CNTL3_CFGDAT$main
_KX022_CNTL3_CFGDAT :
	db	0d8h

	rseg $$TABKX022_TILT_TIMER_CFGDAT$main
_KX022_TILT_TIMER_CFGDAT :
	db	01h

	rseg $$TABKMX61_I2C_ADDR$main
_KMX61_I2C_ADDR :
	db	0eh

	rseg $$TABKMX61_WHO_AM_I$main
_KMX61_WHO_AM_I :
	db	00h

	rseg $$TABKMX61_INS1$main
_KMX61_INS1 :
	db	01h

	rseg $$TABKMX61_INS2$main
_KMX61_INS2 :
	db	02h

	rseg $$TABKMX61_STATUS_REG$main
_KMX61_STATUS_REG :
	db	03h

	rseg $$TABKMX61_ACCEL_XOUT_L$main
_KMX61_ACCEL_XOUT_L :
	db	0ah

	rseg $$TABKMX61_ACCEL_XOUT_H$main
_KMX61_ACCEL_XOUT_H :
	db	0bh

	rseg $$TABKMX61_ACCEL_YOUT_L$main
_KMX61_ACCEL_YOUT_L :
	db	0ch

	rseg $$TABKMX61_ACCEL_YOUT_H$main
_KMX61_ACCEL_YOUT_H :
	db	0dh

	rseg $$TABKMX61_ACCEL_ZOUT_L$main
_KMX61_ACCEL_ZOUT_L :
	db	0eh

	rseg $$TABKMX61_ACCEL_ZOUT_H$main
_KMX61_ACCEL_ZOUT_H :
	db	0fh

	rseg $$TABKMX61_TEMP_OUT_L$main
_KMX61_TEMP_OUT_L :
	db	010h

	rseg $$TABKMX61_TEMP_OUT_H$main
_KMX61_TEMP_OUT_H :
	db	011h

	rseg $$TABKMX61_MAG_XOUT_L$main
_KMX61_MAG_XOUT_L :
	db	012h

	rseg $$TABKMX61_MAG_XOUT_H$main
_KMX61_MAG_XOUT_H :
	db	013h

	rseg $$TABKMX61_MAG_YOUT_L$main
_KMX61_MAG_YOUT_L :
	db	014h

	rseg $$TABKMX61_MAG_YOUT_H$main
_KMX61_MAG_YOUT_H :
	db	015h

	rseg $$TABKMX61_MAG_ZOUT_L$main
_KMX61_MAG_ZOUT_L :
	db	016h

	rseg $$TABKMX61_MAG_ZOUT_H$main
_KMX61_MAG_ZOUT_H :
	db	017h

	rseg $$TABKMX61_XOUT_HPF_L$main
_KMX61_XOUT_HPF_L :
	db	018h

	rseg $$TABKMX61_XOUT_HPF_H$main
_KMX61_XOUT_HPF_H :
	db	019h

	rseg $$TABKMX61_YOUT_HPF_L$main
_KMX61_YOUT_HPF_L :
	db	01ah

	rseg $$TABKMX61_YOUT_HPF_H$main
_KMX61_YOUT_HPF_H :
	db	01bh

	rseg $$TABKMX61_ZOUT_HPF_L$main
_KMX61_ZOUT_HPF_L :
	db	01ch

	rseg $$TABKMX61_ZOUT_HPF_H$main
_KMX61_ZOUT_HPF_H :
	db	01dh

	rseg $$TABKMX61_SN_1$main
_KMX61_SN_1 :
	db	024h

	rseg $$TABKMX61_SN_2$main
_KMX61_SN_2 :
	db	025h

	rseg $$TABKMX61_SN_3$main
_KMX61_SN_3 :
	db	026h

	rseg $$TABKMX61_SN_4$main
_KMX61_SN_4 :
	db	027h

	rseg $$TABKMX61_INL$main
_KMX61_INL :
	db	028h

	rseg $$TABKMX61_STBY_REG$main
_KMX61_STBY_REG :
	db	029h

	rseg $$TABKMX61_CNTL1$main
_KMX61_CNTL1 :
	db	02ah

	rseg $$TABKMX61_CNTL2$main
_KMX61_CNTL2 :
	db	02bh

	rseg $$TABKMX61_ODCNTL$main
_KMX61_ODCNTL :
	db	02ch

	rseg $$TABKMX61_INC1$main
_KMX61_INC1 :
	db	02dh

	rseg $$TABKMX61_INC2$main
_KMX61_INC2 :
	db	02eh

	rseg $$TABKMX61_INC3$main
_KMX61_INC3 :
	db	02fh

	rseg $$TABKMX61_COTR$main
_KMX61_COTR :
	db	03ch

	rseg $$TABKMX61_WUFTH$main
_KMX61_WUFTH :
	db	03dh

	rseg $$TABKMX61_WUFC$main
_KMX61_WUFC :
	db	03eh

	rseg $$TABKMX61_BTH$main
_KMX61_BTH :
	db	03fh

	rseg $$TABKMX61_BTSC$main
_KMX61_BTSC :
	db	040h

	rseg $$TABKMX61_TEMP_EN_CNTL$main
_KMX61_TEMP_EN_CNTL :
	db	04ch

	rseg $$TABKMX61_SELF_TEST$main
_KMX61_SELF_TEST :
	db	060h

	rseg $$TABKMX61_BUF_THRESH_H$main
_KMX61_BUF_THRESH_H :
	db	076h

	rseg $$TABKMX61_BUF_THRESH_L$main
_KMX61_BUF_THRESH_L :
	db	077h

	rseg $$TABKMX61_BUF_CTRL1$main
_KMX61_BUF_CTRL1 :
	db	078h

	rseg $$TABKMX61_BUF_CTRL2$main
_KMX61_BUF_CTRL2 :
	db	079h

	rseg $$TABKMX61_BUF_CLEAR$main
_KMX61_BUF_CLEAR :
	db	07ah

	rseg $$TABKMX61_BUF_STATUS_REG$main
_KMX61_BUF_STATUS_REG :
	db	07bh

	rseg $$TABKMX61_BUF_STATUS_H$main
_KMX61_BUF_STATUS_H :
	db	07ch

	rseg $$TABKMX61_BUF_STATUS_L$main
_KMX61_BUF_STATUS_L :
	db	07dh

	rseg $$TABKMX61_BUF_READ$main
_KMX61_BUF_READ :
	db	07eh

	rseg $$TABKMX61_SELF_TEST_CFGDAT$main
_KMX61_SELF_TEST_CFGDAT :
	db	00h

	rseg $$TABKMX61_CNTL1_CFGDAT$main
_KMX61_CNTL1_CFGDAT :
	db	013h

	rseg $$TABKMX61_CNTL2_CFGDAT$main
_KMX61_CNTL2_CFGDAT :
	db	00h

	rseg $$TABKMX61_ODCNTL_CFGDAT$main
_KMX61_ODCNTL_CFGDAT :
	db	00h

	rseg $$TABKMX61_TEMP_EN_CNTL_CFGDAT$main
_KMX61_TEMP_EN_CNTL_CFGDAT :
	db	01h

	rseg $$TABKMX61_BUF_CTRL1_CFGDAT$main
_KMX61_BUF_CTRL1_CFGDAT :
	db	00h

	rseg $$TABKMX61_BUF_CTRL2_CFGDAT$main
_KMX61_BUF_CTRL2_CFGDAT :
	db	00h

	rseg $$TAB$$S47$main
$$S47 :
	DB	"\x0a\x0d", 00H

	rseg $$TAB$$S54$main
$$S54 :
	DB	"run\x0d", 00H

	rseg $$TAB$$S139$main
$$S139 :
	DB	"Bulb Fully On\x0a", 00H

	rseg $$TAB$$S143$main
$$S143 :
	DB	"Bulb is Off\x0a", 00H

	rseg $$TAB$$S145$main
$$S145 :
	DB	"Intensity is %f\x0a", 00H

	rseg $$TAB$$S309$main
$$S309 :
	DB	"\x1b[JBU52004GUL> Hall \xef\xbf\xbd?? No Mag Fields Detected.\x0d", 00H

	rseg $$TAB$$S318$main
$$S318 :
	DB	"\x1b[JBU52004GUL> Hall \xef\xbf\xbd?? North Mag Field Detected.\x0d", 00H

	rseg $$TAB$$S327$main
$$S327 :
	DB	"\x1b[JBU52004GUL> Hall \xef\xbf\xbd?? South Mag Field Detected.\x0d", 00H

	rseg $$TAB$$S329$main
$$S329 :
	DB	"\x1b[JBU52004GUL> Hall \xef\xbf\xbd?? Both Mag Fields Detected.\x0d", 00H

	rseg $$TAB$$S333$main
$$S333 :
	DB	"\x1b[JBU52011HFV> Hall \xef\xbf\xbd?? Mag Field Detected.\x0d", 00H

	rseg $$TAB$$S335$main
$$S335 :
	DB	"\x1b[JBU52011HFV> Hall \xef\xbf\xbd?? No Mag Fields Detected.\x0d", 00H

	rseg $$TAB$$S346$main
$$S346 :
	DB	"\x1b[JBH1620FVC> Ambient Light = %lu[lx]\x0d", 00H

	rseg $$TAB$$S348$main
$$S348 :
	DB	"\x1b[JBH1710FVC> Ambient Light = %lu[lx]\x0d", 00H

	rseg $$TAB$$S362$main
$$S362 :
	DB	"\x1b[JBH1730FVC> Ambient Light = %lu[lx]\x0d", 00H

	rseg $$TAB$$S364$main
$$S364 :
	DB	"\x1b[JBH1721FVC> Ambient Light = %lu[lx]\x0d", 00H

	rseg $$TAB$$S366$main
$$S366 :
	DB	"\x1b[JBH1780GLI> Ambient Light = %lu[lx]\x0d", 00H

	rseg $$TAB$$S368$main
$$S368 :
	DB	"\x1b[JML8511> UV Intensity = %.02f[mW/cm2]. Vsenout = %.02f[V]\x0d", 00H

	rseg $$TAB$$S370$main
$$S370 :
	DB	"\x1b[JKX022> AccelX_raw = %d, AccelX_scaled = %.05f[g], AccelY_raw = %d, AccelY_scaled = %.05f[g], AccelZ_raw = %d, AccelZ_scaled = %.05f[g]\x0d", 00H

	rseg $$TAB$$S383$main
$$S383 :
	DB	"\x1b[JKMX61> AccelX_raw = %d, AccelX_scaled = %.05f[g], AccelY_raw = %d, AccelY_scaled = %.05f[g], AccelZ_raw = %d, AccelZ_scaled = %.05f[g]", 00H

	rseg $$TAB$$S433$main
$$S433 :
	DB	"\x0a\x0dKMX61> MagX_raw = %d, MagX_scaled = %.05f[uT], MagY_raw = %d, MagY_scaled = %.05f[uT], MagZ_raw = %d, MagZ_scaled = %.05f[uT]\x1b[F", 00H

	rseg $$TAB$$S435$main
$$S435 :
	DB	"\x1b[JBD1020HFV> Temperature = %.02f[\xc2\xb0C]. Vsenout = %.02f[V]\x0d", 00H

	rseg $$TAB$$S437$main
$$S437 :
	DB	"\x1b[JBDJ0601HFV> Temperature = %.02f[\xc2\xb0C]. Vsenout = %.02f[V]", 00H

	rseg $$TAB$$S440$main
$$S440 :
	DB	"\x0a\x0dBDJ0601HFV> Temperature Threshold Reached.\x1b[F", 00H

	rseg $$TAB$$S442$main
$$S442 :
	DB	"\x0a\x0dBDJ0601HFV> Temperature Threshold Not Reached.\x1b[F", 00H

	rseg $$TAB$$S444$main
$$S444 :
	DB	"\x1b[JBDE0600G> Temperature = %.02f[\xc2\xb0C]. Vsenout = %.02f[V]", 00H

	rseg $$TAB$$S447$main
$$S447 :
	DB	"\x0a\x0dBDE0600G> Temperature Threshold Reached.\x1b[F", 00H

	rseg $$TAB$$S449$main
$$S449 :
	DB	"\x0a\x0dBDE0600G> Temperature Threshold Not Reached.\x1b[F", 00H

	rseg $$TAB$$S451$main
$$S451 :
	DB	"\x1b[JBDJ0550HFV> Temperature = %.02f[\xc2\xb0C]. Vsenout = %.02f[V]", 00H

	rseg $$TAB$$S454$main
$$S454 :
	DB	"\x0a\x0dBDJ0550HFV> Temperature Threshold Reached.\x1b[F", 00H

	rseg $$TAB$$S456$main
$$S456 :
	DB	"\x0a\x0dBDJ0550HFV> Temperature Threshold Not Reached.\x1b[F", 00H

	rseg $$NINITVAR
_PWMSafeDuty :
	ds	02h
_PWMPeriod :
	ds	02h
_SensorIntializationFlag :
	ds	01h
_LEDFlashFlag :
	ds	01h
_LEDChangeFlag :
	ds	01h
_str :
	ds	08h

	rseg $$NVARmain
_KnotsUnit :
	ds	01h
	align
_i :
	ds	02h
_j :
	ds	02h
_KnotsSpeed :
	ds	08h
_Latitude :
	ds	08h
_HomeTolerance :
	ds	08h
_Eleveation :
	ds	02h
_hexToDecOffset :
	ds	02h
_ReceiverState :
	ds	01h
_LonDir :
	ds	01h
_CheckPointIndex :
	ds	02h
_Geoid :
	ds	08h
_Date :
	ds	04h
_val :
	ds	0320h
_LatDest :
	ds	028h
_Course :
	ds	08h
_GSV_Info :
	ds	018h
_PDOP :
	ds	08h
_isTrueNorth :
	ds	01h
	align
_flag :
	ds	02h
_bulbIntensity :
	ds	02h
_fixQuality :
	ds	02h
_checkSum :
	ds	02h
_VDOP :
	ds	08h
_LonDest :
	ds	028h
_prevBulbIntensity :
	ds	08h
_GroundSpeed :
	ds	08h
_bulbEnable :
	ds	02h
_SensorPlatformSelection :
	ds	01h
_LatLonValid :
	ds	01h
_Mode :
	ds	02h
_sigDigits :
	ds	02h
_LatDir :
	ds	01h
	align
_isSettingMode :
	ds	02h
_isNeg :
	ds	02h
_MagDegrees :
	ds	08h
_MagDir :
	ds	01h
	align
_wordIndex :
	ds	02h
_temp :
	ds	01h
_speedUnit :
	ds	01h
_Azimuth :
	ds	02h
_TrueDegrees :
	ds	08h
_Longitude :
	ds	08h
_MSL :
	ds	08h
_MagneticVariation :
	ds	08h
_SNR :
	ds	02h
_buffer :
	ds	014h
_KMHSpeed :
	ds	01h
	align
_GSV_index :
	ds	02h
_word :
	ds	064h
_UTC :
	ds	06h
_PRN_num :
	ds	02h
_numSat :
	ds	02h
_GSV_numMessage :
	ds	02h
_HDOP :
	ds	08h
_SV_ID :
	ds	018h
_isMagNorth :
	ds	01h

	rseg $$NINITTAB
	align

	rseg $$NINITVAR
	align
	extrn code : __faddu8sw
	extrn code : __fsubu8sw
	extrn code : __fcmpu8sw
	extrn code : __fmulu8sw
	extrn code : __fdivu8sw
	extrn code : __fildu8sw
	extrn code : __ftolu8sw
	extrn code : __ftodu8sw
	extrn code : __daddu8sw
	extrn code : __dcmpu8sw
	extrn code : __dmulu8sw
	extrn code : __ddivu8sw
	extrn code : __dildu8sw
	extrn code : __fuldu8sw
	extrn code : __duldu8sw

	end
